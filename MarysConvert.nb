(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    187703,       4367]
NotebookOptionsPosition[    182783,       4214]
NotebookOutlinePosition[    183163,       4231]
CellTagsIndexPosition[    183120,       4228]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Deriving the empirical correlation function and fitting a curve to it\
\>", "Title",
 CellChangeTimes->{{3.662411661666781*^9, 3.662411661991362*^9}, {
  3.66241207575276*^9, 3.6624121230880127`*^9}}],

Cell[TextData[{
 "Translating from \[OpenCurlyDoubleQuote]Towards a unified descriptive \
theory for spatial ecology\[CloseCurlyDoubleQuote] (who only provide a PDF of \
their ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook!)"
}], "Subtitle",
 CellChangeTimes->{{3.662412134962429*^9, 3.662412156210373*^9}, {
  3.662412505400652*^9, 3.662412516577264*^9}}],

Cell["\<\
M Scott & M Osmond
2016 January 21\
\>", "Subsubtitle",
 CellChangeTimes->{{3.662412158914653*^9, 3.662412165506485*^9}, {
  3.662412525465302*^9, 3.6624125326489677`*^9}}],

Cell[CellGroupData[{

Cell["Method with random data", "Section",
 CellChangeTimes->{{3.66275569694698*^9, 3.662755710058949*^9}}],

Cell["\<\
Define the spatial extent of the area of interest (e.g., Barro Colorado \
Island)\
\>", "Text",
 CellChangeTimes->{{3.662411468482938*^9, 3.6624114723466263`*^9}, {
  3.662412173377927*^9, 3.662412192666273*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Lx", ",", "Ly"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "500"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "total", " ", "x", " ", "and", " ", "y", " ", "distance", " ", "of", " ", 
     "area", " ", "of", " ", "interest"}], ",", " ", 
    RowBox[{
    "ie", " ", "a", " ", "grid", " ", "with", " ", "length", " ", "Lx", " ", 
     "and", " ", "width", " ", "Ly"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Asub", "=", "100"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"space", " ", "between", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "we", " ", "chop", " ", "up", " ", "the", " ", "total", " ", 
      "area", " ", "into", " ", "squares", " ", "with", " ", "length", " ", 
      "Asub"}], ";", " ", 
     RowBox[{
     "best", " ", "if", " ", "this", " ", "divides", " ", "the", " ", "total",
       " ", "space", " ", "nicely"}]}], ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"Lx", "/", "Asub"}], " ", "and", " ", 
     RowBox[{"Ly", "/", "Asub"}], " ", "are", " ", "integers"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624105632177896`*^9, 3.662410563388131*^9}, {
   3.662410642111521*^9, 3.6624106433361464`*^9}, {3.6624113185715933`*^9, 
   3.6624113205874157`*^9}, 3.6624118299636374`*^9, {3.662412200746975*^9, 
   3.66241233394919*^9}}],

Cell["\<\
Make up the data (because the authors suck at making it available)\
\>", "Text",
 CellChangeTimes->{{3.6623967906428547`*^9, 3.66239684459477*^9}, 
   3.662396960068564*^9, {3.6624123100515614`*^9, 3.662412361372697*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numplots", "=", "10000"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", 
    RowBox[{"plots", "/", "datapoints"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Lx"}], "}"}], "]"}], "]"}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Ly"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", "10", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "locations", " ", "of", " ", 
     "each", " ", "plot"}], ",", " ", 
    RowBox[{"species", " ", "code", " ", "of", " ", "each", " ", "plot"}], 
    ",", 
    RowBox[{
    "abundance", " ", "of", " ", "that", " ", "species", " ", "in", " ", 
     "each", " ", "plot"}]}], "*)"}], " "}]}], "Input",
 CellChangeTimes->{{3.662406789653805*^9, 3.662406801493565*^9}, 
   3.6624068355453568`*^9, {3.6624068840528297`*^9, 3.662406909245325*^9}, {
   3.662407072563799*^9, 3.662407104474935*^9}, 3.662408757424716*^9, {
   3.662408793027438*^9, 3.662408836844111*^9}, 3.6624105559804363`*^9, {
   3.662411250826935*^9, 3.6624112514645576`*^9}, {3.6624113858900433`*^9, 
   3.662411406665563*^9}, {3.6624123720937433`*^9, 3.662412388150242*^9}, {
   3.6624124634782267`*^9, 3.662412473070211*^9}, {3.662755105226478*^9, 
   3.662755177567297*^9}}],

Cell["\<\
Get each variable of interest from data table\
\>", "Text",
 CellChangeTimes->{{3.662411487805341*^9, 3.6624115162679358`*^9}, {
  3.66241239544563*^9, 3.662412400485498*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gx", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"x", " ", "coordinates", " ", "of", " ", "all", " ", "plots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gy", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"y", " ", "coordinates", " ", "of", " ", "all", " ", "plots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sp", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "data", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"species", " ", "code", " ", "for", " ", "each", " ", "plot"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ab", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "data", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"species", " ", "abundance", " ", "at", " ", "each", " ", "plot"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394854259613*^9, 3.6623948971517143`*^9}, {
   3.6623949767533827`*^9, 3.662394977232485*^9}, 3.662395418640141*^9, {
   3.662395615527067*^9, 3.6623956156540813`*^9}, {3.662396523289652*^9, 
   3.662396541418125*^9}, {3.662396815443509*^9, 3.662396912669395*^9}, {
   3.662412409630423*^9, 3.662412412742033*^9}}],

Cell["\<\
Some summary statistics of the data\
\>", "Text",
 CellChangeTimes->{{3.6624115004831676`*^9, 3.6624115190117893`*^9}, {
  3.662412416239183*^9, 3.662412426541686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Uspecie", "=", 
    RowBox[{"Union", "[", "sp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Nspecies", "=", 
    RowBox[{"Length", "[", "Uspecie", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TotAbundance", "=", 
    RowBox[{"Total", "[", "ab", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"total", " ", "abundance"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "species"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394155397892*^9, 3.662394208972786*^9}, {
  3.66239435484977*^9, 3.662394355553513*^9}, {3.662394932920998*^9, 
  3.662394933324882*^9}, {3.662396920669482*^9, 3.662396931205062*^9}, {
  3.662411451991355*^9, 3.662411457827334*^9}, {3.662412431854793*^9, 
  3.6624124470392838`*^9}}],

Cell["\<\
Defining the coordinate system of the area\
\>", "Text",
 CellChangeTimes->{{3.6624115301840067`*^9, 3.662411532736253*^9}, 
   3.662412483413187*^9, {3.6624127080035973`*^9, 3.6624127139072323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allpos", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Lx", "/", "Asub"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Ly", "/", "Asub"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"coordinates", ",", " ", 
    RowBox[{"in", " ", "translated", " ", "form"}], ",", " ", 
    RowBox[{"ie", ".", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyCpos", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "i"}], "+", "1"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "j"}], "+", "1"}], ")"}], "/", "2"}]}], "}"}],
          "//", " ", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Lx", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ly", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], 
         "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"halfway", " ", "points", " ", "between", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "use", " ", "later", " ", "to", " ", "derive", 
     " ", "the", " ", "distances", " ", "between", " ", "centers", " ", "of", 
     " ", "each", " ", "\"\<bin\>\"", " ", 
     RowBox[{"(", 
      RowBox[{"area", " ", "below", " ", 
       RowBox[{"(", "south", ")"}], " ", "and", " ", "to", " ", "left", " ", 
       RowBox[{"(", "west", ")"}], " ", "of", " ", "each", " ", 
       "coordinate"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allpair", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"allpos", ",", "allpos"}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pairs", " ", "of", " ", "each", " ", "translated", " ", "coordinate", 
     " ", "with", " ", "each", " ", "other"}], ",", " ", 
    RowBox[{"e", ".", "g", "."}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "allpos", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", 
    RowBox[{"coordinates", "/", "bins"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395041124155*^9, 3.662395076995739*^9}, 
   3.662396503297634*^9, {3.662397225252562*^9, 3.66239727282128*^9}, {
   3.662397305190036*^9, 3.662397317542131*^9}, {3.662402580564127*^9, 
   3.662402589155075*^9}, {3.6624125591567297`*^9, 3.662412674941476*^9}, {
   3.6624128238176327`*^9, 3.662412840042054*^9}}],

Cell["\<\
Locations of plots (the bin they are in)\
\>", "Text",
 CellChangeTimes->{{3.662411540064125*^9, 3.662411543224874*^9}, 
   3.66241271663524*^9, {3.6624129056691236`*^9, 3.662412919045101*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gx", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"p", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"which", " ", "plots", " ", 
     RowBox[{"(", 
      RowBox[{
      "their", " ", "position", " ", "in", " ", "the", " ", "data", " ", 
       "vector"}], ")"}], " ", "have", " ", "x", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "x", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "p", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Lx", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gy", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"q", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "which", " ", "plots", " ", "have", " ", "y", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "y", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "q", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Ly", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule1", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "from", " ", "coordinates", " ", 
    RowBox[{"(", "tuple", ")"}], " ", "to", " ", "single", " ", "identifying",
     " ", "number"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule2", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "back"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYpos", "[", 
     RowBox[{"{", 
      RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
    RowBox[{"Intersection", "[", 
     RowBox[{
      RowBox[{"Xpos", "[", "p", "]"}], ",", 
      RowBox[{"Ypos", "[", "q", "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"which", " ", "plots", " ", "have", " ", "location", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}], " ", "within", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", 
      RowBox[{"x", " ", "p"}]}], ")"}], " ", "and", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"y", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", " ", 
      RowBox[{"y", " ", "p"}]}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"possub", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{"XYpos", ",", "allpos"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "which", " ", "plots", " ", "fall", " ", "in", " ", "which", " ", "bin", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"e", ".", "g", "."}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", ",", "y"}], ")"}], "=", 
       RowBox[{"(", 
        RowBox[{"321", ",", "434"}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"with", " ", "Asub"}], "=", "100"}], ",", " ", 
      RowBox[{"would", " ", "fall", " ", "in", " ", 
       RowBox[{"(", 
        RowBox[{"400", ",", "500"}], ")"}]}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395292209701*^9, 3.662395537499296*^9}, {
  3.6623960553689823`*^9, 3.662396067946538*^9}, {3.662397974196926*^9, 
  3.662398051690569*^9}, {3.6623981180157757`*^9, 3.6623981500469017`*^9}, {
  3.6623982769015217`*^9, 3.662398325149023*^9}, {3.66239886727868*^9, 
  3.662398876830975*^9}, {3.6623994181640377`*^9, 3.66239950349568*^9}, {
  3.6623997780956163`*^9, 3.6623998470706177`*^9}, {3.6624129296834784`*^9, 
  3.662412931482998*^9}}],

Cell["Which species are where", "Text",
 CellChangeTimes->{{3.66241155496421*^9, 3.66241156097239*^9}, {
  3.6624129435894413`*^9, 3.662412950140648*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYS", "[", "i_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gx", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"gy", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gives", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "location", " ", "of", " ", 
     "plots"}], ",", " ", 
    RowBox[{"and", " ", "sp", " ", "code"}], ",", " ", 
    RowBox[{"in", " ", "each", " ", "bin"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SabA", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
     "&"}], "/@", " ", "Uspecie"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "with", " ", "each", " ", 
    "species", " ", "in", " ", "each", " ", "bin"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SA", "[", "i_", "]"}], ":=", 
   RowBox[{"Boole", "/@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"sp", "[", 
          RowBox[{"[", 
           RowBox[{"possub", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", " ", "Uspecie"}], ")"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "at", " ", "least", " ", "one", " ", "plot", " ", 
     "with", " ", "a", " ", "species", " ", "in", " ", "given", " ", "bin"}], 
    ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"presence", "/", "absence"}], " ", "in", " ", "bin"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Spos", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SA", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "possub", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"table", " ", "with", " ", "all", " ", "bins"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395558546788*^9, 3.662395590718184*^9}, {
   3.662395637422887*^9, 3.662395855679844*^9}, {3.662396084462902*^9, 
   3.662396093135119*^9}, {3.6624000366580553`*^9, 3.6624000612422333`*^9}, {
   3.662400105056695*^9, 3.66240013763741*^9}, {3.662400198268684*^9, 
   3.662400203847021*^9}, {3.662400283268598*^9, 3.662400340107189*^9}, {
   3.662400370913103*^9, 3.662400403535512*^9}, {3.662400442030035*^9, 
   3.662400450460515*^9}, {3.662400495985153*^9, 3.662400502456811*^9}, {
   3.662401369958474*^9, 3.6624013885339117`*^9}, 3.6624017363239193`*^9, {
   3.662412958541737*^9, 3.662413003201478*^9}}],

Cell["\<\
Covariance in species abundance by distances\
\>", "Text",
 CellChangeTimes->{{3.662411564012209*^9, 3.662411577084908*^9}, {
  3.662413007593816*^9, 3.6624130216361732`*^9}, {3.662413321726729*^9, 
  3.6624133250631638`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ")"}], "^", "2"}], "]"}], 
    "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Euclidean", " ", "distance", " ", "between", " ", "center", " ", "of", 
    " ", "two", " ", "bins", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"in", " ", "translated", " ", "space"}], ";", " ", 
       RowBox[{
       "need", " ", "to", " ", "multiply", " ", "by", " ", "Asub", " ", "to", 
        " ", "get", " ", "real", " ", "distances"}]}], ",", " ", 
      RowBox[{"which", " ", "we", " ", "do", " ", "later"}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"not", " ", "sure", " ", "what", " ", "this", " ", "does"}], ",", 
    " ", 
    RowBox[{"but", " ", "doesnt", " ", "hurt"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alldist", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"dist", ",", 
      RowBox[{"allpair", "/.", "rule1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "distance", " ", "between", " ", "center", " ", "of", " ", "all", " ", 
    "pairs", " ", "of", " ", "bins"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rvec", "=", 
    RowBox[{"Union", "[", "alldist", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "unique", " ", "distances", " ", "in", " ", "increasing", " ", 
    "order"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"indexpair", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"index", ",", 
      RowBox[{"allpair", "/.", " ", "rule1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "translate", " ", "from", " ", "tuples", " ", "of", " ", "coordinates", 
    " ", "to", " ", "pairs", " ", "of", " ", "coordinate", " ", "indices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"posdist", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"alldist", ",", "#"}], "]"}], "&"}], "/@", " ", "rvec"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "identify", " ", "coordinate", " ", "index", " ", "pairs", " ", "whose", 
    " ", "bin", " ", "centers", " ", "are", " ", "given", " ", "distance", 
    " ", "apart"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cov", "[", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"SabA", "[", "i", "]"}], " ", 
        RowBox[{"SabA", "[", "j", "]"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "i", "]"}], "]"}], " ", 
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<covariance\>\"", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "bins"}], ",", " ", 
    RowBox[{
    "note", " ", "that", " ", "the", " ", "\"\<covariance\>\"", " ", "is", 
     " ", "taken", " ", "over", " ", "all", " ", "species"}], ",", " ", 
    RowBox[{
    "ie", " ", "\"\<covariance\>\"", " ", "in", " ", "community", " ", 
     "composition"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allcov", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"Cov", ",", 
        RowBox[{"indexpair", "[", 
         RowBox[{"[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"posdist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "covaraiance", " ", "in", " ", "number", " ", "of", " ", "plots", " ", 
    "with", " ", "species", " ", "at", " ", "each", " ", "distance"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/VTqeGC552tH62AI7diQEwWiWRJN60H0P6stC0G0
4OwJS0B0X9PT0gogvcdXoQJEP9l4v6MSSHM0ufaA6IQXE6aC6AnrPaaD6JSr
5+eB6PXT5BaA6NsxWktA9DVP+RUgetNasU0gWonj/BYQ3aN99CCI3nB9/SEQ
vWbdlisg+sm30Ksg2mV6zRMQbfX23UsQ/W7mkXcgWujiqw8gehlPkVAVkBa9
1ikBoss2rp5TD6RrQtUXguhFznWrQbRGXOQaEH3++8mjILrLKucUiLba338B
ROfs+f4ARBsl5jeoeQH9NbkKTLfnHWgF0Ub5V9rAfEezXSBaxO7GHhANAJPY
q7k=
  "]],

Cell["\<\
Our empirical correlation function\
\>", "Text",
 CellChangeTimes->{{3.662411583164523*^9, 3.6624115898929653`*^9}, {
  3.662413328936442*^9, 3.662413339075227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"empPCF", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvec", "*", "Asub"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", "allcov"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"empirical", " ", "correlation", " ", "function"}], ",", " ", 
    RowBox[{"PCF", ";", " ", 
     RowBox[{
     "first", " ", "element", " ", "of", " ", "each", " ", "pair", " ", "is", 
      " ", "the", " ", 
      RowBox[{"(", "untranslated", ")"}], " ", "distance", " ", "between", 
      " ", "the", " ", "center", " ", "of", " ", "two", " ", "bins", " ", 
      RowBox[{"(", 
       RowBox[{"rvec", "*", "Asub"}], ")"}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", "mean", 
     " ", "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "all", " ", "pairs", 
     " ", "of", " ", "bins", " ", "that", " ", "distance", " ", "apart"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.662401751323216*^9, 3.662401767856126*^9}, {
  3.6624018026823177`*^9, 3.662401805136237*^9}, {3.662402598586731*^9, 
  3.662402656960024*^9}, {3.662403448724161*^9, 3.662403449356001*^9}, {
  3.662413682182837*^9, 3.662413751871039*^9}}],

Cell["which looks like this", "Text",
 CellChangeTimes->{{3.662413762951601*^9, 3.662413766590012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"empPCF", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662402671244444*^9, 3.6624026938166847`*^9}, {
  3.6624027307213984`*^9, 3.6624027646607313`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQMRL7gZTTQ/2EN4kQ7vFzTf/MT8wX5HmvCB6rWJ
DmceN+3LZIXJZzp4ifbYzgDy3fJkH2d9znZ4/3dRRMz391D1hQ5XH8i+vAjk
g5UfKHJoP7PzlC3bB/vI6b/eLjlc7LCxo2DqFiagfr6csw87yhzef3Z+9xNu
fqXDJsakb7uB9kc/KhL4caTSgWnqs+/9X97bC0vJLrBsqXJYL67lv4cbZn+1
g+e0ByuqYfY51Du0LFizMInlg/2HrJ6UvHv1DtG5j2cyMgDVv1p8QPFKg4OR
SfLSU3D3Njpsz325q5Djg/318C2fDlk0OfDr3ZtdzAR1z4Emh6bfmwUqfr63
52VRO2LK1Owg/6jlJycTzD/NDg88fzr3fHhvb/Gf5UY9U4vDzikdRaeB5m0V
CtOa8K3FweLEJGZWDqh5D1odNhZI1SYyfrBPc5DYcEuizcHAeHdE7tf30PBo
cwjZEcVXDTT/3JeYRrEDbQ4lKfvVHgPDr8KROXTemXYHXWlrQefXUP8ydDpk
1XlE9AD9+3QzR/I5w06HKxtX8L9mhIVfp8POTRsnzQG6z55hwnfjzV0OBl6n
Hl1hhIVft8Pc1MwjH35CzVPocbDosclleg8Mn8khD/x8ehw4SgUOt35+b3/R
o3DLovM9DpEZK+YyvXtvz/r4e0r50l6HG/e4Pu14+d7+p9lrYbHjfQ7vd8++
v0Hggz0A6Z8WOg==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9972805716888287},
  Method->{},
  PlotRange->{{0, 984.8857801796104}, {0.9972805716888287, 
    1.0064883774923237`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.00018415611606990013`, 0.00018415611606990013`}}]], "Output",
 CellChangeTimes->{{3.6624026753490877`*^9, 3.662402694224242*^9}, {
   3.662402733657669*^9, 3.662402764957795*^9}, 3.662403280700993*^9, 
   3.662405717953288*^9, 3.6624062969674873`*^9, 3.662406329773899*^9, 
   3.662406416186351*^9, 3.662406804603773*^9, 3.66240683746817*^9, {
   3.662406886173161*^9, 3.66240691093393*^9}, {3.6624069838326597`*^9, 
   3.662407012312221*^9}, {3.662407083140224*^9, 3.662407106243676*^9}, {
   3.662407909118041*^9, 3.662407928023505*^9}, 3.662408841453096*^9, 
   3.662408905364181*^9, {3.6624089446938267`*^9, 3.6624089748889437`*^9}, {
   3.6624090129800463`*^9, 3.6624090870484447`*^9}, 3.662409222978368*^9, 
   3.662410582890629*^9, 3.662410645396593*^9, 3.662411257144088*^9, 
   3.662411323604559*^9, 3.662411410305233*^9, 3.6624114593953867`*^9, 
   3.662411831491273*^9, 3.6627548268499537`*^9, 3.6627551177774353`*^9, 
   3.6627551888229713`*^9, 3.662831740702335*^9, {3.662836389181806*^9, 
   3.662836411845252*^9}, 3.662842910757452*^9}]
}, Open  ]],

Cell["\<\
Fitting the function to the data\
\>", "Text",
 CellChangeTimes->{{3.6624116006129713`*^9, 3.662411617797512*^9}, 
   3.6624137709835*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Rho]", "\[Lambda]"], ")"}], "2"], 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       FractionBox["r", "\[Lambda]"]}], "]"}]}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "function", " ", "to", " ", "fit", " ", "to", " ", "the", " ", "empirical",
     " ", "PCF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"what", " ", "does", " ", "this", " ", 
    RowBox[{"do", "?"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fitcor", "=", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{
      RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
      RowBox[{"g", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", 
          SuperscriptBox["10", "9"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Rho]", ",", "0.1"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fit", " ", "the", " ", "function"}], ",", " ", 
    RowBox[{"with", " ", "some", " ", "parameter", " ", "guesses"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624027871760187`*^9, 3.662402882159881*^9}, {
  3.662403440956188*^9, 3.662403443083897*^9}, {3.662413819411948*^9, 
  3.662413832425786*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(-0.0009640213630139893`\\)\\) - \
\\(\\(9.123021487450879`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.0013215486380770969`\\)\\) - \\(\\(9.123021487450946`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.0013658909022802312`\\)\\) - \
\\(\\(9.123021487451074`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.0010545986952498199` \[VeryThinSpace]\\)\\) - \
\\(\\(9.123021487451138`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.0009985396327228946` \[VeryThinSpace]\\)\\) - \
\\(\\(9.123021487451333`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \\(\\(\
\[LeftSkeleton] 27 \[RightSkeleton]\\)\\), \\(\\(\\(\\(0.002074038169319614` \
\[VeryThinSpace]\\)\\) - \\(\\(9.123021487456067`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(0.0015231313849133343` \
\[VeryThinSpace]\\)\\) - \\(\\(9.123021487456131`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(0.0021960182900685465` \
\[VeryThinSpace]\\)\\) - \\(\\(9.123021487456326`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(0.0027194283111713347` \
\[VeryThinSpace]\\)\\) - \\(\\(9.12302148745665`*^-20\\\\ \[ImaginaryI]\\)\\)\
\\)\\), \\(\\(\\(\\(-0.004074929685653705`\\)\\) - \
\\(\\(9.123021487457105`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\)}\\)\[NoBreak] is \
not a list of real numbers with dimensions \[NoBreak]\\!\\({37}\\)\[NoBreak] \
at \[NoBreak]\\!\\({\[Lambda], \[Rho]}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(\\(-5.930925601728451`*^8\\)\\), 0.2533417831048677`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", ButtonNote -> \
\\\"NonlinearModelFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6628429108482513`*^9}]
}, Open  ]],

Cell["How good is the fit?", "Text",
 CellChangeTimes->{{3.662413841744823*^9, 3.662413844902369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
        ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "fit"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662403357573029*^9, 3.662403400917585*^9}, {
  3.662403460732779*^9, 3.662403460900476*^9}, {3.6624035271260643`*^9, 
  3.6624035294532757`*^9}, {3.662403567283935*^9, 3.662403568012061*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.9999972634287999`"},
    {"\<\"AIC\"\>", 
     RowBox[{"-", "364.9703077644494`"}]},
    {"\<\"BIC\"\>", 
     RowBox[{"-", "360.13755402651674`"}]},
    {"\<\"RSquared\"\>", "0.9999974113515676`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.662403402411786*^9, 3.662405718090724*^9, 3.662406297155188*^9, 
   3.662406329946666*^9, {3.662406416486521*^9, 3.662406429860981*^9}, 
   3.66240680481929*^9, 3.662406837703083*^9, {3.662406886374895*^9, 
   3.662406911136054*^9}, {3.662406983975531*^9, 3.662407012481901*^9}, {
   3.66240708327638*^9, 3.662407106382594*^9}, {3.6624079092705507`*^9, 
   3.662407928171085*^9}, 3.662408841597978*^9, 3.662408905666217*^9, {
   3.662408944842497*^9, 3.6624089750086527`*^9}, {3.662409013114809*^9, 
   3.662409087167595*^9}, 3.6624092231154623`*^9, 3.6624105830350018`*^9, 
   3.662410645530094*^9, 3.662411257241982*^9, 3.6624113237579403`*^9, 
   3.662411410461595*^9, 3.662411459544739*^9, 3.662411831637423*^9, 
   3.662754827083612*^9, 3.662755117964517*^9, 3.6627551888890533`*^9, 
   3.6628317407846193`*^9, {3.662836389282175*^9, 3.662836411928933*^9}, 
   3.6628429109027643`*^9}]
}, Open  ]],

Cell["\<\
What are our parameter estimates?\
\>", "Text",
 CellChangeTimes->{{3.6624138505438223`*^9, 3.662413855414859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Rho]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662403541170051*^9, 3.662403579627411*^9}, {
  3.662413877368452*^9, 3.662413935628236*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", 
      RowBox[{"-", "5.930925601728451`*^8"}], 
      RowBox[{"1.4762935980453694`*^26", "+", 
       RowBox[{"6.193882237991507`*^17", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "4.0174431492360794`*^-18"}], "+", 
       RowBox[{"1.6855434310045212`*^-26", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.0614994499602783`*^-22", " ", "\[ImaginaryI]"}]}]},
     {"\[Rho]", "0.2533417831048677`", 
      RowBox[{"6.092637885328453`*^16", "-", 
       RowBox[{"4.7716512190577025`*^14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"4.157907452462406`*^-18", "+", 
       RowBox[{"3.2564029797417994`*^-20", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "-", 
       RowBox[{"2.915042296661365`*^-19", " ", "\[ImaginaryI]"}]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.6624139079167*^9}, 
   3.662754827139021*^9, 3.66275511801717*^9, 3.662755188904523*^9, 
   3.662831740829299*^9, {3.66283638933211*^9, 3.662836411974605*^9}, 
   3.6628429109433813`*^9}]
}, Open  ]],

Cell["\<\
Or if you like confidence intervals better...\
\>", "Text",
 CellChangeTimes->{{3.662413938361573*^9, 3.662413946160007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"get", " ", "confidence", " ", "intervals", " ", "too"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{3.662413934755294*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", 
      RowBox[{"-", "5.930925601728451`*^8"}], 
      RowBox[{"1.4762935980453694`*^26", "+", 
       RowBox[{"6.193882237991507`*^17", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2.9970353378171248`*^26"}], "-", 
         RowBox[{"1.2574249437995517`*^18", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"2.9970353378171248`*^26", "+", 
         RowBox[{"1.2574249437995517`*^18", " ", "\[ImaginaryI]"}]}]}], "}"}]},
     {"\[Rho]", "0.2533417831048677`", 
      RowBox[{"6.092637885328453`*^16", "-", 
       RowBox[{"4.7716512190577025`*^14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.2368712474963677`*^17"}], "+", 
         RowBox[{"9.686966970654441`*^14", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"1.2368712474963677`*^17", "-", 
         RowBox[{"9.686966970654441`*^14", " ", "\[ImaginaryI]"}]}]}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.66241392002323*^9}, 
   3.662754827573681*^9, 3.6627551183942013`*^9, 3.6627551889387608`*^9, 
   3.662831740870338*^9, {3.662836389367111*^9, 3.662836412025456*^9}, 
   3.662842910985961*^9}]
}, Open  ]],

Cell["\<\
Plot fitted curve with data points\
\>", "Text",
 CellChangeTimes->{{3.662413956438634*^9, 3.662413969480398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
      RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Prolog", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
      RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.662403769406761*^9, 3.662403992597126*^9}, {
  3.662404042064361*^9, 3.6624041243000097`*^9}, {3.662404161267418*^9, 
  3.662404199527317*^9}, {3.662405800170576*^9, 3.6624058024493113`*^9}, {
  3.66240792592798*^9, 3.662407926379305*^9}, {3.662413951485792*^9, 
  3.66241399528541*^9}, {3.662755240062652*^9, 3.662755249022591*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbvSuqtS+KsdAxh8sD/ckj/xX4iyA4wv/8bc4W+I
MZzf0X1qhYKqC5zv93bDqj9vfeF8lxUTGG8fCobz9/InbDv5LQLOj4s9nX71
Yiycn/fh2YTKrkQ4v3NT1+H98ilw/o70mpIpHWlw/rXtOzWLVDPhfPbfLrH3
pmbD+VP3FT1j/JWLMI/vm6W4ZwGcH7j95v4vdYVw/gTdx8evnSuC8/893ls1
RaIEzv86eX+OpE8pnJ8i+PzBopllcH5Mh+mUzxfK4fwzZ1ae9FCqhPOzAt+v
rMytgvMnnY8+WbioGs43lH6XlfexBs6PSljubaRVB+dvfGp4/WJMPZzvIFP4
aVdIA5yfe+jOjA/vEfxQ/+gGjRmNCH6Nk62fbROcL6m2d2b4dQR/5jYv8+S6
Zjj/3uHskiCpFjjfqvBrm/5mBD+IddItvshWOF9f7NDZi58R/OO8rEzTZ7fB
+SpNt6/aW7TD+TOmSdVfu4jgn5iYk5lf0QHn7+UM+vxauBPOz8vw2pe1B8E3
S18ddz2xC84//Gj+PPU/CD6363L5qsXdcL6EipPDBvseON9msavZlRsIvgxn
TO6vul44/+BrVhcWqT44/9emzWq9BQi+SVUip9hxBB8AZ6kESw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"g(r)\"", TraditionalForm], None}, {
     FormBox["\"Distance (m)\"", TraditionalForm], None}},
  ImageSize->800,
  LabelStyle->{FontFamily -> "Times", FontSize -> 12},
  Method->{},
  PlotLabel->FormBox["\"Pair correlation function\"", TraditionalForm],
  PlotRange->{{0, 984.8857801796104}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, 
    Scaled[0.02]},
  Prolog->{
    RGBColor[1, 0, 0], 
    PointSize[0.005], {
     PointBox[{0., 1.0100593605880217`}], 
     PointBox[{100., 1.000964021363014}], 
     PointBox[{141.4213562373095, 1.001321548638077}], 
     PointBox[{200., 1.0013658909022802`}], 
     PointBox[{223.60679774997897`, 0.9989454013047502}], 
     PointBox[{282.842712474619, 0.9990014603672771}], 
     PointBox[{300., 1.0015237730956714`}], 
     PointBox[{316.22776601683796`, 1.000660499332792}], 
     PointBox[{360.5551275463989, 1.0014590556377205`}], 
     PointBox[{400., 1.0009116768197655`}], 
     PointBox[{412.31056256176606`, 0.9986038057146802}], 
     PointBox[{424.2640687119285, 1.0028651325569446`}], 
     PointBox[{447.21359549995793`, 0.9989603327164299}], 
     PointBox[{500., 1.0010706248667995`}], 
     PointBox[{509.9019513592784, 1.000001526953233}], 
     PointBox[{538.5164807134504, 0.9989979963517099}], 
     PointBox[{565.685424949238, 1.0020615864985822`}], 
     PointBox[{583.0951894845301, 1.0005985344495263`}], 
     PointBox[{600., 0.9992027593833515}], 
     PointBox[{608.276253029822, 1.0004977938498383`}], 
     PointBox[{632.4555320336759, 0.9981137588131865}], 
     PointBox[{640.3124237432849, 1.0021471475568389`}], 
     PointBox[{670.820393249937, 1.0019579066834137`}], 
     PointBox[{700., 1.0003371130797343`}], 
     PointBox[{707.1067811865476, 0.9987093670875762}], 
     PointBox[{721.1102550927978, 1.0006056366651324`}], 
     PointBox[{728.0109889280518, 1.0016814721659815`}], 
     PointBox[{761.5773105863909, 0.997468503622121}], 
     PointBox[{800., 1.0011104057847668`}], 
     PointBox[{806.2257748298549, 1.00046831242354}], 
     PointBox[{824.6211251235321, 0.9981215348357956}], 
     PointBox[{854.4003745317531, 1.0004471644393895`}], 
     PointBox[{894.4271909999159, 0.9992603145757816}], 
     PointBox[{900., 0.9979259618306804}], 
     PointBox[{905.5385138137417, 0.9984768686150867}], 
     PointBox[{921.9544457292888, 0.9978039817099315}], 
     PointBox[{948.6832980505138, 0.9972805716888287}], 
     PointBox[{984.8857801796104, 1.0040749296856537`}]}}]], "Output",
 CellChangeTimes->{{3.662403931872311*^9, 3.662403961748376*^9}, 
   3.6624039930219793`*^9, {3.662404054020718*^9, 3.662404124635461*^9}, {
   3.6624041628226557`*^9, 3.662404177212069*^9}, 3.662405718219399*^9, 
   3.6624058028929377`*^9, 3.662406297284313*^9, 3.662406330073842*^9, 
   3.6624064172534*^9, 3.662406804946733*^9, 3.6624068387016277`*^9, {
   3.662406887024851*^9, 3.66240691165195*^9}, {3.662406984216867*^9, 
   3.6624070126147203`*^9}, {3.66240708340755*^9, 3.6624071065110817`*^9}, {
   3.662407909400408*^9, 3.662407928325042*^9}, 3.662408841770507*^9, 
   3.6624089062315893`*^9, {3.662408945263624*^9, 3.662408975140057*^9}, {
   3.662409013246416*^9, 3.662409087299986*^9}, 3.662409223247031*^9, 
   3.662410583174616*^9, 3.662410645662326*^9, 3.662411257398282*^9, 
   3.66241132393871*^9, 3.6624114105907393`*^9, 3.6624114596960697`*^9, 
   3.662411831774963*^9, 3.6627548277165937`*^9, 3.662755118552618*^9, 
   3.662755188969701*^9, {3.6627552441558857`*^9, 3.662755249340041*^9}, 
   3.662831740935713*^9, {3.6628363894164143`*^9, 3.66283641207456*^9}, 
   3.6628429110308247`*^9}]
}, Open  ]],

Cell["\<\
Plot fitted curve with confidence bands\
\>", "Text",
 CellChangeTimes->{{3.6624140170269537`*^9, 3.662414017625156*^9}, {
  3.662414059835639*^9, 3.662414068251809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bands90", "[", "x_", "]"}], ",", 
      RowBox[{"bands95", "[", "x_", "]"}], ",", 
      RowBox[{"bands99", "[", "x_", "]"}], ",", 
      RowBox[{"bands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fitcor", "[", 
       RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
        RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"cl", ",", 
        RowBox[{"{", 
         RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitcor", "[", "r", "]"}], ",", 
       RowBox[{"bands90", "[", "r", "]"}], ",", 
       RowBox[{"bands95", "[", "r", "]"}], ",", 
       RowBox[{"bands99", "[", "r", "]"}], ",", 
       RowBox[{"bands999", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"3", " ", "\[Rule]", 
         RowBox[{"{", "2", "}"}]}], ",", 
        RowBox[{"4", " ", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}], ",", 
        RowBox[{"5", " ", "\[Rule]", 
         RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662404221668598*^9, 3.662404310745612*^9}, 
   3.662414014514715*^9, {3.662755211342601*^9, 3.662755231736133*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQGRDu8XNN/8xPzBfkea8IHqtYkOZx437ctk/WAP
kc908BLtsZ0B5LvlyT7O+pzt8P7vooiY7++h6gsdrj6QfXkRyAcrP1Dk0H5m
5ylbtg/2kdN/vV1yuNhhY0fB1C1MQP18OWcfdpQ5vP/s/O4n3PxKh02MSd92
A+2PflQk8ONIpQPT1Gff+7+8txeWkl1g2VLlsF5cy38PN8z+agfPaQ9WVMPs
c6h3aFmwZmESywf7D1k9KXn36h2icx/PZGQAqn+1+IDilQYHI5Pkpafg7m10
2J77clchxwf76+FbPh2yaHLg17s3u5gJ6p4DTQ5NvzcLVPx8b8/LonbElKnZ
Qf5Ry09OJph/mh0eeP507vnw3t7iP8uNeqYWh51TOopOA83bKhSmNeFbi4PF
iUnMrBxQ8x60OmwskKpNZPxgn+YgseGWRJuDgfHuiNyv76Hh0eYQsiOKrxpo
/rkvMY1iB9ocSlL2qz0Ghl+FI3PovDPtDrrS1oLOr6H+Zeh0yKrziOgB+vfp
Zo7kc4adDlc2ruB/zQgLv06HnZs2TpoDdJ89w4Tvxpu7HAy8Tj26wggLv26H
uamZRz78hJqn0ONg0WOTy/QeGD6TQx74+fQ4cJQKHG79/N7+okfhlkXnexwi
M1bMZXr33p718feU8qW9DjfucX3a8fK9/U+z18Jix/sc3u+efX+DwAd7AClk
E2E=
      "]]}, {}}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQbbvSuqtS+KsdAxh8sJd/Y+7wN8TYAcbv6D61QkHV
Bc73e7th1Z+3vnC+y4oJjLcPBcP5e/kTtp38FgHnx8WeTr96MRbOz/vwbEJl
VyKc37mp6/B++RQ4f0d6TcmUjjQ4/9r2nZpFqplwPvtvl9h7U7Ph/Kn7ip4x
/spFmMf3zVLcswDOD9x+c/+XukI4f4Lu4+PXzhXB+f8e762aIlEC53+dvD9H
0qcUzk8RfP5g0cwyOD+mw3TK5wvlcP6ZMytPeihVwvlZge9XVuZWwfmTzkef
LFxUDecbSr/LyvtYA+dHJSz3NtKqg/M3PjW8fjGmHs53kCn8tCukAc7PPXRn
xof3CH6of3SDxoxGBL/GydbPtgnOl1TbOzP8OoI/c5uXeXJdM5x/73B2SZBU
C5xvVfi1TX8zgh/EOukWX2QrnK8vdujsxc8I/nFeVqbps9vgfJWm21ftLdrh
/BnTpOqvXUTwT0zMycyv6IDz93IGfX4t3Ann52V47cvag+Cbpa+Ou57YBecf
fjR/nvofBJ/bdbl81eJuOF9Cxclhg30PnG+z2NXsyg0EX4YzJvdXXS+cf/A1
qwuLVB+cb1KVyCl2HME/3JI/8V+IMpz/a9Nmtd4ChHzv1KatHt2I9LRV0ryp
6APCPQDxdQ49
    "], {{}, {}, 
     {Hue[0.67, 0.6, 0.6], 
      LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 53, 16, 
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 46, 47, 48, 49, 52, 
       50}]}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9972805716888287},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 984.8857801796104}, Automatic},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.0001358871599365008, 0.0001358871599365008}}]], "Output",
 CellChangeTimes->{
  3.662404459246986*^9, 3.662404598895645*^9, 3.662405222464849*^9, 
   3.662405718428056*^9, 3.662406297584968*^9, 3.662406330339636*^9, 
   3.662406417572104*^9, 3.662406805347022*^9, 3.662406839001141*^9, {
   3.66240688798071*^9, 3.6624069126876163`*^9}, {3.662406984717441*^9, 
   3.662407012861548*^9}, {3.6624070836417437`*^9, 3.662407106780003*^9}, {
   3.662407909635324*^9, 3.662407928564303*^9}, 3.6624079656102057`*^9, 
   3.6624088419917307`*^9, 3.662408907167906*^9, {3.6624089455614347`*^9, 
   3.662408976175329*^9}, {3.662409014175234*^9, 3.662409088225396*^9}, 
   3.662409224178812*^9, 3.6624105841259403`*^9, 3.662410646600896*^9, {
   3.662411258379698*^9, 3.662411325108368*^9}, 3.662411411686612*^9, 
   3.662411460658895*^9, 3.662411832776853*^9, 3.662754828152622*^9, 
   3.662755118997655*^9, 3.662755189829032*^9, {3.662755219952276*^9, 
   3.6627552330088873`*^9}, 3.6628317418369913`*^9, {3.662836389762106*^9, 
   3.6628364129365463`*^9}, 3.6628429113277187`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulated Data", "Section",
 CellChangeTimes->{{3.6627556877501717`*^9, 3.66275569128279*^9}}],

Cell["\<\
Load data from Patrick\[CloseCurlyQuote]s simulation\
\>", "Text",
 CellChangeTimes->{{3.662756272519383*^9, 3.66275628084601*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datadir", "=", "\"\</Users/mmosmond/Documents/PHD/PCFinR/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "datadir", "<>", "\"\<SimulatedAbundances\>\"", "<>", "\"\<.csv\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.66275556963586*^9, 3.662755648268983*^9}, {
  3.662755792232341*^9, 3.662755820742881*^9}, {3.662756234703286*^9, 
  3.662756236070477*^9}, {3.662831741309568*^9, 3.662831743309153*^9}, {
  3.662832232549533*^9, 3.6628322513403387`*^9}}],

Cell["The data comes with 5 columns", "Text",
 CellChangeTimes->{{3.662756378289138*^9, 3.662756385175745*^9}, {
  3.662756559277006*^9, 3.662756575755829*^9}, {3.662756815034315*^9, 
  3.662756817745803*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simdata", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6627566279933243`*^9, 3.662756642669874*^9}, {
  3.6627566958390627`*^9, 3.662756697638322*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"Species\"\>", 
   ",", "\<\"Abundance\"\>", ",", "\<\"Stress_abund\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.662756630411153*^9, 3.662756698041078*^9, 
  3.662831748833181*^9, 3.6628324741263437`*^9, 3.662836177113246*^9, 
  3.6628419035938063`*^9, 3.6628422887068853`*^9, 3.6628429710841227`*^9, 
  3.6628444274198914`*^9, 3.66284466732751*^9, 3.662991742090397*^9, 
  3.6629921459665737`*^9}]
}, Open  ]],

Cell["\<\
 x is the x location (1:20) y is the y location (1:20), species is species ID \
(1:80), abundance is number of individuals of that species in plot, and \
stress abundance is abundance under some stressor (we will eventually want to \
compare model results with and without stressor). \
\>", "Text",
 CellChangeTimes->{{3.6627568213512087`*^9, 3.662756822760435*^9}}],

Cell["We first drop the column names", "Text",
 CellChangeTimes->{{3.662756792985317*^9, 3.662756798263606*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"simdata", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662756785772848*^9, 3.662756802048545*^9}}],

Cell["\<\
We then drop all rows with zero abundances\
\>", "Text",
 CellChangeTimes->{{3.662992075047391*^9, 3.662992116222604*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"simdata", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "\[NotEqual]", "0"}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.662992108751666*^9}],

Cell["Define the spatial extent of the area of interest", "Text",
 CellChangeTimes->{{3.662411468482938*^9, 3.6624114723466263`*^9}, {
   3.662412173377927*^9, 3.662412192666273*^9}, 3.662756289862062*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Lx", ",", "Ly"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"20", ",", "20"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "total", " ", "x", " ", "and", " ", "y", " ", "distance", " ", "of", " ", 
     "area", " ", "of", " ", "interest"}], ",", " ", 
    RowBox[{
    "ie", " ", "a", " ", "grid", " ", "with", " ", "length", " ", "Lx", " ", 
     "and", " ", "width", " ", "Ly"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Asub", "=", "5"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"space", " ", "between", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "we", " ", "chop", " ", "up", " ", "the", " ", "total", " ", 
      "area", " ", "into", " ", "squares", " ", "with", " ", "length", " ", 
      "Asub"}], ";", " ", 
     RowBox[{
     "best", " ", "if", " ", "this", " ", "divides", " ", "the", " ", "total",
       " ", "space", " ", "nicely"}]}], ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"Lx", "/", "Asub"}], " ", "and", " ", 
     RowBox[{"Ly", "/", "Asub"}], " ", "are", " ", "integers"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624105632177896`*^9, 3.662410563388131*^9}, {
   3.662410642111521*^9, 3.6624106433361464`*^9}, {3.6624113185715933`*^9, 
   3.6624113205874157`*^9}, 3.6624118299636374`*^9, {3.662412200746975*^9, 
   3.66241233394919*^9}, {3.662756316915345*^9, 3.662756321631939*^9}, {
   3.6627579622476397`*^9, 3.662757962359758*^9}, 3.66283617268756*^9, {
   3.662841894166457*^9, 3.662841894243311*^9}, {3.662844419228006*^9, 
   3.662844420098653*^9}, 3.662844664200747*^9}],

Cell["Get each variable of interest from data table", "Text",
 CellChangeTimes->{{3.662411487805341*^9, 3.6624115162679358`*^9}, {
  3.66241239544563*^9, 3.662412400485498*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gx", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gy", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ab", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stab", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6627564818879433`*^9, 3.662756506084942*^9}, {
  3.6627568388114223`*^9, 3.66275689858679*^9}, {3.6627571596583757`*^9, 
  3.662757175800811*^9}}],

Cell["Some summary statistics of the data", "Text",
 CellChangeTimes->{{3.6624115004831676`*^9, 3.6624115190117893`*^9}, {
  3.662412416239183*^9, 3.662412426541686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Uspecie", "=", 
    RowBox[{"Union", "[", "sp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Nspecies", "=", 
    RowBox[{"Length", "[", "Uspecie", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TotAbundance", "=", 
    RowBox[{"Total", "[", "ab", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"total", " ", "abundance"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "species"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394155397892*^9, 3.662394208972786*^9}, {
  3.66239435484977*^9, 3.662394355553513*^9}, {3.662394932920998*^9, 
  3.662394933324882*^9}, {3.662396920669482*^9, 3.662396931205062*^9}, {
  3.662411451991355*^9, 3.662411457827334*^9}, {3.662412431854793*^9, 
  3.6624124470392838`*^9}, {3.6627569063475637`*^9, 3.662756919531727*^9}, {
  3.662757178672894*^9, 3.6627571860160637`*^9}}],

Cell["Defining the coordinate system of the area", "Text",
 CellChangeTimes->{{3.6624115301840067`*^9, 3.662411532736253*^9}, 
   3.662412483413187*^9, {3.6624127080035973`*^9, 3.6624127139072323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allpos", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Lx", "/", "Asub"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Ly", "/", "Asub"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"coordinates", ",", " ", 
    RowBox[{"in", " ", "translated", " ", "form"}], ",", " ", 
    RowBox[{"ie", ".", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyCpos", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "i"}], "+", "1"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "j"}], "+", "1"}], ")"}], "/", "2"}]}], "}"}],
          "//", " ", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Lx", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ly", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], 
         "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"halfway", " ", "points", " ", "between", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "use", " ", "later", " ", "to", " ", "derive", 
     " ", "the", " ", "distances", " ", "between", " ", "centers", " ", "of", 
     " ", "each", " ", "\"\<bin\>\"", " ", 
     RowBox[{"(", 
      RowBox[{"area", " ", "below", " ", 
       RowBox[{"(", "south", ")"}], " ", "and", " ", "to", " ", "left", " ", 
       RowBox[{"(", "west", ")"}], " ", "of", " ", "each", " ", 
       "coordinate"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allpair", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"allpos", ",", "allpos"}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pairs", " ", "of", " ", "each", " ", "translated", " ", "coordinate", 
     " ", "with", " ", "each", " ", "other"}], ",", " ", 
    RowBox[{"e", ".", "g", "."}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "allpos", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", 
    RowBox[{"coordinates", "/", "bins"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395041124155*^9, 3.662395076995739*^9}, 
   3.662396503297634*^9, {3.662397225252562*^9, 3.66239727282128*^9}, {
   3.662397305190036*^9, 3.662397317542131*^9}, {3.662402580564127*^9, 
   3.662402589155075*^9}, {3.6624125591567297`*^9, 3.662412674941476*^9}, {
   3.6624128238176327`*^9, 3.662412840042054*^9}}],

Cell["Locations of plots (the bin they are in)", "Text",
 CellChangeTimes->{{3.662411540064125*^9, 3.662411543224874*^9}, 
   3.66241271663524*^9, {3.6624129056691236`*^9, 3.662412919045101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gx", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#",
             "<", 
            RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gx", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}]}], " ", "<", "#", "\[LessEqual]",
             " ", 
            RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"which", " ", "plots", " ", 
      RowBox[{"(", 
       RowBox[{
       "their", " ", "position", " ", "in", " ", "the", " ", "data", " ", 
        "vector"}], ")"}], " ", "have", " ", "x", " ", "location", " ", 
      "between", " ", "two", " ", "coordinates"}], ",", " ", 
     RowBox[{
      RowBox[{
      "for", " ", "all", " ", "pairs", " ", "of", " ", "x", " ", 
       "coordinates"}], ";", " ", 
      RowBox[{"for", " ", "p", " ", "between", " ", "1", " ", "and", " ", 
       RowBox[{"Lx", "/", "Asub"}]}]}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"gy", ",", 
         RowBox[{"x_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Asub", "*", 
              RowBox[{"(", 
               RowBox[{"q", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", 
             "#", "<", 
             RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", 
       "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gy", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"q", "-", "1"}], ")"}]}], "<", "#", "\[LessEqual]", 
            RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "which", " ", "plots", " ", "have", " ", "y", " ", "location", " ", 
      "between", " ", "two", " ", "coordinates"}], ",", " ", 
     RowBox[{
      RowBox[{
      "for", " ", "all", " ", "pairs", " ", "of", " ", "y", " ", 
       "coordinates"}], ";", " ", 
      RowBox[{"for", " ", "q", " ", "between", " ", "1", " ", "and", " ", 
       RowBox[{"Ly", "/", "Asub"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rule1", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"allpos", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"nplot", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"translate", " ", "from", " ", "coordinates", " ", 
     RowBox[{"(", "tuple", ")"}], " ", "to", " ", "single", " ", 
     "identifying", " ", "number"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"rule2", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"nplot", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"allpos", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"translate", " ", "back"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"XYpos", "[", 
      RowBox[{"{", 
       RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
     RowBox[{"Intersection", "[", 
      RowBox[{
       RowBox[{"Xpos", "[", "p", "]"}], ",", 
       RowBox[{"Ypos", "[", "q", "]"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"which", " ", "plots", " ", "have", " ", "location", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "within", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{"p", "-", "1"}], ")"}]}], ",", 
       RowBox[{"x", " ", "p"}]}], ")"}], " ", "and", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", 
        RowBox[{"(", 
         RowBox[{"p", "-", "1"}], ")"}]}], ",", " ", 
       RowBox[{"y", " ", "p"}]}], ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"possub", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{"XYpos", ",", "allpos"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "which", " ", "plots", " ", "fall", " ", "in", " ", "which", " ", "bin", 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"e", ".", "g", "."}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], "=", 
        RowBox[{"(", 
         RowBox[{"321", ",", "434"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"with", " ", "Asub"}], "=", "100"}], ",", " ", 
       RowBox[{"would", " ", "fall", " ", "in", " ", 
        RowBox[{"(", 
         RowBox[{"400", ",", "500"}], ")"}]}]}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.662395292209701*^9, 3.662395537499296*^9}, {
  3.6623960553689823`*^9, 3.662396067946538*^9}, {3.662397974196926*^9, 
  3.662398051690569*^9}, {3.6623981180157757`*^9, 3.6623981500469017`*^9}, {
  3.6623982769015217`*^9, 3.662398325149023*^9}, {3.66239886727868*^9, 
  3.662398876830975*^9}, {3.6623994181640377`*^9, 3.66239950349568*^9}, {
  3.6623997780956163`*^9, 3.6623998470706177`*^9}, {3.6624129296834784`*^9, 
  3.662412931482998*^9}, {3.662833602745944*^9, 3.662833652142746*^9}}],

Cell["Which species are where", "Text",
 CellChangeTimes->{{3.66241155496421*^9, 3.66241156097239*^9}, {
  3.6624129435894413`*^9, 3.662412950140648*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYS", "[", "i_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gx", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"gy", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gives", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "location", " ", "of", " ", 
     "plots"}], ",", " ", 
    RowBox[{"and", " ", "sp", " ", "code"}], ",", " ", 
    RowBox[{"in", " ", "each", " ", "bin"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SabA", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"sp", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
      "&"}], "/@", " ", "Uspecie"}]}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "with", " ", "each", " ", 
    "species", " ", "in", " ", "each", " ", "bin"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SabA", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"[", 
            RowBox[{"possub", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
        "&"}], "/@", " ", "Uspecie"}], ")"}], "*", 
     RowBox[{"ab", "[", 
      RowBox[{"[", 
       RowBox[{"possub", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "of", " ", "each", " ", "species", 
    " ", "in", " ", "each", " ", "bin"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SabA", "[", "i_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ab", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "k", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"sp", "[", 
                 RowBox[{"[", 
                  RowBox[{"possub", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], 
               "]"}], "&"}], "/@", " ", "Uspecie"}], ")"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "Uspecie", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "*", " ", "abundance", " ", "in", 
    " ", "that", " ", "plot", " ", "of", " ", "each", " ", "species", " ", 
    "in", " ", "each", " ", "bin"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SA", "[", "i_", "]"}], ":=", 
    RowBox[{"Boole", "/@", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"[", 
            RowBox[{"possub", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
        "&"}], "/@", " ", "Uspecie"}], ")"}]}]}], " ", "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "at", " ", "least", " ", "one", " ", "plot", " ", 
     "with", " ", "a", " ", "species", " ", "in", " ", "given", " ", "bin"}], 
    ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"presence", "/", "absence"}], " ", "in", " ", "bin"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SA", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Boole", "[", 
     RowBox[{"#", ">", "0"}], "]"}], "&"}], "/@", 
   RowBox[{"SabA", "[", "1", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Spos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SA", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "possub", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"table", " ", "with", " ", "all", " ", "bins"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395558546788*^9, 3.662395590718184*^9}, {
   3.662395637422887*^9, 3.662395855679844*^9}, {3.662396084462902*^9, 
   3.662396093135119*^9}, {3.6624000366580553`*^9, 3.6624000612422333`*^9}, {
   3.662400105056695*^9, 3.66240013763741*^9}, {3.662400198268684*^9, 
   3.662400203847021*^9}, {3.662400283268598*^9, 3.662400340107189*^9}, {
   3.662400370913103*^9, 3.662400403535512*^9}, {3.662400442030035*^9, 
   3.662400450460515*^9}, {3.662400495985153*^9, 3.662400502456811*^9}, {
   3.662401369958474*^9, 3.6624013885339117`*^9}, 3.6624017363239193`*^9, {
   3.662412958541737*^9, 3.662413003201478*^9}, {3.6627582460381603`*^9, 
   3.662758260113225*^9}, {3.6628318134295197`*^9, 3.662831849986977*^9}, {
   3.6628319319074497`*^9, 3.662831967083124*^9}, {3.662831999183221*^9, 
   3.662832084079393*^9}, {3.662835999562031*^9, 3.6628360509594927`*^9}, {
   3.662843309536722*^9, 3.662843318961556*^9}, 3.6629924525692873`*^9}],

Cell["Covariance in species abundance by distances", "Text",
 CellChangeTimes->{{3.662411564012209*^9, 3.662411577084908*^9}, {
   3.662413007593816*^9, 3.6624130216361732`*^9}, {3.662413321726729*^9, 
   3.6624133250631638`*^9}, {3.662843668157742*^9, 3.662843674738571*^9}, 
   3.6629924846744556`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ")"}], "^", "2"}], "]"}], 
    "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Euclidean", " ", "distance", " ", "between", " ", "center", " ", "of", 
    " ", "two", " ", "bins", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"in", " ", "translated", " ", "space"}], ";", " ", 
       RowBox[{
       "need", " ", "to", " ", "multiply", " ", "by", " ", "Asub", " ", "to", 
        " ", "get", " ", "real", " ", "distances"}]}], ",", " ", 
      RowBox[{"which", " ", "we", " ", "do", " ", "later"}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"not", " ", "sure", " ", "what", " ", "this", " ", "does"}], ",", 
    " ", 
    RowBox[{"but", " ", "doesnt", " ", "hurt"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alldist", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"dist", ",", 
      RowBox[{"allpair", "/.", "rule1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "distance", " ", "between", " ", "center", " ", "of", " ", "all", " ", 
    "pairs", " ", "of", " ", "bins"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rvec", "=", 
    RowBox[{"Union", "[", "alldist", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "unique", " ", "distances", " ", "in", " ", "increasing", " ", 
    "order"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"indexpair", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"index", ",", 
      RowBox[{"allpair", "/.", " ", "rule1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "translate", " ", "from", " ", "tuples", " ", "of", " ", "coordinates", 
    " ", "to", " ", "pairs", " ", "of", " ", "coordinate", " ", "indices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"posdist", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"alldist", ",", "#"}], "]"}], "&"}], "/@", " ", "rvec"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "identify", " ", "coordinate", " ", "index", " ", "pairs", " ", "whose", 
    " ", "bin", " ", "centers", " ", "are", " ", "given", " ", "distance", 
    " ", "apart"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cov", "[", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"SabA", "[", "i", "]"}], " ", 
        RowBox[{"SabA", "[", "j", "]"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "i", "]"}], "]"}], " ", 
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<covariance\>\"", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "bins"}], ",", " ", 
    RowBox[{
    "note", " ", "that", " ", "the", " ", "\"\<covariance\>\"", " ", "is", 
     " ", "taken", " ", "over", " ", "all", " ", "species"}], ",", " ", 
    RowBox[{
    "ie", " ", "\"\<covariance\>\"", " ", "in", " ", "community", " ", 
     "composition"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662396046222033*^9, 3.66239604622891*^9}, {
   3.662396115390656*^9, 3.6623964096680927`*^9}, {3.662396685632201*^9, 
   3.662396708518929*^9}, {3.662398383172187*^9, 3.662398401009489*^9}, {
   3.662400582990465*^9, 3.662400610172123*^9}, {3.662400684528366*^9, 
   3.662400698271431*^9}, {3.6624007584947987`*^9, 3.662400768955894*^9}, {
   3.662400801323835*^9, 3.662400832977763*^9}, {3.662400912708703*^9, 
   3.662400934469743*^9}, {3.662401038161566*^9, 3.662401045495079*^9}, {
   3.6624011896463223`*^9, 3.662401194686388*^9}, {3.662401315893465*^9, 
   3.6624013594664583`*^9}, {3.6624013981437902`*^9, 
   3.6624014153380213`*^9}, {3.662401683564044*^9, 3.662401732307383*^9}, {
   3.6624130293654127`*^9, 3.662413065229185*^9}, {3.662413147945756*^9, 
   3.6624131547927437`*^9}, {3.6624133583115*^9, 3.662413395382146*^9}, {
   3.662413444492093*^9, 3.6624135757417507`*^9}, {3.6627548194806147`*^9, 
   3.66275481983049*^9}, {3.662754862013492*^9, 3.6627548706385736`*^9}, {
   3.662755281695499*^9, 3.662755302757578*^9}, {3.662757002337412*^9, 
   3.662757002568337*^9}, 3.662842654035261*^9, {3.662842773639843*^9, 
   3.662842785351123*^9}, 3.662843697549049*^9, {3.662843859427684*^9, 
   3.662843859906129*^9}, {3.662843907603223*^9, 3.66284390815858*^9}, {
   3.662992279085969*^9, 3.6629922796048107`*^9}}],

Cell["\<\
 This function can take a while to run (if too long increase Asub)\
\>", "Text",
 CellChangeTimes->{{3.662992487992318*^9, 3.66299250406977*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"allcov", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ParallelMap", "[", 
      RowBox[{"Cov", ",", 
       RowBox[{"indexpair", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"posdist", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], "]"}]}],
       "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", " ", 
    "with", " ", "species", " ", "at", " ", "each", " ", "distance"}], 
   "*)"}]}]], "Input"],

Cell["Our empirical correlation function", "Text",
 CellChangeTimes->{{3.662411583164523*^9, 3.6624115898929653`*^9}, {
  3.662413328936442*^9, 3.662413339075227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"empPCF", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvec", "*", "Asub"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", "allcov"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"empirical", " ", "correlation", " ", "function"}], ",", " ", 
    RowBox[{"PCF", ";", " ", 
     RowBox[{
     "first", " ", "element", " ", "of", " ", "each", " ", "pair", " ", "is", 
      " ", "the", " ", 
      RowBox[{"(", "untranslated", ")"}], " ", "distance", " ", "between", 
      " ", "the", " ", "center", " ", "of", " ", "two", " ", "bins", " ", 
      RowBox[{"(", 
       RowBox[{"rvec", "*", "Asub"}], ")"}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", "mean", 
     " ", "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "all", " ", "pairs", 
     " ", "of", " ", "bins", " ", "that", " ", "distance", " ", "apart"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.662401751323216*^9, 3.662401767856126*^9}, {
  3.6624018026823177`*^9, 3.662401805136237*^9}, {3.662402598586731*^9, 
  3.662402656960024*^9}, {3.662403448724161*^9, 3.662403449356001*^9}, {
  3.662413682182837*^9, 3.662413751871039*^9}}],

Cell["which looks like this", "Text",
 CellChangeTimes->{{3.662413762951601*^9, 3.662413766590012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"empPCF", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662402671244444*^9, 3.6624026938166847`*^9}, {
  3.6624027307213984`*^9, 3.6624027646607313`*^9}, {3.66284515333747*^9, 
  3.662845164270727*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    LineBox[{{0., 10.99540195170852}, {5., 6.373969409741758}, {
     7.0710678118654755`, 3.794305262574646}, {10., 1.0963962940732257`}, {
     11.180339887498949`, 0.660591967013109}, {14.142135623730951`, 
     0.11308860053655641`}, {15., 0.03753329038905565}, {15.811388300841898`, 
     0.02518347641695937}, {18.027756377319946`, 0.007407697952713561}, {
     21.213203435596423`, 0.0011243739720043198`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 21.213203435596423`}, {0, 10.99540195170852}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.42426406871192845`, 0.42426406871192845`}, {
   0.2199080390341704, 0.2199080390341704}}]], "Output",
 CellChangeTimes->{{3.6624026753490877`*^9, 3.662402694224242*^9}, {
   3.662402733657669*^9, 3.662402764957795*^9}, 3.662403280700993*^9, 
   3.662405717953288*^9, 3.6624062969674873`*^9, 3.662406329773899*^9, 
   3.662406416186351*^9, 3.662406804603773*^9, 3.66240683746817*^9, {
   3.662406886173161*^9, 3.66240691093393*^9}, {3.6624069838326597`*^9, 
   3.662407012312221*^9}, {3.662407083140224*^9, 3.662407106243676*^9}, {
   3.662407909118041*^9, 3.662407928023505*^9}, 3.662408841453096*^9, 
   3.662408905364181*^9, {3.6624089446938267`*^9, 3.6624089748889437`*^9}, {
   3.6624090129800463`*^9, 3.6624090870484447`*^9}, 3.662409222978368*^9, 
   3.662410582890629*^9, 3.662410645396593*^9, 3.662411257144088*^9, 
   3.662411323604559*^9, 3.662411410305233*^9, 3.6624114593953867`*^9, 
   3.662411831491273*^9, 3.6627548268499537`*^9, 3.6627551177774353`*^9, 
   3.6627551888229713`*^9, 3.662832514275855*^9, 3.6628445763722677`*^9, 
   3.662845108840994*^9, {3.662845154442807*^9, 3.662845164557125*^9}, 
   3.662992523886785*^9}]
}, Open  ]],

Cell["\<\
We can drop the zero distances if need be\
\>", "Text",
 CellChangeTimes->{{3.662992533232066*^9, 3.6629925398308563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"empPCFNoZero", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"empPCF", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662845412361611*^9, 3.662845453751668*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.`", ",", "6.373969409741758`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.0710678118654755`", ",", "3.794305262574646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.0963962940732257`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.180339887498949`", ",", "0.660591967013109`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.142135623730951`", ",", "0.11308860053655641`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"15.`", ",", "0.03753329038905565`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15.811388300841898`", ",", "0.02518347641695937`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"18.027756377319946`", ",", "0.007407697952713561`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21.213203435596423`", ",", "0.0011243739720043198`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.662845454066854*^9, 3.662992525749855*^9}]
}, Open  ]],

Cell["Fitting the function to the data", "Text",
 CellChangeTimes->{{3.6624116006129713`*^9, 3.662411617797512*^9}, 
   3.6624137709835*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Rho]", "\[Lambda]"], ")"}], "2"], 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       FractionBox["r", "\[Lambda]"]}], "]"}]}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "function", " ", "to", " ", "fit", " ", "to", " ", "the", " ", "empirical",
     " ", "PCF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"what", " ", "does", " ", "this", " ", 
    RowBox[{"do", "?"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fitcor", "=", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{
      RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
      RowBox[{"g", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Rho]", ",", "50"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fit", " ", "the", " ", "function"}], ",", " ", 
    RowBox[{"with", " ", "some", " ", "parameter", " ", "guesses"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624027871760187`*^9, 3.662402882159881*^9}, {
  3.662403440956188*^9, 3.662403443083897*^9}, {3.662413819411948*^9, 
  3.662413832425786*^9}, {3.6628452248990993`*^9, 3.662845233067706*^9}, {
  3.66284544825609*^9, 3.6628454777433033`*^9}}],

Cell["How good is the fit?", "Text",
 CellChangeTimes->{{3.662413841744823*^9, 3.662413844902369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
        ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "fit"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662403357573029*^9, 3.662403400917585*^9}, {
  3.662403460732779*^9, 3.662403460900476*^9}, {3.6624035271260643`*^9, 
  3.6624035294532757`*^9}, {3.662403567283935*^9, 3.662403568012061*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.8591069937274668`"},
    {"\<\"AIC\"\>", "28.20266262397926`"},
    {"\<\"BIC\"\>", "28.79433635598792`"},
    {"\<\"RSquared\"\>", "0.8904165506769187`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.662844576650337*^9, 3.662845108938904*^9, 
  3.66284523510108*^9, 3.662845480109968*^9, 3.6629925433449373`*^9}]
}, Open  ]],

Cell["What are our parameter estimates?", "Text",
 CellChangeTimes->{{3.6624138505438223`*^9, 3.662413855414859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Rho]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662403541170051*^9, 3.662403579627411*^9}, {
  3.662413877368452*^9, 3.662413935628236*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", "2.3219596472724042`", "1.0566897340842294`", 
      "2.197390182166111`", "0.06397700632161947`"},
     {"\[Rho]", "44.74117913267607`", "8.223946879663186`", 
      "5.440353614554044`", "0.0009658815221354373`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.6628445767528753`*^9, 3.662845108980483*^9, 
  3.662845237827681*^9, 3.6629925446773767`*^9}]
}, Open  ]],

Cell["Or if you like confidence intervals better...", "Text",
 CellChangeTimes->{{3.662413938361573*^9, 3.662413946160007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"get", " ", "confidence", " ", "intervals", " ", "too"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{3.662413934755294*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", "2.3219596472724042`", "1.0566897340842294`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.17671452435229495`"}], ",", "4.820633818897104`"}], 
       "}"}]},
     {"\[Rho]", "44.74117913267607`", "8.223946879663186`", 
      RowBox[{"{", 
       RowBox[{"25.294634897213697`", ",", "64.18772336813845`"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.662844577101038*^9, 3.662845109007119*^9, 
  3.662845241317061*^9, 3.662992546494075*^9}]
}, Open  ]],

Cell["Plot fitted curve with data points", "Text",
 CellChangeTimes->{{3.662413956438634*^9, 3.662413969480398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
      RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Prolog", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
      RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.662403769406761*^9, 3.662403992597126*^9}, {
  3.662404042064361*^9, 3.6624041243000097`*^9}, {3.662404161267418*^9, 
  3.662404199527317*^9}, {3.662405800170576*^9, 3.6624058024493113`*^9}, {
  3.66240792592798*^9, 3.662407926379305*^9}, {3.662413951485792*^9, 
  3.66241399528541*^9}, {3.662755240062652*^9, 3.662755249022591*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"g(r)\"", TraditionalForm], None}, {
     FormBox["\"Distance (m)\"", TraditionalForm], None}},
  ImageSize->800,
  LabelStyle->{FontFamily -> "Times", FontSize -> 12},
  Method->{},
  PlotLabel->FormBox["\"Pair correlation function\"", TraditionalForm],
  PlotRange->{{0, 21.213203435596423`}, {0., 28.926246699618936`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, 
    Scaled[0.02]},
  Prolog->{
    RGBColor[1, 0, 0], 
    PointSize[0.005], {
     PointBox[{0., 10.99540195170852}], 
     PointBox[{5., 6.373969409741758}], 
     PointBox[{7.0710678118654755`, 3.794305262574646}], 
     PointBox[{10., 1.0963962940732257`}], 
     PointBox[{11.180339887498949`, 0.660591967013109}], 
     PointBox[{14.142135623730951`, 0.11308860053655641`}], 
     PointBox[{15., 0.03753329038905565}], 
     PointBox[{15.811388300841898`, 0.02518347641695937}], 
     PointBox[{18.027756377319946`, 0.007407697952713561}], 
     PointBox[{21.213203435596423`, 0.0011243739720043198`}]}}]], "Output",
 CellChangeTimes->{{3.662403931872311*^9, 3.662403961748376*^9}, 
   3.6624039930219793`*^9, {3.662404054020718*^9, 3.662404124635461*^9}, {
   3.6624041628226557`*^9, 3.662404177212069*^9}, 3.662405718219399*^9, 
   3.6624058028929377`*^9, 3.662406297284313*^9, 3.662406330073842*^9, 
   3.6624064172534*^9, 3.662406804946733*^9, 3.6624068387016277`*^9, {
   3.662406887024851*^9, 3.66240691165195*^9}, {3.662406984216867*^9, 
   3.6624070126147203`*^9}, {3.66240708340755*^9, 3.6624071065110817`*^9}, {
   3.662407909400408*^9, 3.662407928325042*^9}, 3.662408841770507*^9, 
   3.6624089062315893`*^9, {3.662408945263624*^9, 3.662408975140057*^9}, {
   3.662409013246416*^9, 3.662409087299986*^9}, 3.662409223247031*^9, 
   3.662410583174616*^9, 3.662410645662326*^9, 3.662411257398282*^9, 
   3.66241132393871*^9, 3.6624114105907393`*^9, 3.6624114596960697`*^9, 
   3.662411831774963*^9, 3.6627548277165937`*^9, 3.662755118552618*^9, 
   3.662755188969701*^9, {3.6627552441558857`*^9, 3.662755249340041*^9}, 
   3.66283266521484*^9, 3.662844577150803*^9, 3.662845109040369*^9, 
   3.662845242291156*^9, 3.66299254782378*^9}]
}, Open  ]],

Cell["Plot fitted curve with confidence bands", "Text",
 CellChangeTimes->{{3.6624140170269537`*^9, 3.662414017625156*^9}, {
  3.662414059835639*^9, 3.662414068251809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bands90", "[", "x_", "]"}], ",", 
      RowBox[{"bands95", "[", "x_", "]"}], ",", 
      RowBox[{"bands99", "[", "x_", "]"}], ",", 
      RowBox[{"bands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fitcor", "[", 
       RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
        RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"cl", ",", 
        RowBox[{"{", 
         RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitcor", "[", "r", "]"}], ",", 
       RowBox[{"bands90", "[", "r", "]"}], ",", 
       RowBox[{"bands95", "[", "r", "]"}], ",", 
       RowBox[{"bands99", "[", "r", "]"}], ",", 
       RowBox[{"bands999", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"3", " ", "\[Rule]", 
         RowBox[{"{", "2", "}"}]}], ",", 
        RowBox[{"4", " ", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}], ",", 
        RowBox[{"5", " ", "\[Rule]", 
         RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662404221668598*^9, 3.662404310745612*^9}, 
   3.662414014514715*^9, {3.662755211342601*^9, 3.662755231736133*^9}, {
   3.662845540490911*^9, 3.6628455435145197`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], 
     PointBox[{{5., 6.373969409741758}, {7.0710678118654755`, 
      3.794305262574646}, {10., 1.0963962940732257`}, {11.180339887498949`, 
      0.660591967013109}, {14.142135623730951`, 0.11308860053655641`}, {15., 
      0.03753329038905565}, {15.811388300841898`, 0.02518347641695937}, {
      18.027756377319946`, 0.007407697952713561}, {21.213203435596423`, 
      0.0011243739720043198`}}]}, {}}, GraphicsComplexBox[CompressedData["
1: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
WT9KFlPHfmzsGbdzTSjfjw/sHK5afoHvx8cPDEjBYL4fH2P5PXT5q4P79QVm
jRM7e+m4X0/qntRJFlPD/Tq7/QFb1kgZ+/Hq7bzUc+T3i/rd9PES5QwVLdzv
Xpq0/elvRsNefC/AzmrYVwV7sVu4/jdeBN+L348G1cEAbdxfpoNvN4J5ZJ80
u8WqeA75fr4zkeWsoo79OMdDeiQ7lO/H3rMf0pMv8P24fdMZF7XzfD9+l5Yt
zQj+v36MvNh9vtS4lI0iE3lxzaj0AvsxLkT1kjHoonsV9hOoXq7JeTB4V2KK
QPVyXWWZ7+bVYwSql1zTD19u6X7CXpxVfPy20KkvENVLFZOXxntihyCql4s+
bNi8MGkconppxzFXtqZwsRf3ZOjTDVdwsRfnp5zeNDo5gb340NOJgo3MMezF
zl/NNucbjmAvbvn956WaNRt7sV1zTXf23h7sxXGa1AL/qu8Q1UsVFXbMTM8n
iOpl8PHmrr8RzRDVS1/NJD+TsiKI6iUt5BNru1k2rpeW09qua2KqcL3MPyz3
/a94C66XTusvPWgX/4jrpVKc6gq7FV9wvdw5Wl7MVfqG66XIQr2Ex+o/cL3M
cBrUzhP5ietlq0jDuu3Rv3C95A2o3iv62o3r5UvXUv9sxV5cL/fRbRqfyvbh
ellySW1yjkA/rpdZMkpaEpX9uF7uVPWczmQM8O83E6Y1q2p4ANfL9MjTucS+
37hevt2tWbKp+jf/8+5D+QEKNL4XyzDexW7dz8b18uShNVcLs9kE8mDrIWfH
vglxJvJgQOvuXVXOhKieumruaI3byCFQPbWef6rYMGOSQPXUuij38faRPgLV
U9rSyX22W/Mh8mBWjhvcI9wLkQdPX+WVDJwahciD9RKtZDfqc7AHs87bLejf
xsUeXFfgFvi2ioM9uKSrQf3Q2Dj24BPfc6X8z49i/z0mcUzv/BU2/nufNg0K
Ah9DZZjIe1nVmyPf2PRCVN/HTPffUibna1TfHUst3IMmeQSq79RPxc9e/xki
UH3PlxwIkFtVib03OtBJwk23CyLv/ZVU3/mePgKR91oeFhXSOTUBkfcmJyVr
MwAXe++IR2hdlQQXey/lNPjyLmgCe69r35CQktYY9t0Qg4LFG0+yCeS3zImC
Cxs1hZiov+jc4p+z+msbgfoLrZJvBXs/TxKov2DEuBKtmzkE8lvHpdWp9U5v
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
z+5V5PkU6RFp68yFOcXtt5aIyIKs46nfjpDvdy2B/ZpRZ9XBs53WC09bcrFH
Xvx4/eGCM5PEqMije9cMaCD4tOPaHWQ9FgljLH7fS55nzP8Cjcl6hDzSMDQ+
WYTNI/bVPTA0Z9BAdqpp4wF7LvbIoKJC66ZMNjES+CYu/wU5r+y7knVKe4po
FJ/fJCpGXj+ShGsZ+fyOdvlmGiaywCtEq8SJxSOHw7lbH9nQgHufW+dNsn/T
6AD7ejlUIFqUrTilNUWEHo6S/qxJAzmz5pYuJn8+Bi50GZ928nqxM9/URn6/
wpwfMqvCqYCWr3BcqIVHUBaIzWz4TAUsizfVC4yniAfLHYaOytFAu41POJP8
/5bXTzSEUmVBTkfC1+dCU4RHSoO5nQkNRJY+26tFvt+/F6dsJTjqoN1uJkxl
Gxf2aCvdv5dGBdaX1aCg8BTOXz0/bW0of8D+Px6J79/NLXxuoKSN/XHbcpO9
Ec/o2B8v3XnoMOJGw/54OH2323iFGvbHkx4qF3J/qWB/3HlqdX7HXGXsj5nZ
635Ljihgfzz42eNbEFcO+2NivYx0xHcq9sffnmHHtwxLY3/07aupngZS2B89
ok+JvNKej/0xpbxmgYqDOPbHOrUdwZR6MeyPHRukHyrtmIP9MeV3By/STRj7
Y9xwpJXusdkA5akXTsZERjYLApSn7pw0uPz2lABAeSqlMGa5v98MzlNf3Hrr
kus9jfNUqvelw/0FPJynGpWU7tksO4nz1Gt2FQ6najk4T/3cbiE0EDuB89Qi
WZEb4cnjOE8NUXFnfWwaw3kq517XiLPEGM5T7TflrVh0fBTnqbfuvtwy1T2C
81TuXI533bERnKcuf/+7843sCM5TpXZ+2GbF5Puj5aqBWaFnhnGeKl7+9kfv
ymH+51un2azW+cM4T41sl7F/8ovvj4KbLjT/gXx/3Ce9TTauSxf7o42+d7Uw
RRP740NRo9ttbBr2x+95ijlvnqhjf4x3IZ+4he+P1tnrjl/J1Mf+eOMOPd93
XBP7o83teROU9XTsjyw9r6N5CjTsj8zyY6lu7UM4D+xMXq2ya7cO9sYzB96t
+uWggb0xO/SGSmwqDXujqtuld8K1/DyuznmerHqwFvZF60jaur/n6NgXbyyM
5cVZ0bAvVn+PCz3xje+LbcyQdVbKutgXBbtPdwplamBfzFtFzNhV07AvbvC5
8uBxI98Xze/xfnaV62FfFLddfU/5pCYwPOB7wkhGHjicVlL6pUTH+/dfvpT8
uFykjf1RqMhwMkBAA/tjrlXtC//KIZznbIdRAgb1Wtgb567VXRCaRMfeaFm+
bU70Ohr2RmP7ZTTpLr43lshcVRoK0sXe+CNgulL2gwb2xoSxwasGbTTsjeqt
S+ukWHxvfF4y3ZZhrI+9MbljYEHkU01wNihk0f+eI/sdVxw8aErH+9YOX6MY
KhQd7JE3q5UfR+hoYI/ctHRwqrSa75HXpfznWrwawvPxlNHGVv0RLeyPnQ1v
w1we0rE/2j90MDbbTMP+aCnUwNz9k++PG2y0XSrzdbE/yiadOW00pIH90f6c
Dd2ri4b98ZRDsa/dG74/aqjtLY05pI/9MVvfrWzeO02QOSdKTKtfDnwqlXp2
04aO90+LjKNur16sg31SPrftpw/Zt6J5zCxNgPr1Nd8nFa+L33Su4PtkWtoT
dcWXQ7j//o9x6LeYiDb2SDXFOIeuAjr2SEPZg9rXttKwR+pbSdhTfvE9MnON
58GoOl3skWuWfX05648G9kjzpJLbib007JEnfKIPdrzhe+Sy8vuVPpf1sUde
uVxXofFTEzxvkAoM7JIDkl8e91fb0fF+mulgy5D5eh3slfoBqULxdhrYK/tW
HyGO1fC90uDcy+NdFXyvnHfqz+7Ml3yvnHPpP7sI5hAhYineuf25OED1UrtP
wRq4CQDkl16HJWujFkvhxxs/ZKhqLxTCj9uFrPpTeZv/+P41cW8XvhbDjztW
fZ+XtlcaPy7id3Hp6yoJ/Lj52POxvH0y+PH/AQMUkm0=
    
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1lXUVWUQBuBfTDqluxsFRJEu6U4p6W4p6VJaaRVQUEFCBQG7le7uBhVU
UuzCZxYXz5p5Zy7OOnt/31knV6f+TfolSkhIuIs/NE9oSiVOSCgtl6Gm/KJ5
eW7oNzCNr+SuZOKUPJh39E24j+3yUmrxklyBm/r3mM7Xcjcyc1oewhp9U+5n
h/watXlZrsjP+veZwTdyd7JwRh7KWn0zHmCn/Dp1WChX4pb+A2ayUe5BVs7K
w3hX35zE7JLfYJd+IPm4LNdlkb4yv+g/5JD+GYrxvLxJ7Uk2zsmn1PE8wnB5
ndqCJHzHNHabH1NH8zBXmcMy893qoPg88vNDfA5/R29/Tn020Z33V5brzOM/
6tkvVqvE8+NX+aI6hb/4SD6sjuA3ivMTs3jBbrPai+xcYgbnzU+rEygT311e
r7YkKXvk4+oYSrJc3qM+TQF+lOvzir5qfK7+Y2axRe5NDi7II+LM6VuRjL3y
mzTgVbkav+s/YTYjacgS8+rxTPSfModRNIpzaV6DP/WfMZfRcTbNniQ5++QV
NI5zGPcinpf+c+YxJs6iWWtSsF9eSZM4d3LNeD/6L5jP2Dh7Zm1IyQF5FU3j
nMm1+Ef/JQsYF2fLrC2pOCivphnL5Nr8G/cw7ifj+cisHak5JL9Fc5bLdeI8
xL2L+8hWuQ85uShPiHegb08aDstv0yKet1yX23Hv4j6yTe5LLr6VJ8Y70D9F
Wo7E7wF79YMpGOdKbhnPNc4lCWyM+8l2ffwQ5Y47IU+K96bvQDqOyifUsZRi
jbxPHUIhrsit4h3o63MXm+Qj6khKsEjeofYnD5eZyffmZ9SJPBp3Kc6F2pEH
Y890jpmfVMfFmaM015gb74K19vvVoXHPKBxnPe5RvFuu2p9Xn4uzx+PcYH48
2zh7cSbUBtwiUTxbprLZ7qg6iofi+zKbxeY71QHk5ZJ8Vp3EY/FZcWbVTqTn
ePzOcUA/jCLxHeTWcb70DbmbLXE/mRxnWO5MBk7E7xdt4nzJjbiHrXEfmUJb
2tGep+hARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAGxZn0WY25l21xz5ka90bu
QkZOyus5qB9OUa7LF9TJlOMmC+IM3u13ya6ktob6INX5Xk6nVot7pf+OtPqq
TNd/yLekkavE99RPZgPnSGFWgYf17XmO9ZwluXl5HtK341nWcYZk5uUooW/L
JN7lNEnNH6e4vg0TWcspkpiXpZi+NRNYw0kSmz9GUf2TjOcdTvCA+aMU0bdi
HG9znPvNy1BY35KxvMUx7jN/hEL6FoxhNUe517w0BfXNGc0qjnCPeSkK6Jsx
ipUcjlcR74H8+qaMZAWH4qciniX59E0YwZscjP8u8SzJq2/MMyznQMKdPzYl
yKNtxHCWsZ/bFLfLrTZkGG+wj/8oZpdLbcBQXmcv/1LULqdanyG8xh7+oYhd
DrUeg1nKbv6msF12tS5Ps4Rd/EUhu2xqHQbxKjv5k4J2WdXaDOQVdvAHBeyy
qLUYwGK28zv57TKrNenPIrbxG/nsMqlP0I+FbOVX8tplVGvQl5fZwi/kscug
VqcPL7GZW+S2S69WozcvsomfyRX3S61KLxawkZvktEunVqEn8/mGG+SwS6tW
pgfz+JrrZLdLo1aiO3P5imtks0utVqQbc/iSq2S1S6VWoCuz+YIrZLFLqZan
C7P4nJ/IbJdCLUdnXuAzfiSTXXJ1Gh9wkdRmlePe6jvxPJ/yAxnNk6ll6chM
PuEyGeySqlN5nwukMqsUd1nfgRl8zCXSmydRp/Ae50lpVjHut75k4jv/8f8H
rtiEJQ==
         "]]]}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1WN0nAkUBuBJUsWulXrrpojbRjVTu02tpFjbtm2ra9u2bdvefe7ZH895
73fvn/neM3OmqLG5oSk5kUgksSPp/yxOTSRK5GgP2bxvvonDSaOt3afydo5m
OaWMsc/hA/PNHEE67ew+k3dwDCsoI4P2bp/LOzmWRsoZa5/Lh+ZbOJJMOth9
Ie/iOFZSQRYd3b6Ud3M8q6gkm05uX8l7OIHVVJFDZ7ev5b2cyJp4d3Lp4vaN
vI+TWBvvSR5d3b6V93My6+Jzk083t+/kA5zCeqopoLvb9/JBTmUDNRRS5PaD
fIjT2EhtdE4Ptx/lw5zOJuqiX3q6/SQf4Qw2Ux/90svtZ/koZ9LEuOiS3m6/
yMc4i2bGR5f0cftVPs7ZbGFCdElft9/kE5zDViZGl/Rz+10+yblsY1J0yU5u
f8inOI/tTI4u6e/2p3ya89mZKdElA9z+ks9wAbswNbpkoNvf8lkuZFemRZcM
cvtHPsdF7Mb06JLBbv/K57mY3ZkRXTIkfgi8IC5hD2ZGlwyN3wkvmi9lTxqi
S4bZJ/OS+TL2YlZ0SbF9Ci+bL2dvZkeXDLdvwSvmK9iHOdElI+xb8qr5SvZl
bnTJSPtWvGa+iv2YF10yyr41r5uvZn/mR5eU2LfhDfM1HMCC6JJS+1TeNF/L
gSyMLimzT+Mt8w4OYlF0Sbl9Om+br+NgFkeXVNhn8I75eg5hSXRJpX0m75pv
4FCWRpdU2WfxnvlGDmMZ1XZ5fGS+laOo8ZzPx+bbqDUX8Im5ThZST3F0l+L7
xSq2M4eVbGM8s2lkK+XU08BymhnCSMYylUVsoB996UNvetGTHhTRnW50pQud
6URHOtCedrSlkALyySOXHLLJIpMM0kkjlTa0ZjAjGMMUFrKeVpRRx0yW0cQg
hjOaySxgHS0ppZYZLGUzAxnHLFawhWKqmMR81tKCEmqYzhI2MYBhVDKReawh
hVFUM43FbKQ/Q6lgAnNZTXK8p/+rJPkfuo2m8w==
         
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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

         "]]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{326, 2355, 52, 51, 885}}], 
         PolygonBox[{{326, 2355, 52, 54, 53, 51, 885}}], 
         PolygonBox[CompressedData["
1:eJzt00VylAEQgNEfwgBB424Td0+Iu7u7TtwVd27LLXhzCxZZvOrqZXfVF45c
zV0+DoIg6i+PYoKgMdZuHrDECO3UUs4ZG0zRSzMxHLLMKB3UUcE5m0zTxzue
cMQKY3RSzzW7zDNEJRdsMUM/LYQ4ZpVxumigiku2mWWAVp5ywhoTdEfvpJpn
PCeWF7zkFa95w1viiCeBRJJIJoVU0kgng0yyyCaHXPIIk08BhRRRTAmlnLLO
JD00UcMVO8wxSBs3RFhgmFv2WOSOfe4pi/47FAR/uOU3e9zwi0UiXPOTEebY
5oJvdNLPJGsc85FmmmikgXrqqKWGaqqopIJyyiilhGKKKKSAfMLkkUsO2WSR
SQbppJFKCsl00McEqxzxgSSGmWWLc77STi/jrHDIexIZYoZNzvhCGwvscsUP
ehhjmQPuSWCQaTY45TOtzLPDJd/pZpQl9rkjngGmWOeET7TQFf23LuNCD40+
NPrQ6P/e6D/ufIFo
          "]]}]}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
         "]]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{885, 2357, 7, 6, 1411}}], 
         PolygonBox[{{885, 2357, 7, 9, 8, 6, 1411}}], 
         PolygonBox[CompressedData["
1:eJzt09VOnFEYBdC/tECp4l5gcHcZ3N3dbYB6oe5C+7B9hLqteYtecLGyk2M5
+ZIdipwsHMcEQRD1mcTYIGhNCIIeGeYld9hkhiGSeMIhK4zTyzuO2WORdl5x
ly1mGSaZpxyxygR9vOeEfZbo4DX32GaOEVJ4xk3WmKSfTt5wnx3mGSWV59xi
nSkG6CKNdDLIJItscsjlBnnkU0CIQooopoRSyiingkqqqKaGWuqop4FGmmim
JTpvXnCbDaYZpJu3PGCXBcb4wEMiLHPKIw74yGM+0Rb9f7w5scIRoyxzSDsj
LHFANS0MMMcuhZTRQA9TbJJLDtlkkUkG6aSRSgrJJJHIda5xlStc5hIJXCSe
OGK5wHliOEfA37gg+MNvfvGTkPVS6ulmkg1+2KuSzfQzyw4FlFBHFxOs8935
sBxmkQiVNNHHDNvk08YQC+xTTC2djLPGN+9VyEZ6mWaLPFoZZJ49iqihgzFW
+ep+uQzr4pe4s16e9fKsl/9jL/8BTKGMZw==
          "]]}]}, {}, {}, {}, {}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1mWfVVUUB+ArkiooIhYYmKBgopSK2NiEooSBhaC0gYEojaDA0DXMwAww
DI30gEEI0hLS3R2KoKLP+gJ+gvvimbX++5y559y997m/U6J+k+qNcyUSibDY
n9xqhQKJRIN8icTb+ROJ4mzXTyOVL+R7+Eu/gh60lG/hqH4+Y3iXd4xdxQ79
dIbSRr6Xv/Ur6ckH8q0c0y9gLJ3kB8jNerkhDfRXs1M/g+76x7iANPlLtRz/
6H+lv/45ipIif6iW5rg+XX2Jn/W91acoTBavMc54Z7UyecikLhuMD1KrM5XL
GcMb5NAovrt6DePZFd9bfZFpzIw5Ux9nMgUZySvMIN3xr9TyTOSsPFytzSr9
APV5LqWX/JFahhP6hfTRP83FcX25i/ogedkovxdzqb+W3fpZDIs54H0aGS/B
Hn1OXDs+k4+N3cZJ/SIm0Dg+z9h17NXPJoO2cgX+1a+mL63k2/ld/wsTaRLX
NHY9+/RzyKSdXJEEa+R+fKK/gz/0i5nE13IV8rFJbhr3pL+B/frvY3/pn6AQ
I+T2aiXOYW3sET7V38kp/ZK4X/0zFIk1kruqD5GfzfJgtQZX0Cy+h3ojB/Rp
ai1+0KeoVbmQUbwaa228g3ofucigDr8ZH6hWYwqXkU19ZjHA8c/Uu5jAn7Fu
6stMZ2nMk/os33EJo3k99lyMOd5NfZhJFIj5oB5bHBui1uRKxvImzWNO1Zs4
qP+RXvonuSi+k9xRvZ9zWRffgc/1d3Nav4wpfCM/wnlslVvQTH8zh/Q/kRXP
Vvye0Nx4SQ7r5zI65j1+K+I5jn0fezL2VeyNWMOYn7g2reN3Kn5r4jchnqfY
k7GvYv1j/uO+4zcmnvF4RmIvxTrHHMW98m3co+uX4oh+HtkxT/H5xspyRr+c
qXG+/Cjns01OVV+gGON4i9l0d2xMHs9BXuvFbp6kE2u4gEq0YgGbnPs3t+rf
ZSqz5aUcorhcm5Fky6PJYhQjGUEmGQxnGOmkMZRUhjCYQQxkAP3pR1/60Jte
pJDDEg5SzHVfZgQ95Y38xS1yA6YwS17MAa6UXyKTHvL5akU+Zj4bjJ2hlP4d
vmOm/JjajpXk5m6aMYdfHO+pbqUyn8cY+413UX/jCvZQiwy6O3ZS7csuqnKY
jqzmPI7GeWymQnweHzGP9f7/uNqL7TzMQb5kGacd7xrnUZK3mcwM44+qbVnB
uXzDRu6iaawvi5z3gPpZ9OyTL1dfZDjfygXU8nzIXNYZe0htw1L+lG9W32IS
0+Vc6p00IYeFxvZymf4FhsX9yPnVcnzATzGHxk5xk/5NJjJNPke9g8axzvxs
bA+X6muSTjd5LX9wo/wGE2IvywvYTVG5Bml0ldfEM8INcn3Gx16S57OLS+Tq
DOVreXWsJ9fLrzMu9o48j50UkauRShd5MnPZwcXGnmcIneVVnOA6+TXGxvzJ
CfV23o89GfNi7H7105jH2AdyYfU5BtMpnh11J0/QgVXki/VjE/fG2tKSH/nV
/xxTU9hGFQ7wBUs47viR+M6x3pRgL68yJtYl7l3tzQ4e4RBfsZx/He+mbuA2
3os9Gdc23kPdwn18EmsZ92C8s7qWi3iWQXQ0/rjaPu6ZvNxDC35gpeMPqq1Z
zDH5WvUVsmP95bOU0TeKvRn/J2/lQv0zDIw5k/OoZWnO96wwdpRr9PUYHftD
/ofS+oaxN+NceQuF9E8zIO5XXh5zyNVyXbJiv8hz2ExB+Sn6005exmGukusw
KvZE3Fci+b6cfF9Ovi8n35eT78vJ9+Xk+3LyfTn5vpx8X06+L//f+/J/yeIx
tA==
         "]]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{1411, 2359, 3, 2, 1895}}], 
         PolygonBox[{{1411, 2359, 3, 5, 4, 2, 1895}}], 
         PolygonBox[CompressedData["
1:eJzt09VyFEEYBtDJJtnsxt1diQcPQYK7BncIcgmPiLu7OwR3iAsnb8HFXpz6
v69npmuqurqq93jPsVAQBJP66A8HQWc0CKYkBcGAvN1cSRet1HCATSxhFuXs
YR3dTKORQd/vMFcxlzZqOUgPS5lNBXtZz0Km00Qvm1lGJ0P222muZh7t1FHJ
PjawiBk0M+z9XeYa5tNBPVWMeDbKGONMEFiPI0Q8CSQSJokIUZJJIZU00skg
kyyyySGXPPIpoJAiiimhlN2sZQFTaaCa/WxkMTNp4RBbWM4cDrOVFRxhG0cp
413Efs6xkg4yqaCdODIop43f3h0hKhdOnj2f9O8MkKjnUstb/Q2vecVLXvCc
ZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDB/5Rj8J/iuH
Gk7rvxgmohfQwAd9nFS5hGa+6n+Jl7Op5pQemOmU0cpPa0MkyfnU814fI0Uu
pokv+h9CchZVnNQnSJNLaeGHPkhYzqOOPn2UZLmIRj7rXeaJSOxexu5l7F7+
j/fyHywLyL8=
          "]]}]}, {}, {}}, {{}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1Hec1gMcB/AnRNftu0LDuBYq0lXuuoFbKSW6aInqhCR3SgPZu+yRBjIq
ZDUpGe1QCoVQdoV2Zrb39+WP9/P5Pt/vH8/z+7xez5NTVVNZXSuRSHT0kpuU
SOSZTzan87V5PndQl0PtvpOvchcDyecU+wy+Mb/MOJI5zO57uYi7GRSfQwqH
u/0gX+MeqijgVPtMvjW/wnhSaWC3Xb7OvVxAIWk0dNsh3+A+BlNEOo3cdso3
uZ8LKSaDxm675GIe4KJ4djI5wm23XMKDXBzPSRZHuu2RS3mIIfG9yeYot71y
GRO4hBLqcbTbPrmchxlKKfXJcftRrmAil1IWndPE7Se5kkkMozz6panbz3IV
k7mMiuiXZm6/yLeYQjWdokuau/0q3+YRajgtuqSF22/yHR7lcjpHlxzjtl+u
5jGG0yW65Fi33+UapjKC06NLjnP7Q77L41xB1+iSlm5/yrU8wUi6RZe0cvtL
ruNJRnFGdElrt7/lezzFaLpHlxzv9o98n2mM4czokhPc/pUfMJ0rOSu6pE38
GFgvZnAVPaJLTrSvxQbz01xNZXRJW/sD+ND8DGPpGV2Sa38gH5mf5RrOji5p
Z38QH5tnci3nRJe0t6/NRvNzXEev6JIO9gfzifl5rqd3dMlJ9ofwqfkFbqBP
dEmefR0+M7/IjfSNLsm3T2KT+SVuol90mfj//6Eum82zuJlzo0sK7JP53Dyb
W+gfXVJon8IX5jncynnRJUX2qXxpnsttnB9dUmyfxlfmedzOAErssthiXsCd
lHqfzVbzQsrM9dhmLpf1qYj/N+//A8oAil8=
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1Xe8j3UUB/DfpUIaJAlRpFKoZKSSSmVmXXtz7XmRlb2ylV12g3YUyiij
7L33pqIhJJrkfV798b7nfL7PH8/r9zznPDdPSmpyx6REIrHMnyIZEomi+uKU
ld9Ik0iU5Lx+ASNZKbcgO4flrnyqT+YGNshvUY435ae5oF/IKL6RW5KDI3I3
5uqrk46N8tuUZ4pcit/0XzCab+VW5OSo3J15+hqkZ5P8DhWYKj/DRf2XjGGV
3Jq7OCb34DN9TTKwWX6XzfrO3McZuSLT9M/yu34Ru/WvUIjX5NVqG3JxXD6s
DqQYPeXP1VrcyPeMZIvz/WpfCnOW8cx2vkXtEvfjfn6M+/BP9K4fV1/lT57g
HBO5ykuuT1efi+fHJfmUOpy/WSzvUXtxmYf5mbG87toatS25Oc1oTjg/og6i
ePx2eb5am4xslQ+o/XiMOfJW9WUe4Ce5EjP0peO++iWMZa3cjrs5KfeKmdPX
4Sa2ye9RmZny8/yhX8o4elOFWc5fiGei/4rx9KFqzKXzF/lL/zUT6Buz6awu
N7Ndfp9qMYdymXheSf/vx0T6xSw6q8ct7JA/IDnmTi4b70e/nEn0j9lzVp9b
2Sl/SPWYM7kc/+pXMJkBMVvOGpCJXfJH1GC2XJ4rsYexnwxksbOGZGa3/DE1
mSNXiHmIvYt9ZJ3cnns4JQ+Kd6BvxG3skT+hVjxvuSL/xd7FPrJe7kAevpMH
xzvQNyYLe+N7wDZ9V/LHXMm147nGXJJgVewnG/QdyRs7IQ+J96Zvwu3skw+q
/SnCXHm72o0H+UWuE+9AX4kkVst71d48wjR5o5rKvZxhDD84P6oO5vHYpZgL
tSlZ4zqj2O/8kDogZo6i/MqEeBfMc32H2j32jIdi1mOP4t1y1vUT6tCYPZ7k
PJPi2cbsxUyolblImni2jGCNa/vUPjwav5dxTHe+Se1EPk7Lx9QhlIh7xcyq
KdzBgfjOsVPfgwLxG+R6MV/6KqRlbewnw2KG5WZk42B8v6gf8yVX5TrWxT4y
nAY0pBGNaUJTUmhGc1rQkla0pg1taUd7OhD/kFLpRGe6xEy6VzWuZ33sOSNi
b+Tm3MkheT679D0pyDn5pDqMp7jA5JjBtL5Lrl0DrLP7Hw==
        "]], 
       LineBox[CompressedData["
1:eJwNwwNXgwEAAMCvlpZtLdu2zWXXspb2/193710k9hWNJwVBkHAoHATJoSB4
9Ng1J+2zw3cv3XHeEUM+eeK6U/bb6YdX7rrgqCk+e+qG0w747Z0Hrtjlp9fu
ueiYqb545qYzDtpt3Bv3XXLcNF89d8tZh+wx3QzDZppltjnmmme+BRZaZLEl
llpmuRVWWmW1NdZaZ70RG2y0yWZbbLXNNy/cds5he/3y1qjLTvhjzENX/fXe
I/98MGG7/xrpHj8=
        "]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV03e8T2UcB/AjpIuoNCQjWtohKqIUigahKZLQRsvIXtl7j2vvspq2bLmK
EmWPaxNS9nx//3jfz/N5zu/3u+f1nO8pWKdh1QYZkiRJ9ad4SpJksRZJ44xJ
8nWmJHmZnGzUf2CNdTOKcUEfwwLr9yjEYX0lTfhGf4Vr2KT/yFrrL3mYi/pY
Flq/z238o/9CU6bqr3Itm/Wf+N26OcW5pI/jZ+sPuJ0j+iqaMU1/jevYos/i
D+sWlCBhvL1F8kPu4Ki+V/amEmn6JtmBMlwV929vunydXGzVd8pulGe2vk62
5BFOMJIMHKQ/L3KeCcHnF8uP4jOZk+RO+R+pHHNtn+xDZteek2cZRzZ9teub
rTuSUX9CnmI0WfWUOFMGxb3rL8W5M4kcenPfn2H9BtfzL8PYZn+X7E4F5uh/
ylY8yhUcYgCVmej6Evkxd8Xv6L+yxfornoz7ibO3N1PW4Aa263OZxFK9AYU5
rv9GS1rxrb03uZEd+jwms0xvyN1xZjGftOY7vSY3sVOfzxSW6424h/9jHmnD
93otcrMrZjrmnxX6J9wbzzHmj7bxLuhvcTPpMcMx7zH7+qfcx8mYN9rF7Ou1
ycPumFnWW7fmsXh2TI3Zl59xfzzHmCPax+zrb3MLe2Jm2WDdhpJkYlrMvvyc
Bzgdz4yt1p0oGzMTsxzvgqxDXvbq6bIHz7BY/0u2pVTMHdPtpckveJAz+n7Z
l+dZr2+TnXmK7BxhMFVjPl2fLd8hXzxfhrPP/m7Zk2fjdxnLEvt/y3Y8HmfJ
KK7kMAPJYn6ryAsxf1ytz/C91daNY0b1h+I5M4IU/azrB6z7xW/pL8hzjI97
1je4vt26S5yp/nScI2Pi9znKEKpxickx374zR9YlP/v1PbIXFVmqb5TtKR33
zcx4P2QTisQ9xJnTKd4HvR4FOBAzHvNP55h7e/W5lYMxzzHrdKEr3ehOD3rS
i970oS/96M8ABjKIwQxhKMMYTiojGMmoeH/8v3cpyKF4L+KdiXdUb0pRzscz
Y4d1V8qRg2MMpTqJM50ic8rRPnsZZ+PtDw==
        "]], LineBox[CompressedData["
1:eJwNw0NXhAEAAMCvQ4eO2dhst9l2bXZt1m62f3kz700oGo/EEoIguDecFAR9
iUHQ4YvnbjnniMnee+Sqk/b7acx9l+z01Qu3nXfUFB88ds0pB/wy7oHLdvnm
pTsuOGaqj5647rSDdvvulbsuOm6aT5664YxD9phuhplmmW2OueaZb4GFFhmy
2BJLLbPcCiutstoaa62z3gYbbbLZFlttM+yzZ24667C9fnjtnhEn/PbGqCv+
eOuhv975Z7v/d0IlWw==
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1HfAjlUcBuDXHhXaS6JFpbRF0UA7oUkl0SKhIhRpkK1sRbRoGBUqo1S0
0CIrK6UtQhpWdd1/XN/v3Od53u993nN+z6nSsn2TdkUKhUInf2qWKRSKGZdg
ij8vlywUrucwNslf0JMn5UvZi7Xyu7zKK/INVOJ3+Ut68ZR8GeX4Rn6PGcZt
qM5u+TUmGt/I4WyWF+Ve43s4jRI8Zm60ejnlWSe/z0zjOzmBf+XXmWTcnMps
kT9VH+RcFudz6r2cTkm+ohcX0tv1MWpDKrCcvnxr/hP1fs7O72Ewc83PUtty
IqsYyH9ZB/URNlKf9QznD6a6Plm9iZ+pwtf0zxqy1fXP1B5s4Lw8A0Pzm/LM
rs9VO/ILZ7CGxynFkqwZF/E9I+jjM0+rV7A338nz1Qeowzx5tnoXNSgwzdwU
tQVH5NnlJfRlrNyIffLb5A+YTj/GmWvMvvl++UPeSL/IN3Mk2+Sl9OcZuQn7
8YP8EW+mP+SWHMWf8jIG8Kx8Jfvzo/wxb2X/5VYczV/ycgbynHwVB/BT9pK3
jdtxEkWYYW6qegvH8Le8gnnGnahJaQaZe169mgOzf1lH3jFuz8kUZaa5aeqt
VOUf+XP1Ic7PfmfN1Ps4kzLZP3MvqNdwUPZWXqB2oy4L5DlqB05hdZ6HYizi
URowK3uh3kY1VjKA7Xmf1Yf5jXrpA4al53Jf9krtzK/UYi1PsJmyLKU3m7g4
+8XI7Gfu8/nx6rVZZw5mBf3y/1xbqHbnHNYxhIU5S9S7OZXiLKYnFzA7vaPe
zrHskFelR4y7UJs9GGxugnodh7Ah7372Ob0k38Fx7JRXM4QX5aYcmvXIO5d9
ZCjDGM4IRjIqZ2DOtZxFOSfyPuU9SL+nh9OX6bX0R/Yxa5FnyvfwUs7WnJc5
83JOZc73NqMiG9Mf2d/0stya49klr0mPG3flLPZkGX24JO8Ao/KOMNm9/wOi
5N4T
        "]], LineBox[CompressedData["
1:eJwNzMVSA0AQQMENFoK7W3B3d3cN7s4Riq/HpQ9dr2pnZuN3L4nnSAjhldFY
CK3REN7SQjjWVcbpooEb9lhgmBou2GKGftp4d3+ia0zQTSO3JFhkhFou2WaW
Adq5Y58lRvnw36muM0kPTdRxxQ5zDNLBp/0z3WCKXpqJ82X2zQ+//BG8R0gi
mRRSSSNKOjEyyCSLbHLIJY98CiikiGJKKKWMciqopIpzNpmmjxbquWaXeYbo
5J4DlhnjgUNWeOSIJ6r5ByaGIsU=
        "]]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1HmcT1UYB+CraGwVZcnSYilF0YLQHlkLTdlSQiVLEZJSUVGWirEzlcnI
0Gx2ZqZBlLQSKaTdXilt2tPz/vHM+33Pnc/v3nvOuadW3yGpg0skSdLdn+Zl
kqR/SpL0K50kNflGLiCDMfom/C1vYyoP6utzVH6LPAZwr7Ez2SsX8jJP6Jvy
j7ydaYzQN+AneTP5TNBfTUk+1Q+kv3wW++Qi0uTWlGe+/kn1cv6VP2Ku3InK
TNc/pF7Iz3Km2p235ZlqByqSTW+WGJ+oXkMpsridPcZfVFNZwxnkcRdrGRTv
rp7NUvbHe6tdKeC1mDO1DSs5mcX0oohM159Sm7Gc//SvqLexQ05XO1OFGfqR
6kX8Ir/DLPlGTov76yep13ISn+nvi7mUz+GAXMyCmAPuZ5DxWhyU18a94zd5
2FhDfpXfZRmD4/eM1eaQvI6FjNU357j8MbN5RN+I3+T3WM6QuKexOhyW15PF
OH0LEj7Rz2GUfDHH5PdZwbP660jhc/0D8UxyXb6VX4/9JbflFBbpn1avoAQ7
Y4/wqHwJv8sfxPPKN3F6rJH+OfV6SvOF/iX1FqoxNN5DPZfv5PlqNzbI09V2
nMqr3BlrbfwZ9UpOYCE92WX8BfVmVlOVXPpSTLrrj6mXsow/Yt3UHhSyJeZJ
7cgqKpFDn9hzMeb682pLVlAm5oM7+NK1eeqtVCefuxkWc6qex/fyRmbI7akQ
76Qfr17FieyOd+Bx+TL+lLeymsn6VpTlK/1whsr1OCK/QXZ8W3GeMMz4+fwg
v0lOzHucFfEdx76PPRn7KvZGrGHMT9yb0XFOxVkTZ0J8T7EnY1/F+sf8x3PH
GRPfeHwjsZdinWOO4lmZEs/o/hfwo7yJ3Jin+H1jjflL/pA18f/6GyjH1/oM
tQs1WMI9rCPNtf8B7Lq95A==
        "]], LineBox[CompressedData["
1:eJwNzkN2hEEAhdG/w+7YVsfGNMvIErKAZJANxrZt29Yd3FPvq1ODinb3dvWE
giDoozMSBFfhIGhwFpLEtz6lxs4lgXd9T7NdQip/up+onUkMz/qaRruIZH70
GbV2Hol86Ada7FLSCBhwV+nMIpYXfUOTXUwKv/qcOjufMJ/6kUGqdDZxvOpb
LhhimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454phq
/8ohnjd9xyX1uoAIX/qJVruMdEK0UU4G7VTQwYm3/5UnQtU=
        "]]}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{5., 0},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 21.213203435596423`}, {0, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.3242640687119285, 0.3242640687119285}, {
   0.12747938819483515`, 0.12747938819483515`}}]], "Output",
 CellChangeTimes->{
  3.662404459246986*^9, 3.662404598895645*^9, 3.662405222464849*^9, 
   3.662405718428056*^9, 3.662406297584968*^9, 3.662406330339636*^9, 
   3.662406417572104*^9, 3.662406805347022*^9, 3.662406839001141*^9, {
   3.66240688798071*^9, 3.6624069126876163`*^9}, {3.662406984717441*^9, 
   3.662407012861548*^9}, {3.6624070836417437`*^9, 3.662407106780003*^9}, {
   3.662407909635324*^9, 3.662407928564303*^9}, 3.6624079656102057`*^9, 
   3.6624088419917307`*^9, 3.662408907167906*^9, {3.6624089455614347`*^9, 
   3.662408976175329*^9}, {3.662409014175234*^9, 3.662409088225396*^9}, 
   3.662409224178812*^9, 3.6624105841259403`*^9, 3.662410646600896*^9, {
   3.662411258379698*^9, 3.662411325108368*^9}, 3.662411411686612*^9, 
   3.662411460658895*^9, 3.662411832776853*^9, 3.662754828152622*^9, 
   3.662755118997655*^9, 3.662755189829032*^9, {3.662755219952276*^9, 
   3.6627552330088873`*^9}, 3.662844577584013*^9, 3.662845109814867*^9, 
   3.662845252658106*^9, 3.662845545070427*^9, 3.6629925511403713`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting functions", "Section",
 CellChangeTimes->{{3.662836257103595*^9, 3.662836263525779*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ind", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"SabA", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "individuals", " ", "in", " ", "each", " ", 
    "plot"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Nu]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]2p", "[", "L_", "]"}], ":=", 
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["L", "\[Rho]"], ")"}], "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Lambda]"}], "L"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], ")"}], 
     
     RowBox[{"-", "1"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]2", "[", "L_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", "ind", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"Nspecies", "*", "Lx", "*", "Ly"}], ")"}]}], ")"}], "*", 
    SuperscriptBox["\[Rho]", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "\[Lambda]"}], "L"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"BesselK", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}], 
          RowBox[{"BesselI", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rsapres2medp", "[", 
    RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", 
       RowBox[{"n", "+", "1"}]]}], "]"}], "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", "n"]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sarmedp", "[", "L_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", "1"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SAR", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Nspecies", "*", 
     FractionBox[
      RowBox[{"sarmedp", "[", "r", "]"}], 
      RowBox[{"sarmedp", "[", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
    RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SAD", "[", 
    RowBox[{"n_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Nspecies", "*", 
     FractionBox[
      RowBox[{"rsapres2medp", "[", 
       RowBox[{"n", ",", "r"}], "]"}], 
      RowBox[{"sarmedp", "[", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
    RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"upRichness", "=", 
   RowBox[{"NsppSamp", "*", 
    FractionBox[
     RowBox[{"sarmedp", " ", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "dens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}], 
     RowBox[{"sarmedp", " ", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"samp", "*", "Asp"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "dens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"UPdens", "=", 
   RowBox[{"NSpecies", "*", 
    RowBox[{"dens", "/", "upRichness"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"downSAR", "[", "r_", "]"}], ":=", 
   RowBox[{"upRichness", "*", 
    FractionBox[
     RowBox[{"sarmedp", "[", 
      RowBox[{"r", ",", "UPdens", ",", "\[Lambda]", ",", "\[Rho]"}], "]"}], 
     RowBox[{"sarmedp", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "UPdens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"SAR", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662845323905514*^9, 3.6628453352031307`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/D+BhLJU
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 20}, {0., 73.64890827995104}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.662845336136422*^9, {3.662992555597104*^9, 3.6629925673089657`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1277, 980},
WindowMargins->{{Automatic, -1277}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 210, 4, 92, "Title"],
Cell[792, 28, 373, 9, 81, "Subtitle"],
Cell[1168, 39, 182, 5, 49, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1375, 48, 107, 1, 80, "Section"],
Cell[1485, 51, 222, 5, 30, "Text"],
Cell[1710, 58, 1455, 37, 63, "Input"],
Cell[3168, 97, 231, 4, 30, "Text"],
Cell[3402, 103, 1975, 49, 97, "Input"],
Cell[5380, 154, 185, 4, 30, "Text"],
Cell[5568, 160, 1908, 55, 97, "Input"],
Cell[7479, 217, 178, 4, 30, "Text"],
Cell[7660, 223, 984, 27, 80, "Input"],
Cell[8647, 252, 210, 4, 30, "Text"],
Cell[8860, 258, 3542, 99, 114, "Input"],
Cell[12405, 359, 203, 4, 30, "Text"],
Cell[12611, 365, 5334, 154, 165, "Input"],
Cell[17948, 521, 154, 2, 30, "Text"],
Cell[18105, 525, 3146, 88, 97, "Input"],
Cell[21254, 615, 236, 5, 30, "Text"],
Cell[21493, 622, 4891, 145, 199, "Input"],
Cell[26387, 769, 175, 4, 30, "Text"],
Cell[26565, 775, 1360, 30, 63, "Input"],
Cell[27928, 807, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[28056, 812, 248, 5, 28, "Input"],
Cell[28307, 819, 2264, 40, 230, "Output"]
}, Open  ]],
Cell[30586, 862, 148, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[30759, 870, 1545, 48, 126, "Input"],
Cell[32307, 920, 1911, 32, 97, "Message"]
}, Open  ]],
Cell[34233, 955, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[34360, 960, 770, 19, 28, "Input"],
Cell[35133, 981, 1352, 26, 81, "Output"]
}, Open  ]],
Cell[36500, 1010, 125, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[36650, 1017, 1060, 29, 80, "Input"],
Cell[37713, 1048, 1676, 35, 67, "Output"]
}, Open  ]],
Cell[39404, 1086, 135, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[39564, 1093, 252, 6, 28, "Input"],
Cell[39819, 1101, 1791, 40, 77, "Output"]
}, Open  ]],
Cell[41625, 1144, 124, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[41774, 1151, 2299, 56, 233, "Input"],
Cell[44076, 1209, 4552, 85, 533, "Output"]
}, Open  ]],
Cell[48643, 1297, 180, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[48848, 1305, 2712, 74, 165, "Input"],
Cell[51563, 1381, 3288, 59, 500, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[54900, 1446, 100, 1, 50, "Section"],
Cell[55003, 1449, 141, 3, 30, "Text"],
Cell[55147, 1454, 580, 13, 46, "Input"],
Cell[55730, 1469, 209, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[55964, 1476, 202, 4, 28, "Input"],
Cell[56169, 1482, 479, 8, 28, "Output"]
}, Open  ]],
Cell[56663, 1493, 376, 6, 49, "Text"],
Cell[57042, 1501, 112, 1, 30, "Text"],
Cell[57157, 1504, 228, 6, 28, "Input"],
Cell[57388, 1512, 132, 3, 30, "Text"],
Cell[57523, 1517, 305, 10, 28, "Input"],
Cell[57831, 1529, 205, 2, 30, "Text"],
Cell[58039, 1533, 1691, 40, 63, "Input"],
Cell[59733, 1575, 177, 2, 30, "Text"],
Cell[59913, 1579, 1007, 28, 97, "Input"],
Cell[60923, 1609, 170, 2, 30, "Text"],
Cell[61096, 1613, 1083, 28, 80, "Input"],
Cell[62182, 1643, 202, 2, 30, "Text"],
Cell[62387, 1647, 3542, 99, 114, "Input"],
Cell[65932, 1748, 195, 2, 30, "Text"],
Cell[66130, 1752, 6615, 183, 199, "Input"],
Cell[72748, 1937, 154, 2, 30, "Text"],
Cell[72905, 1941, 5816, 159, 182, "Input"],
Cell[78724, 2102, 304, 4, 30, "Text"],
Cell[79031, 2108, 5097, 133, 182, "Input"],
Cell[84131, 2243, 155, 3, 30, "Text"],
Cell[84289, 2248, 716, 21, 46, "Input"],
Cell[85008, 2271, 167, 2, 30, "Text"],
Cell[85178, 2275, 1360, 30, 63, "Input"],
Cell[86541, 2307, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[86669, 2312, 296, 6, 28, "Input"],
Cell[86968, 2320, 1898, 32, 243, "Output"]
}, Open  ]],
Cell[88881, 2355, 133, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[89039, 2362, 186, 4, 28, "Input"],
Cell[89228, 2368, 942, 24, 46, "Output"]
}, Open  ]],
Cell[90185, 2395, 140, 2, 30, "Text"],
Cell[90328, 2399, 1609, 48, 120, "Input"],
Cell[91940, 2449, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[92067, 2454, 770, 19, 28, "Input"],
Cell[92840, 2475, 528, 12, 81, "Output"]
}, Open  ]],
Cell[93383, 2490, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[93525, 2495, 1060, 29, 80, "Input"],
Cell[94588, 2526, 966, 21, 63, "Output"]
}, Open  ]],
Cell[95569, 2550, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[95721, 2555, 252, 6, 28, "Input"],
Cell[95976, 2563, 1050, 25, 65, "Output"]
}, Open  ]],
Cell[97041, 2591, 116, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[97182, 2596, 2299, 56, 233, "Input"],
Cell[99484, 2654, 9726, 167, 534, "Output"]
}, Open  ]],
Cell[109225, 2824, 172, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[109422, 2830, 2817, 77, 165, "Input"],
Cell[112242, 2909, 58056, 975, 515, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170347, 3890, 103, 1, 80, "Section"],
Cell[170453, 3893, 6716, 209, 483, "Input"],
Cell[CellGroupData[{
Cell[177194, 4106, 239, 6, 28, "Input"],
Cell[177436, 4114, 5307, 95, 243, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
