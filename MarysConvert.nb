(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    498323,      10886]
NotebookOptionsPosition[    488772,      10599]
NotebookOutlinePosition[    489148,      10616]
CellTagsIndexPosition[    489105,      10613]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Deriving the empirical correlation function and fitting a curve to it\
\>", "Title",
 CellChangeTimes->{{3.662411661666781*^9, 3.662411661991362*^9}, {
  3.66241207575276*^9, 3.6624121230880127`*^9}}],

Cell["\<\
Translating from \[OpenCurlyDoubleQuote]Towards a unified descriptive theory \
for spatial ecology\[CloseCurlyDoubleQuote]\
\>", "Subtitle",
 CellChangeTimes->{{3.662412134962429*^9, 3.662412156210373*^9}, {
  3.662412505400652*^9, 3.662412516577264*^9}, {3.663011790323432*^9, 
  3.663011790792736*^9}}],

Cell["\<\
M Scott & M Osmond
2016 January 21\
\>", "Subsubtitle",
 CellChangeTimes->{{3.662412158914653*^9, 3.662412165506485*^9}, {
  3.662412525465302*^9, 3.6624125326489677`*^9}}],

Cell[CellGroupData[{

Cell["Made-up data", "Section",
 CellChangeTimes->{{3.66275569694698*^9, 3.662755710058949*^9}, {
  3.6630036578058243`*^9, 3.663003660478095*^9}}],

Cell["\<\
Define the spatial extent of the area of interest (e.g., Barro Colorado \
Island)\
\>", "Text",
 CellChangeTimes->{{3.662411468482938*^9, 3.6624114723466263`*^9}, {
  3.662412173377927*^9, 3.662412192666273*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Lx", ",", "Ly"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "500"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "total", " ", "x", " ", "and", " ", "y", " ", "distance", " ", "of", " ", 
     "area", " ", "of", " ", "interest"}], ",", " ", 
    RowBox[{
    "ie", " ", "a", " ", "grid", " ", "with", " ", "length", " ", "Lx", " ", 
     "and", " ", "width", " ", "Ly"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Asub", "=", "100"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"space", " ", "between", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "we", " ", "chop", " ", "up", " ", "the", " ", "total", " ", 
      "area", " ", "into", " ", "squares", " ", "with", " ", "length", " ", 
      "Asub"}], ";", " ", 
     RowBox[{
     "best", " ", "if", " ", "this", " ", "divides", " ", "the", " ", "total",
       " ", "space", " ", "nicely"}]}], ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"Lx", "/", "Asub"}], " ", "and", " ", 
     RowBox[{"Ly", "/", "Asub"}], " ", "are", " ", "integers"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624105632177896`*^9, 3.662410563388131*^9}, {
   3.662410642111521*^9, 3.6624106433361464`*^9}, {3.6624113185715933`*^9, 
   3.6624113205874157`*^9}, 3.6624118299636374`*^9, {3.662412200746975*^9, 
   3.66241233394919*^9}}],

Cell["\<\
Make up the data (because the authors suck at making it available)\
\>", "Text",
 CellChangeTimes->{{3.6623967906428547`*^9, 3.66239684459477*^9}, 
   3.662396960068564*^9, {3.6624123100515614`*^9, 3.662412361372697*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numplots", "=", "10000"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", 
    RowBox[{"plots", "/", "datapoints"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Lx"}], "}"}], "]"}], "]"}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Ly"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", "10", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "locations", " ", "of", " ", 
     "each", " ", "plot"}], ",", " ", 
    RowBox[{"species", " ", "code", " ", "of", " ", "each", " ", "plot"}], 
    ",", 
    RowBox[{
    "abundance", " ", "of", " ", "that", " ", "species", " ", "in", " ", 
     "each", " ", "plot"}]}], "*)"}], " "}]}], "Input",
 CellChangeTimes->{{3.662406789653805*^9, 3.662406801493565*^9}, 
   3.6624068355453568`*^9, {3.6624068840528297`*^9, 3.662406909245325*^9}, {
   3.662407072563799*^9, 3.662407104474935*^9}, 3.662408757424716*^9, {
   3.662408793027438*^9, 3.662408836844111*^9}, 3.6624105559804363`*^9, {
   3.662411250826935*^9, 3.6624112514645576`*^9}, {3.6624113858900433`*^9, 
   3.662411406665563*^9}, {3.6624123720937433`*^9, 3.662412388150242*^9}, {
   3.6624124634782267`*^9, 3.662412473070211*^9}, {3.662755105226478*^9, 
   3.662755177567297*^9}}],

Cell["\<\
Get each variable of interest from data table\
\>", "Text",
 CellChangeTimes->{{3.662411487805341*^9, 3.6624115162679358`*^9}, {
  3.66241239544563*^9, 3.662412400485498*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gx", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"x", " ", "coordinates", " ", "of", " ", "all", " ", "plots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gy", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"y", " ", "coordinates", " ", "of", " ", "all", " ", "plots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sp", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "data", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"species", " ", "code", " ", "for", " ", "each", " ", "plot"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ab", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "data", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"species", " ", "abundance", " ", "at", " ", "each", " ", "plot"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394854259613*^9, 3.6623948971517143`*^9}, {
   3.6623949767533827`*^9, 3.662394977232485*^9}, 3.662395418640141*^9, {
   3.662395615527067*^9, 3.6623956156540813`*^9}, {3.662396523289652*^9, 
   3.662396541418125*^9}, {3.662396815443509*^9, 3.662396912669395*^9}, {
   3.662412409630423*^9, 3.662412412742033*^9}}],

Cell["\<\
Some summary statistics of the data\
\>", "Text",
 CellChangeTimes->{{3.6624115004831676`*^9, 3.6624115190117893`*^9}, {
  3.662412416239183*^9, 3.662412426541686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Uspecie", "=", 
    RowBox[{"Union", "[", "sp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Nspecies", "=", 
    RowBox[{"Length", "[", "Uspecie", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TotAbundance", "=", 
    RowBox[{"Total", "[", "ab", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"total", " ", "abundance"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "species"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394155397892*^9, 3.662394208972786*^9}, {
  3.66239435484977*^9, 3.662394355553513*^9}, {3.662394932920998*^9, 
  3.662394933324882*^9}, {3.662396920669482*^9, 3.662396931205062*^9}, {
  3.662411451991355*^9, 3.662411457827334*^9}, {3.662412431854793*^9, 
  3.6624124470392838`*^9}}],

Cell["\<\
Defining the coordinate system of the area\
\>", "Text",
 CellChangeTimes->{{3.6624115301840067`*^9, 3.662411532736253*^9}, 
   3.662412483413187*^9, {3.6624127080035973`*^9, 3.6624127139072323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allpos", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Lx", "/", "Asub"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Ly", "/", "Asub"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"coordinates", ",", " ", 
    RowBox[{"in", " ", "translated", " ", "form"}], ",", " ", 
    RowBox[{"ie", ".", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyCpos", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "i"}], "+", "1"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "j"}], "+", "1"}], ")"}], "/", "2"}]}], "}"}],
          "//", " ", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Lx", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ly", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], 
         "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"halfway", " ", "points", " ", "between", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "use", " ", "later", " ", "to", " ", "derive", 
     " ", "the", " ", "distances", " ", "between", " ", "centers", " ", "of", 
     " ", "each", " ", "\"\<bin\>\"", " ", 
     RowBox[{"(", 
      RowBox[{"area", " ", "below", " ", 
       RowBox[{"(", "south", ")"}], " ", "and", " ", "to", " ", "left", " ", 
       RowBox[{"(", "west", ")"}], " ", "of", " ", "each", " ", 
       "coordinate"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allpair", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"allpos", ",", "allpos"}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pairs", " ", "of", " ", "each", " ", "translated", " ", "coordinate", 
     " ", "with", " ", "each", " ", "other"}], ",", " ", 
    RowBox[{"e", ".", "g", "."}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "allpos", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", 
    RowBox[{"coordinates", "/", "bins"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395041124155*^9, 3.662395076995739*^9}, 
   3.662396503297634*^9, {3.662397225252562*^9, 3.66239727282128*^9}, {
   3.662397305190036*^9, 3.662397317542131*^9}, {3.662402580564127*^9, 
   3.662402589155075*^9}, {3.6624125591567297`*^9, 3.662412674941476*^9}, {
   3.6624128238176327`*^9, 3.662412840042054*^9}}],

Cell["\<\
Locations of plots (the bin they are in)\
\>", "Text",
 CellChangeTimes->{{3.662411540064125*^9, 3.662411543224874*^9}, 
   3.66241271663524*^9, {3.6624129056691236`*^9, 3.662412919045101*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gx", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"p", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"which", " ", "plots", " ", 
     RowBox[{"(", 
      RowBox[{
      "their", " ", "position", " ", "in", " ", "the", " ", "data", " ", 
       "vector"}], ")"}], " ", "have", " ", "x", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "x", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "p", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Lx", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gy", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"q", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "which", " ", "plots", " ", "have", " ", "y", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "y", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "q", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Ly", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule1", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "from", " ", "coordinates", " ", 
    RowBox[{"(", "tuple", ")"}], " ", "to", " ", "single", " ", "identifying",
     " ", "number"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule2", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "back"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYpos", "[", 
     RowBox[{"{", 
      RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
    RowBox[{"Intersection", "[", 
     RowBox[{
      RowBox[{"Xpos", "[", "p", "]"}], ",", 
      RowBox[{"Ypos", "[", "q", "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"which", " ", "plots", " ", "have", " ", "location", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}], " ", "within", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", 
      RowBox[{"x", " ", "p"}]}], ")"}], " ", "and", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"y", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", " ", 
      RowBox[{"y", " ", "p"}]}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"possub", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{"XYpos", ",", "allpos"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "which", " ", "plots", " ", "fall", " ", "in", " ", "which", " ", "bin", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"e", ".", "g", "."}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", ",", "y"}], ")"}], "=", 
       RowBox[{"(", 
        RowBox[{"321", ",", "434"}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"with", " ", "Asub"}], "=", "100"}], ",", " ", 
      RowBox[{"would", " ", "fall", " ", "in", " ", 
       RowBox[{"(", 
        RowBox[{"400", ",", "500"}], ")"}]}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395292209701*^9, 3.662395537499296*^9}, {
  3.6623960553689823`*^9, 3.662396067946538*^9}, {3.662397974196926*^9, 
  3.662398051690569*^9}, {3.6623981180157757`*^9, 3.6623981500469017`*^9}, {
  3.6623982769015217`*^9, 3.662398325149023*^9}, {3.66239886727868*^9, 
  3.662398876830975*^9}, {3.6623994181640377`*^9, 3.66239950349568*^9}, {
  3.6623997780956163`*^9, 3.6623998470706177`*^9}, {3.6624129296834784`*^9, 
  3.662412931482998*^9}}],

Cell["Which species are where", "Text",
 CellChangeTimes->{{3.66241155496421*^9, 3.66241156097239*^9}, {
  3.6624129435894413`*^9, 3.662412950140648*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYS", "[", "i_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gx", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"gy", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gives", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "location", " ", "of", " ", 
     "plots"}], ",", " ", 
    RowBox[{"and", " ", "sp", " ", "code"}], ",", " ", 
    RowBox[{"in", " ", "each", " ", "bin"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SabA", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
     "&"}], "/@", " ", "Uspecie"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "with", " ", "each", " ", 
    "species", " ", "in", " ", "each", " ", "bin"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SA", "[", "i_", "]"}], ":=", 
   RowBox[{"Boole", "/@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"sp", "[", 
          RowBox[{"[", 
           RowBox[{"possub", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", " ", "Uspecie"}], ")"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "at", " ", "least", " ", "one", " ", "plot", " ", 
     "with", " ", "a", " ", "species", " ", "in", " ", "given", " ", "bin"}], 
    ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"presence", "/", "absence"}], " ", "in", " ", "bin"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Spos", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SA", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "possub", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"table", " ", "with", " ", "all", " ", "bins"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395558546788*^9, 3.662395590718184*^9}, {
   3.662395637422887*^9, 3.662395855679844*^9}, {3.662396084462902*^9, 
   3.662396093135119*^9}, {3.6624000366580553`*^9, 3.6624000612422333`*^9}, {
   3.662400105056695*^9, 3.66240013763741*^9}, {3.662400198268684*^9, 
   3.662400203847021*^9}, {3.662400283268598*^9, 3.662400340107189*^9}, {
   3.662400370913103*^9, 3.662400403535512*^9}, {3.662400442030035*^9, 
   3.662400450460515*^9}, {3.662400495985153*^9, 3.662400502456811*^9}, {
   3.662401369958474*^9, 3.6624013885339117`*^9}, 3.6624017363239193`*^9, {
   3.662412958541737*^9, 3.662413003201478*^9}}],

Cell["\<\
Covariance in species abundance by distances\
\>", "Text",
 CellChangeTimes->{{3.662411564012209*^9, 3.662411577084908*^9}, {
  3.662413007593816*^9, 3.6624130216361732`*^9}, {3.662413321726729*^9, 
  3.6624133250631638`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ")"}], "^", "2"}], "]"}], 
    "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Euclidean", " ", "distance", " ", "between", " ", "center", " ", "of", 
    " ", "two", " ", "bins", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"in", " ", "translated", " ", "space"}], ";", " ", 
       RowBox[{
       "need", " ", "to", " ", "multiply", " ", "by", " ", "Asub", " ", "to", 
        " ", "get", " ", "real", " ", "distances"}]}], ",", " ", 
      RowBox[{"which", " ", "we", " ", "do", " ", "later"}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"not", " ", "sure", " ", "what", " ", "this", " ", "does"}], ",", 
    " ", 
    RowBox[{"but", " ", "doesnt", " ", "hurt"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alldist", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"dist", ",", 
      RowBox[{"allpair", "/.", "rule1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "distance", " ", "between", " ", "center", " ", "of", " ", "all", " ", 
    "pairs", " ", "of", " ", "bins"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rvec", "=", 
    RowBox[{"Union", "[", "alldist", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "unique", " ", "distances", " ", "in", " ", "increasing", " ", 
    "order"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"indexpair", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"index", ",", 
      RowBox[{"allpair", "/.", " ", "rule1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "translate", " ", "from", " ", "tuples", " ", "of", " ", "coordinates", 
    " ", "to", " ", "pairs", " ", "of", " ", "coordinate", " ", "indices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"posdist", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"alldist", ",", "#"}], "]"}], "&"}], "/@", " ", "rvec"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "identify", " ", "coordinate", " ", "index", " ", "pairs", " ", "whose", 
    " ", "bin", " ", "centers", " ", "are", " ", "given", " ", "distance", 
    " ", "apart"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cov", "[", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"SabA", "[", "i", "]"}], " ", 
        RowBox[{"SabA", "[", "j", "]"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "i", "]"}], "]"}], " ", 
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<covariance\>\"", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "bins"}], ",", " ", 
    RowBox[{
    "note", " ", "that", " ", "the", " ", "\"\<covariance\>\"", " ", "is", 
     " ", "taken", " ", "over", " ", "all", " ", "species"}], ",", " ", 
    RowBox[{
    "ie", " ", "\"\<covariance\>\"", " ", "in", " ", "community", " ", 
     "composition"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allcov", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"Cov", ",", 
        RowBox[{"indexpair", "[", 
         RowBox[{"[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"posdist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "covaraiance", " ", "in", " ", "number", " ", "of", " ", "plots", " ", 
    "with", " ", "species", " ", "at", " ", "each", " ", "distance"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/VTqeGC552tH62AI7diQEwWiWRJN60H0P6stC0G0
4OwJS0B0X9PT0gogvcdXoQJEP9l4v6MSSHM0ufaA6IQXE6aC6AnrPaaD6JSr
5+eB6PXT5BaA6NsxWktA9DVP+RUgetNasU0gWonj/BYQ3aN99CCI3nB9/SEQ
vWbdlisg+sm30Ksg2mV6zRMQbfX23UsQ/W7mkXcgWujiqw8gehlPkVAVkBa9
1ikBoss2rp5TD6RrQtUXguhFznWrQbRGXOQaEH3++8mjILrLKucUiLba338B
ROfs+f4ARBsl5jeoeQH9NbkKTLfnHWgF0Ub5V9rAfEezXSBaxO7GHhANAJPY
q7k=
  "]],

Cell["\<\
Our empirical correlation function\
\>", "Text",
 CellChangeTimes->{{3.662411583164523*^9, 3.6624115898929653`*^9}, {
  3.662413328936442*^9, 3.662413339075227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"empPCF", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvec", "*", "Asub"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", "allcov"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"empirical", " ", "correlation", " ", "function"}], ",", " ", 
    RowBox[{"PCF", ";", " ", 
     RowBox[{
     "first", " ", "element", " ", "of", " ", "each", " ", "pair", " ", "is", 
      " ", "the", " ", 
      RowBox[{"(", "untranslated", ")"}], " ", "distance", " ", "between", 
      " ", "the", " ", "center", " ", "of", " ", "two", " ", "bins", " ", 
      RowBox[{"(", 
       RowBox[{"rvec", "*", "Asub"}], ")"}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", "mean", 
     " ", "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "all", " ", "pairs", 
     " ", "of", " ", "bins", " ", "that", " ", "distance", " ", "apart"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.662401751323216*^9, 3.662401767856126*^9}, {
  3.6624018026823177`*^9, 3.662401805136237*^9}, {3.662402598586731*^9, 
  3.662402656960024*^9}, {3.662403448724161*^9, 3.662403449356001*^9}, {
  3.662413682182837*^9, 3.662413751871039*^9}}],

Cell["which looks like this", "Text",
 CellChangeTimes->{{3.662413762951601*^9, 3.662413766590012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"empPCF", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662402671244444*^9, 3.6624026938166847`*^9}, {
  3.6624027307213984`*^9, 3.6624027646607313`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQM7Sq3iqnQ+2EN4kQ5F2Vob//99b78jTfhA9dpE
B8HbHAHxbDD5TAcRA6YnwUC+W57s46zP2Q7VPIr83f9h6gsdjM9veb2KHar+
QJFDWghLVRLjB/vI6b/eLjlc7PB2eeq8CCagfr6csw87yhwEb+pl1DHAzK90
4HsgPsWK5YN99KMigR9HKh12avL+uwa0T1hKdoFlS5XD5Z/cviFf3kPtr3ZY
eITvACtMv0O9QzFHVRsP8wf7D1k9KXn36h24pDnVzT4B1b9afEDxSoMD142j
jIxA90Hc2+hgaijcJPP6vf318C2fDlk0OVR/myse++M91P1NDr9OTT8Fch8v
i9oRU6ZmBzazaR93c8H80+zwlyG8WxGo3+I/y416phYH2fWVl+2A7t0qFKY1
4VuLw0PDK6cS+KHue9Dq8NZSeIcc0D1pDhIbbkm0OXznz69d9/g9NDzaHNZt
PXk1F+i+c19iGsUOtDlUdzZXPXjz3r7CkTl03pl2B4F9XOfMv0Ddx9Dp8Eyy
e+ah2+/tn27mSD5n2OkQV/NyYTsDLPw6HcR8j1+0ALrXnmHCd+PNXQ5F82ui
t3PA4q/bgbNnShEXLL4UehyMfs9atpoXGD6TQx74+fQ4/NGe+EXt/Xv7ix6F
Wxad73HI8Jm2d+GL9/asj7+nlC/tdfgVzfeyR+KD/U+z18Jix/scVuUINyhJ
fbAHAHR7COw=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9955761908429934},
  Method->{},
  PlotRange->{{0, 984.8857801796104}, {0.9955761908429934, 
    1.0108588867945922`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.00030565391903197625`, 0.00030565391903197625`}}]], "Output",
 CellChangeTimes->{{3.6624026753490877`*^9, 3.662402694224242*^9}, {
   3.662402733657669*^9, 3.662402764957795*^9}, 3.662403280700993*^9, 
   3.662405717953288*^9, 3.6624062969674873`*^9, 3.662406329773899*^9, 
   3.662406416186351*^9, 3.662406804603773*^9, 3.66240683746817*^9, {
   3.662406886173161*^9, 3.66240691093393*^9}, {3.6624069838326597`*^9, 
   3.662407012312221*^9}, {3.662407083140224*^9, 3.662407106243676*^9}, {
   3.662407909118041*^9, 3.662407928023505*^9}, 3.662408841453096*^9, 
   3.662408905364181*^9, {3.6624089446938267`*^9, 3.6624089748889437`*^9}, {
   3.6624090129800463`*^9, 3.6624090870484447`*^9}, 3.662409222978368*^9, 
   3.662410582890629*^9, 3.662410645396593*^9, 3.662411257144088*^9, 
   3.662411323604559*^9, 3.662411410305233*^9, 3.6624114593953867`*^9, 
   3.662411831491273*^9, 3.6627548268499537`*^9, 3.6627551177774353`*^9, 
   3.6627551888229713`*^9, 3.662831740702335*^9, {3.662836389181806*^9, 
   3.662836411845252*^9}, 3.662842910757452*^9, 3.663011521069652*^9}]
}, Open  ]],

Cell["\<\
Fitting the function to the data\
\>", "Text",
 CellChangeTimes->{{3.6624116006129713`*^9, 3.662411617797512*^9}, 
   3.6624137709835*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Rho]", "\[Lambda]"], ")"}], "2"], 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       FractionBox["r", "\[Lambda]"]}], "]"}]}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "function", " ", "to", " ", "fit", " ", "to", " ", "the", " ", "empirical",
     " ", "PCF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"what", " ", "does", " ", "this", " ", 
    RowBox[{"do", "?"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fitcor", "=", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{
      RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
      RowBox[{"g", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", 
          SuperscriptBox["10", "9"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Rho]", ",", "0.1"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fit", " ", "the", " ", "function"}], ",", " ", 
    RowBox[{"with", " ", "some", " ", "parameter", " ", "guesses"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624027871760187`*^9, 3.662402882159881*^9}, {
  3.662403440956188*^9, 3.662403443083897*^9}, {3.662413819411948*^9, 
  3.662413832425786*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(0.00024428746532279` \[VeryThinSpace]\\)\\) - \
\\(\\(9.23143646962049`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.001555740962150276`\\)\\) - \\(\\(9.231436469620558`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.0015448481162865235`\\)\\) - \
\\(\\(9.231436469620689`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.000055761767371209636` \[VeryThinSpace]\\)\\) - \
\\(\\(9.231436469620755`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.0018719870831318541`\\)\\) - \\(\\(9.231436469620956`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 27 \[RightSkeleton]\\)\\), \
\\(\\(\\(\\(-0.003337527086568759`\\)\\) - \\(\\(9.23143646962579`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(0.0020566199588079037` \
\[VeryThinSpace]\\)\\) - \\(\\(9.231436469625858`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(0.002852563584030854` \[VeryThinSpace]\
\\)\\) - \\(\\(9.231436469626055`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.005993757605891492`\\)\\) - \\(\\(9.231436469626386`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.006380558296579242`\\)\\) - \
\\(\\(9.231436469626851`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\)}\\)\[NoBreak] is \
not a list of real numbers with dimensions \[NoBreak]\\!\\({37}\\)\[NoBreak] \
at \[NoBreak]\\!\\({\[Lambda], \[Rho]}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(\\(-5.90241394182205`*^8\\)\\), 0.2536175507636942`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", ButtonNote -> \
\\\"NonlinearModelFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6628429108482513`*^9, 3.66301152113865*^9}]
}, Open  ]],

Cell["How good is the fit?", "Text",
 CellChangeTimes->{{3.662413841744823*^9, 3.662413844902369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
        ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "fit"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662403357573029*^9, 3.662403400917585*^9}, {
  3.662403460732779*^9, 3.662403460900476*^9}, {3.6624035271260643`*^9, 
  3.6624035294532757`*^9}, {3.662403567283935*^9, 3.662403568012061*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.999993797864034`"},
    {"\<\"AIC\"\>", 
     RowBox[{"-", "334.6762708471252`"}]},
    {"\<\"BIC\"\>", 
     RowBox[{"-", "329.84351710919253`"}]},
    {"\<\"RSquared\"\>", "0.9999941331146268`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.662403402411786*^9, 3.662405718090724*^9, 3.662406297155188*^9, 
   3.662406329946666*^9, {3.662406416486521*^9, 3.662406429860981*^9}, 
   3.66240680481929*^9, 3.662406837703083*^9, {3.662406886374895*^9, 
   3.662406911136054*^9}, {3.662406983975531*^9, 3.662407012481901*^9}, {
   3.66240708327638*^9, 3.662407106382594*^9}, {3.6624079092705507`*^9, 
   3.662407928171085*^9}, 3.662408841597978*^9, 3.662408905666217*^9, {
   3.662408944842497*^9, 3.6624089750086527`*^9}, {3.662409013114809*^9, 
   3.662409087167595*^9}, 3.6624092231154623`*^9, 3.6624105830350018`*^9, 
   3.662410645530094*^9, 3.662411257241982*^9, 3.6624113237579403`*^9, 
   3.662411410461595*^9, 3.662411459544739*^9, 3.662411831637423*^9, 
   3.662754827083612*^9, 3.662755117964517*^9, 3.6627551888890533`*^9, 
   3.6628317407846193`*^9, {3.662836389282175*^9, 3.662836411928933*^9}, 
   3.6628429109027643`*^9, 3.663011521185564*^9}]
}, Open  ]],

Cell["\<\
What are our parameter estimates?\
\>", "Text",
 CellChangeTimes->{{3.6624138505438223`*^9, 3.662413855414859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Rho]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662403541170051*^9, 3.662403579627411*^9}, {
  3.662413877368452*^9, 3.662413935628236*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", 
      RowBox[{"-", "5.90241394182205`*^8"}], 
      RowBox[{"2.1857403223266782`*^26", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "2.7004186551946136`*^-18"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], "1"},
     {"\[Rho]", "0.2536175507636942`", 
      RowBox[{"9.07385015062058`*^16", "-", 
       RowBox[{"7.111206257323698`*^14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"2.7948662425839925`*^-18", "+", 
       RowBox[{"2.1903458821486903`*^-20", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.9600865296245532`*^-19", " ", "\[ImaginaryI]"}]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.6624139079167*^9}, 
   3.662754827139021*^9, 3.66275511801717*^9, 3.662755188904523*^9, 
   3.662831740829299*^9, {3.66283638933211*^9, 3.662836411974605*^9}, 
   3.6628429109433813`*^9, 3.663011521280727*^9}]
}, Open  ]],

Cell["\<\
Or if you like confidence intervals better...\
\>", "Text",
 CellChangeTimes->{{3.662413938361573*^9, 3.662413946160007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"get", " ", "confidence", " ", "intervals", " ", "too"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{3.662413934755294*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", 
      RowBox[{"-", "5.90241394182205`*^8"}], 
      RowBox[{"2.1857403223266782`*^26", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4.437288757451843`*^26"}], "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"4.437288757451843`*^26", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]},
     {"\[Rho]", "0.2536175507636942`", 
      RowBox[{"9.07385015062058`*^16", "-", 
       RowBox[{"7.111206257323698`*^14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.8420895130530378`*^17"}], "+", 
         RowBox[{"1.4436516202416265`*^15", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"1.8420895130530378`*^17", "-", 
         RowBox[{"1.4436516202416265`*^15", " ", "\[ImaginaryI]"}]}]}], 
       "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.66241392002323*^9}, 
   3.662754827573681*^9, 3.6627551183942013`*^9, 3.6627551889387608`*^9, 
   3.662831740870338*^9, {3.662836389367111*^9, 3.662836412025456*^9}, 
   3.662842910985961*^9, 3.663011521381741*^9}]
}, Open  ]],

Cell["\<\
Plot fitted curve with data points\
\>", "Text",
 CellChangeTimes->{{3.662413956438634*^9, 3.662413969480398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
      RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Prolog", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
      RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.662403769406761*^9, 3.662403992597126*^9}, {
  3.662404042064361*^9, 3.6624041243000097`*^9}, {3.662404161267418*^9, 
  3.662404199527317*^9}, {3.662405800170576*^9, 3.6624058024493113`*^9}, {
  3.66240792592798*^9, 3.662407926379305*^9}, {3.662413951485792*^9, 
  3.66241399528541*^9}, {3.662755240062652*^9, 3.662755249022591*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbvSuqtS+KsdAxh8sD/ckj/xX4iyA4wv/8bc4W+I
MZzf0X1qhYKqC5zv93bDqj9vfeF8lxUTGG8fCobz9/InbDv5LQLOj4s9nX71
Yiycn/fh2YTKrkQ4v3NT1+H98ilw/o70mpIpHWlw/rXtOzWLVDPhfPbfLrH3
pmbD+VP3FT1j/JWLMI/vm6W4ZwGcH7j95v4vdYVw/gTdx8evnSuC8/893ls1
RaIEzv86eX+OpE8pnJ8i+PzBopllcH5Mh+mUzxfK4fwzZ1ae9FCqhPOzAt+v
rMytgvMnnY8+WbioGs43lH6XlfexBs6PSljubaRVB+dvfGp4/WJMPZzvIFP4
aVdIA5yfe+jOjA/vEfxQ/+gGjRmNCH6Nk62fbROcL6m2d2b4dQR/5jYv8+S6
Zjj/3uHskiCpFjjfqvBrm/5mBD+IddItvshWOF9f7NDZi58R/OO8rEzTZ7fB
+SpNt6/aW7TD+TOmSdVfu4jgn5iYk5lf0QHn7+UM+vxauBPOz8vw2pe1B8E3
S18ddz2xC84//Gj+PPU/CD6363L5qsXdcL6EipPDBvseON9msavZlRsIvgxn
TO6vul44/+BrVhcWqT44/9emzWq9BQi+SVUip9hxBB8AZ6kESw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"g(r)\"", TraditionalForm], None}, {
     FormBox["\"Distance (m)\"", TraditionalForm], None}},
  ImageSize->800,
  LabelStyle->{FontFamily -> "Times", FontSize -> 12},
  Method->{},
  PlotLabel->FormBox["\"Pair correlation function\"", TraditionalForm],
  PlotRange->{{0, 984.8857801796104}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, 
    Scaled[0.02]},
  Prolog->{
    RGBColor[1, 0, 0], 
    PointSize[0.005], {
     PointBox[{0., 1.0108588867945922`}], 
     PointBox[{100., 0.9997557125346772}], 
     PointBox[{141.4213562373095, 1.0015557409621503`}], 
     PointBox[{200., 1.0015448481162865`}], 
     PointBox[{223.60679774997897`, 0.9999442382326288}], 
     PointBox[{282.842712474619, 1.0018719870831319`}], 
     PointBox[{300., 1.0003380552564294`}], 
     PointBox[{316.22776601683796`, 1.0005727946649998`}], 
     PointBox[{360.5551275463989, 1.0001205510757851`}], 
     PointBox[{400., 1.0010324273007458`}], 
     PointBox[{412.31056256176606`, 1.0016698764689933`}], 
     PointBox[{424.2640687119285, 0.9985753540821015}], 
     PointBox[{447.21359549995793`, 1.0000054838422232`}], 
     PointBox[{500., 1.0007443669315108`}], 
     PointBox[{509.9019513592784, 0.9983168375409559}], 
     PointBox[{538.5164807134504, 1.0017099446536144`}], 
     PointBox[{565.685424949238, 0.9974501171614408}], 
     PointBox[{583.0951894845301, 0.9990678273458821}], 
     PointBox[{600., 1.0001209176813846`}], 
     PointBox[{608.276253029822, 1.002620643327988}], 
     PointBox[{632.4555320336759, 0.9974525186044328}], 
     PointBox[{640.3124237432849, 1.001524759364606}], 
     PointBox[{670.820393249937, 1.0037544177058566`}], 
     PointBox[{700., 0.9983056636063431}], 
     PointBox[{707.1067811865476, 0.996543164241756}], 
     PointBox[{721.1102550927978, 1.001813731297584}], 
     PointBox[{728.0109889280518, 0.9976656334732036}], 
     PointBox[{761.5773105863909, 0.9985617660767634}], 
     PointBox[{800., 0.9955761908429934}], 
     PointBox[{806.2257748298549, 1.0001293492021186`}], 
     PointBox[{824.6211251235321, 1.002495593497604}], 
     PointBox[{854.4003745317531, 1.0021279882148204`}], 
     PointBox[{894.4271909999159, 1.0017189479629016`}], 
     PointBox[{900., 1.0033375270865688`}], 
     PointBox[{905.5385138137417, 0.9979433800411921}], 
     PointBox[{921.9544457292888, 0.9971474364159691}], 
     PointBox[{948.6832980505138, 1.0059937576058915`}], 
     PointBox[{984.8857801796104, 1.0063805582965792`}]}}]], "Output",
 CellChangeTimes->{{3.662403931872311*^9, 3.662403961748376*^9}, 
   3.6624039930219793`*^9, {3.662404054020718*^9, 3.662404124635461*^9}, {
   3.6624041628226557`*^9, 3.662404177212069*^9}, 3.662405718219399*^9, 
   3.6624058028929377`*^9, 3.662406297284313*^9, 3.662406330073842*^9, 
   3.6624064172534*^9, 3.662406804946733*^9, 3.6624068387016277`*^9, {
   3.662406887024851*^9, 3.66240691165195*^9}, {3.662406984216867*^9, 
   3.6624070126147203`*^9}, {3.66240708340755*^9, 3.6624071065110817`*^9}, {
   3.662407909400408*^9, 3.662407928325042*^9}, 3.662408841770507*^9, 
   3.6624089062315893`*^9, {3.662408945263624*^9, 3.662408975140057*^9}, {
   3.662409013246416*^9, 3.662409087299986*^9}, 3.662409223247031*^9, 
   3.662410583174616*^9, 3.662410645662326*^9, 3.662411257398282*^9, 
   3.66241132393871*^9, 3.6624114105907393`*^9, 3.6624114596960697`*^9, 
   3.662411831774963*^9, 3.6627548277165937`*^9, 3.662755118552618*^9, 
   3.662755188969701*^9, {3.6627552441558857`*^9, 3.662755249340041*^9}, 
   3.662831740935713*^9, {3.6628363894164143`*^9, 3.66283641207456*^9}, 
   3.6628429110308247`*^9, 3.6630115214316883`*^9}]
}, Open  ]],

Cell["\<\
Plot fitted curve with confidence bands\
\>", "Text",
 CellChangeTimes->{{3.6624140170269537`*^9, 3.662414017625156*^9}, {
  3.662414059835639*^9, 3.662414068251809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bands90", "[", "x_", "]"}], ",", 
      RowBox[{"bands95", "[", "x_", "]"}], ",", 
      RowBox[{"bands99", "[", "x_", "]"}], ",", 
      RowBox[{"bands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fitcor", "[", 
       RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
        RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"cl", ",", 
        RowBox[{"{", 
         RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitcor", "[", "r", "]"}], ",", 
       RowBox[{"bands90", "[", "r", "]"}], ",", 
       RowBox[{"bands95", "[", "r", "]"}], ",", 
       RowBox[{"bands99", "[", "r", "]"}], ",", 
       RowBox[{"bands999", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"3", " ", "\[Rule]", 
         RowBox[{"{", "2", "}"}]}], ",", 
        RowBox[{"4", " ", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}], ",", 
        RowBox[{"5", " ", "\[Rule]", 
         RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662404221668598*^9, 3.662404310745612*^9}, 
   3.662414014514715*^9, {3.662755211342601*^9, 3.662755231736133*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQGRDkXZWhv//31vvyNN+ED12kQHwdscAfFsH+wh
8pkOIgZMT4KBfLc82cdZn7MdqnkU+bv/w9QXOhif3/J6FTtU/YEih7QQlqok
xg/2kdN/vV1yuNjh7fLUeRFMQP18OWcfdpQ5CN7Uy6hjgJlf6cD3QHyKFcsH
++hHRQI/jlQ67NTk/XcNaJ+wlOwCy5Yqh8s/uX1DvryH2l/tsPAI3wFWmH6H
eodijqo2HuYP9h+yelLy7tU7cElzqpt9Aqp/tfiA4pUGB64bRxkZge6DuLfR
wdRQuEnm9Xv76+FbPh2yaHKo/jZXPPbHe6j7mxx+nZp+CuQ+Xha1I6ZMzQ5s
ZtM+7uaC+afZ4S9DeLciUL/Ff5Yb9UwtDrLrKy/bAd27VShMa8K3FoeHhldO
JfBD3feg1eGtpfAOOaB70hwkNtySaHP4zp9fu+7xe2h4tDms23ryai7Qfee+
xDSKHWhzqO5srnrw5r19hSNz6Lwz7Q4C+7jOmX+Buo+h0+GZZPfMQ7ff2z/d
zJF8zrDTIa7m5cJ2Blj4dTqI+R6/aAF0rz3DhO/Gm7sciubXRG/ngMVftwNn
z5QiLlh8KfQ4GP2etWw1LzB8Joc88PPpcfijPfGL2vv39hc9CrcsOt/jkOEz
be/CF+/tWR9/Tylf2uvwK5rvZY/EB/ufZq+FxY73OazKEW5QkvpgDwDvjAVR

      "]]}, {}}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQbbvSuqtS+KsdAxh8sJd/Y+7wN8TYAcbv6D61QkHV
Bc73e7th1Z+3vnC+y4oJjLcPBcP5e/kTtp38FgHnx8WeTr96MRbOz/vwbEJl
VyKc37mp6/B++RQ4f0d6TcmUjjQ4/9r2nZpFqplwPvtvl9h7U7Ph/Kn7ip4x
/spFmMf3zVLcswDOD9x+c/+XukI4f4Lu4+PXzhXB+f8e762aIlEC53+dvD9H
0qcUzk8RfP5g0cwyOD+mw3TK5wvlcP6ZMytPeihVwvlZge9XVuZWwfmTzkef
LFxUDecbSr/LyvtYA+dHJSz3NtKqg/M3PjW8fjGmHs53kCn8tCukAc7PPXRn
xof3CH6of3SDxoxGBL/GydbPtgnOl1TbOzP8OoI/c5uXeXJdM5x/73B2SZBU
C5xvVfi1TX8zgh/EOukWX2QrnK8vdujsxc8I/nFeVqbps9vgfJWm21ftLdrh
/BnTpOqvXUTwT0zMycyv6IDz93IGfX4t3Ann52V47cvag+Cbpa+Ou57YBecf
fjR/nvofBJ/bdbl81eJuOF9Cxclhg30PnG+z2NXsyg0EX4YzJvdXXS+cf/A1
qwuLVB+cb1KVyCl2HME/3JI/8V+IMpz/a9Nmtd4ChPy0J0Hujt2I9GTxxoMz
+gPCPQDnjg3H
    "], {{}, {}, 
     {Hue[0.67, 0.6, 0.6], 
      LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 53, 16, 
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 46, 47, 48, 49, 52, 
       50}]}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9955761908429934},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 984.8857801796104}, Automatic},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.00021608734907171634`, 0.00021608734907171634`}}]], "Output",
 CellChangeTimes->{
  3.662404459246986*^9, 3.662404598895645*^9, 3.662405222464849*^9, 
   3.662405718428056*^9, 3.662406297584968*^9, 3.662406330339636*^9, 
   3.662406417572104*^9, 3.662406805347022*^9, 3.662406839001141*^9, {
   3.66240688798071*^9, 3.6624069126876163`*^9}, {3.662406984717441*^9, 
   3.662407012861548*^9}, {3.6624070836417437`*^9, 3.662407106780003*^9}, {
   3.662407909635324*^9, 3.662407928564303*^9}, 3.6624079656102057`*^9, 
   3.6624088419917307`*^9, 3.662408907167906*^9, {3.6624089455614347`*^9, 
   3.662408976175329*^9}, {3.662409014175234*^9, 3.662409088225396*^9}, 
   3.662409224178812*^9, 3.6624105841259403`*^9, 3.662410646600896*^9, {
   3.662411258379698*^9, 3.662411325108368*^9}, 3.662411411686612*^9, 
   3.662411460658895*^9, 3.662411832776853*^9, 3.662754828152622*^9, 
   3.662755118997655*^9, 3.662755189829032*^9, {3.662755219952276*^9, 
   3.6627552330088873`*^9}, 3.6628317418369913`*^9, {3.662836389762106*^9, 
   3.6628364129365463`*^9}, 3.6628429113277187`*^9, 3.6630115217813473`*^9}]
}, Open  ]],

Cell["\<\
Information for SAD and SAR plots\
\>", "Text",
 CellChangeTimes->{{3.663011425258603*^9, 3.66301143154622*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ind", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"SabA", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "individuals", " ", "in", " ", "each", " ", 
    "plot"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Nu]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]2p", "[", "L_", "]"}], ":=", 
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["L", "\[Rho]"], ")"}], "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Lambda]"}], "L"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], ")"}], 
     
     RowBox[{"-", "1"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]2", "[", "L_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", "ind", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"Nspecies", "*", "Lx", "*", "Ly"}], ")"}]}], ")"}], "*", 
    SuperscriptBox["\[Rho]", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "\[Lambda]"}], "L"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"BesselK", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}], 
          RowBox[{"BesselI", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rsapres2medp", "[", 
    RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", 
       RowBox[{"n", "+", "1"}]]}], "]"}], "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", "n"]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sarmedp", "[", "L_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", "1"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SAR", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Nspecies", "*", 
     FractionBox[
      RowBox[{"sarmedp", "[", "r", "]"}], 
      RowBox[{"sarmedp", "[", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
    RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SAD", "[", 
    RowBox[{"n_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Nspecies", "*", 
     FractionBox[
      RowBox[{"rsapres2medp", "[", 
       RowBox[{"n", ",", "r"}], "]"}], 
      RowBox[{"sarmedp", "[", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
    RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"upRichness", "=", 
   RowBox[{"NsppSamp", "*", 
    FractionBox[
     RowBox[{"sarmedp", " ", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "dens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}], 
     RowBox[{"sarmedp", " ", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"samp", "*", "Asp"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "dens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"UPdens", "=", 
   RowBox[{"Nspecies", "*", 
    RowBox[{"dens", "/", "upRichness"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"downSAR", "[", "r_", "]"}], ":=", 
   RowBox[{"upRichness", "*", 
    FractionBox[
     RowBox[{"sarmedp", "[", 
      RowBox[{"r", ",", "UPdens", ",", "\[Lambda]", ",", "\[Rho]"}], "]"}], 
     RowBox[{"sarmedp", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "UPdens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9, {3.662999096685413*^9, 3.662999096784697*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"SAR", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", 
       RowBox[{"Max", "[", "rvec", "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}]}], "]"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "doesnt", " ", "always", " ", "work", " ", "because", " ", "fit", " ", 
    "so", " ", "bad"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662845323905514*^9, 3.6628453352031307`*^9}, {
  3.663011447325644*^9, 3.6630114651633997`*^9}, {3.663011571220372*^9, 
  3.663011605299451*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulated data", "Section",
 CellChangeTimes->{{3.6627556877501717`*^9, 3.66275569128279*^9}, {
  3.6630036634705477`*^9, 3.663003663654305*^9}}],

Cell["\<\
Load data from Patrick\[CloseCurlyQuote]s simulation\
\>", "Text",
 CellChangeTimes->{{3.662756272519383*^9, 3.66275628084601*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datadir", "=", "\"\</Users/mmosmond/Documents/PHD/PCFinR/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "datadir", "<>", "\"\<SimulatedAbundances\>\"", "<>", "\"\<.csv\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.66275556963586*^9, 3.662755648268983*^9}, {
  3.662755792232341*^9, 3.662755820742881*^9}, {3.662756234703286*^9, 
  3.662756236070477*^9}, {3.662831741309568*^9, 3.662831743309153*^9}, {
  3.662832232549533*^9, 3.6628322513403387`*^9}}],

Cell["The data comes with 5 columns", "Text",
 CellChangeTimes->{{3.662756378289138*^9, 3.662756385175745*^9}, {
  3.662756559277006*^9, 3.662756575755829*^9}, {3.662756815034315*^9, 
  3.662756817745803*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simdata", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6627566279933243`*^9, 3.662756642669874*^9}, {
  3.6627566958390627`*^9, 3.662756697638322*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"Species\"\>", 
   ",", "\<\"Abundance\"\>", ",", "\<\"Stress_abund\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.662756630411153*^9, 3.662756698041078*^9, 
  3.662831748833181*^9, 3.6628324741263437`*^9, 3.662836177113246*^9, 
  3.6628419035938063`*^9, 3.6628422887068853`*^9, 3.6628429710841227`*^9, 
  3.6628444274198914`*^9, 3.66284466732751*^9, 3.662991742090397*^9, 
  3.6629921459665737`*^9, 3.663011612177993*^9, 3.6630117667975607`*^9, 
  3.663012424710846*^9, 3.663012974353005*^9}]
}, Open  ]],

Cell["\<\
 x is the x location (1:20) y is the y location (1:20), species is species ID \
(1:80), abundance is number of individuals of that species in plot, and \
stress abundance is abundance under some stressor (we will eventually want to \
compare model results with and without stressor). \
\>", "Text",
 CellChangeTimes->{{3.6627568213512087`*^9, 3.662756822760435*^9}}],

Cell["We first drop the column names", "Text",
 CellChangeTimes->{{3.662756792985317*^9, 3.662756798263606*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"simdata", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662756785772848*^9, 3.662756802048545*^9}}],

Cell["\<\
We then drop all rows with zero abundances\
\>", "Text",
 CellChangeTimes->{{3.662992075047391*^9, 3.662992116222604*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"simdata", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "\[NotEqual]", "0"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stsimdata", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"simdata", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "\[NotEqual]", "0"}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.662992108751666*^9, {3.663012965323718*^9, 3.663012969243217*^9}}],

Cell["Define the spatial extent of the area of interest", "Text",
 CellChangeTimes->{{3.662411468482938*^9, 3.6624114723466263`*^9}, {
   3.662412173377927*^9, 3.662412192666273*^9}, 3.662756289862062*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Lx", ",", "Ly"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"20", ",", "20"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "total", " ", "x", " ", "and", " ", "y", " ", "distance", " ", "of", " ", 
     "area", " ", "of", " ", "interest"}], ",", " ", 
    RowBox[{
    "ie", " ", "a", " ", "grid", " ", "with", " ", "length", " ", "Lx", " ", 
     "and", " ", "width", " ", "Ly"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Asub", "=", "5"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"space", " ", "between", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "we", " ", "chop", " ", "up", " ", "the", " ", "total", " ", 
      "area", " ", "into", " ", "squares", " ", "with", " ", "length", " ", 
      "Asub"}], ";", " ", 
     RowBox[{
     "best", " ", "if", " ", "this", " ", "divides", " ", "the", " ", "total",
       " ", "space", " ", "nicely"}]}], ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"Lx", "/", "Asub"}], " ", "and", " ", 
     RowBox[{"Ly", "/", "Asub"}], " ", "are", " ", "integers"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624105632177896`*^9, 3.662410563388131*^9}, {
   3.662410642111521*^9, 3.6624106433361464`*^9}, {3.6624113185715933`*^9, 
   3.6624113205874157`*^9}, 3.6624118299636374`*^9, {3.662412200746975*^9, 
   3.66241233394919*^9}, {3.662756316915345*^9, 3.662756321631939*^9}, {
   3.6627579622476397`*^9, 3.662757962359758*^9}, 3.66283617268756*^9, {
   3.662841894166457*^9, 3.662841894243311*^9}, {3.662844419228006*^9, 
   3.662844420098653*^9}, 3.662844664200747*^9}],

Cell["Get each variable of interest from data table", "Text",
 CellChangeTimes->{{3.662411487805341*^9, 3.6624115162679358`*^9}, {
  3.66241239544563*^9, 3.662412400485498*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gx", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gy", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ab", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stgx", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "stsimdata", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stgy", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "stsimdata", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stsp", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "stsimdata", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stab", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "stsimdata", "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6627564818879433`*^9, 3.662756506084942*^9}, {
  3.6627568388114223`*^9, 3.66275689858679*^9}, {3.6627571596583757`*^9, 
  3.662757175800811*^9}, {3.663012983190195*^9, 3.663013031569648*^9}}],

Cell["Some summary statistics of the data", "Text",
 CellChangeTimes->{{3.6624115004831676`*^9, 3.6624115190117893`*^9}, {
  3.662412416239183*^9, 3.662412426541686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Uspecie", "=", 
    RowBox[{"Union", "[", "sp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Nspecies", "=", 
    RowBox[{"Length", "[", "Uspecie", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TotAbundance", "=", 
    RowBox[{"Total", "[", "ab", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"total", " ", "abundance"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "species"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stUspecie", "=", 
    RowBox[{"Union", "[", "stsp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"stNspecies", "=", 
   RowBox[{"Length", "[", "stUspecie", "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], "*)"}], "\n", 
  
  RowBox[{"stTotAbundance", "=", 
   RowBox[{"Total", "[", "stab", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662394155397892*^9, 3.662394208972786*^9}, {
  3.66239435484977*^9, 3.662394355553513*^9}, {3.662394932920998*^9, 
  3.662394933324882*^9}, {3.662396920669482*^9, 3.662396931205062*^9}, {
  3.662411451991355*^9, 3.662411457827334*^9}, {3.662412431854793*^9, 
  3.6624124470392838`*^9}, {3.6627569063475637`*^9, 3.662756919531727*^9}, {
  3.662757178672894*^9, 3.6627571860160637`*^9}, {3.66301241730866*^9, 
  3.663012420252288*^9}, {3.663013045096365*^9, 3.663013067475791*^9}}],

Cell["Defining the coordinate system of the area", "Text",
 CellChangeTimes->{{3.6624115301840067`*^9, 3.662411532736253*^9}, 
   3.662412483413187*^9, {3.6624127080035973`*^9, 3.6624127139072323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allpos", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Lx", "/", "Asub"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Ly", "/", "Asub"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"coordinates", ",", " ", 
    RowBox[{"in", " ", "translated", " ", "form"}], ",", " ", 
    RowBox[{"ie", ".", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyCpos", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "i"}], "+", "1"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "j"}], "+", "1"}], ")"}], "/", "2"}]}], "}"}],
          "//", " ", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Lx", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ly", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], 
         "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"halfway", " ", "points", " ", "between", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "use", " ", "later", " ", "to", " ", "derive", 
     " ", "the", " ", "distances", " ", "between", " ", "centers", " ", "of", 
     " ", "each", " ", "\"\<bin\>\"", " ", 
     RowBox[{"(", 
      RowBox[{"area", " ", "below", " ", 
       RowBox[{"(", "south", ")"}], " ", "and", " ", "to", " ", "left", " ", 
       RowBox[{"(", "west", ")"}], " ", "of", " ", "each", " ", 
       "coordinate"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allpair", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"allpos", ",", "allpos"}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pairs", " ", "of", " ", "each", " ", "translated", " ", "coordinate", 
     " ", "with", " ", "each", " ", "other"}], ",", " ", 
    RowBox[{"e", ".", "g", "."}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "allpos", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", 
    RowBox[{"coordinates", "/", "bins"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395041124155*^9, 3.662395076995739*^9}, 
   3.662396503297634*^9, {3.662397225252562*^9, 3.66239727282128*^9}, {
   3.662397305190036*^9, 3.662397317542131*^9}, {3.662402580564127*^9, 
   3.662402589155075*^9}, {3.6624125591567297`*^9, 3.662412674941476*^9}, {
   3.6624128238176327`*^9, 3.662412840042054*^9}}],

Cell["Locations of plots (the bin they are in)", "Text",
 CellChangeTimes->{{3.662411540064125*^9, 3.662411543224874*^9}, 
   3.66241271663524*^9, {3.6624129056691236`*^9, 3.662412919045101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gx", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#",
             "<", 
            RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gx", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}]}], " ", "<", "#", "\[LessEqual]",
             " ", 
            RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"which", " ", "plots", " ", 
      RowBox[{"(", 
       RowBox[{
       "their", " ", "position", " ", "in", " ", "the", " ", "data", " ", 
        "vector"}], ")"}], " ", "have", " ", "x", " ", "location", " ", 
      "between", " ", "two", " ", "coordinates"}], ",", " ", 
     RowBox[{
      RowBox[{
      "for", " ", "all", " ", "pairs", " ", "of", " ", "x", " ", 
       "coordinates"}], ";", " ", 
      RowBox[{"for", " ", "p", " ", "between", " ", "1", " ", "and", " ", 
       RowBox[{"Lx", "/", "Asub"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stXpos", "[", "p_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"stgx", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}]}], " ", "<", "#", "\[LessEqual]",
             " ", 
            RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"gy", ",", 
         RowBox[{"x_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Asub", "*", 
              RowBox[{"(", 
               RowBox[{"q", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", 
             "#", "<", 
             RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", 
       "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gy", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"q", "-", "1"}], ")"}]}], "<", "#", "\[LessEqual]", 
            RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "which", " ", "plots", " ", "have", " ", "y", " ", "location", " ", 
      "between", " ", "two", " ", "coordinates"}], ",", " ", 
     RowBox[{
      RowBox[{
      "for", " ", "all", " ", "pairs", " ", "of", " ", "y", " ", 
       "coordinates"}], ";", " ", 
      RowBox[{"for", " ", "q", " ", "between", " ", "1", " ", "and", " ", 
       RowBox[{"Ly", "/", "Asub"}]}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stYpos", "[", "q_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"stgy", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"q", "-", "1"}], ")"}]}], "<", "#", "\[LessEqual]", 
            RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rule1", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"allpos", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"nplot", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"translate", " ", "from", " ", "coordinates", " ", 
      RowBox[{"(", "tuple", ")"}], " ", "to", " ", "single", " ", 
      "identifying", " ", "number"}], "*)"}], "\n", 
    RowBox[{"rule2", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"nplot", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"allpos", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"translate", " ", "back"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"XYpos", "[", 
      RowBox[{"{", 
       RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
     RowBox[{"Intersection", "[", 
      RowBox[{
       RowBox[{"Xpos", "[", "p", "]"}], ",", 
       RowBox[{"Ypos", "[", "q", "]"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"which", " ", "plots", " ", "have", " ", "location", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "within", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{"p", "-", "1"}], ")"}]}], ",", 
       RowBox[{"x", " ", "p"}]}], ")"}], " ", "and", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", 
        RowBox[{"(", 
         RowBox[{"p", "-", "1"}], ")"}]}], ",", " ", 
       RowBox[{"y", " ", "p"}]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"stXYpos", "[", 
      RowBox[{"{", 
       RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
     RowBox[{"Intersection", "[", 
      RowBox[{
       RowBox[{"stXpos", "[", "p", "]"}], ",", 
       RowBox[{"stYpos", "[", "q", "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"possub", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{"XYpos", ",", "allpos"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "which", " ", "plots", " ", "fall", " ", "in", " ", "which", " ", "bin", 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"e", ".", "g", "."}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], "=", 
        RowBox[{"(", 
         RowBox[{"321", ",", "434"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"with", " ", "Asub"}], "=", "100"}], ",", " ", 
       RowBox[{"would", " ", "fall", " ", "in", " ", 
        RowBox[{"(", 
         RowBox[{"400", ",", "500"}], ")"}]}]}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stpossub", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{"stXYpos", ",", "allpos"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.662395292209701*^9, 3.662395537499296*^9}, {
  3.6623960553689823`*^9, 3.662396067946538*^9}, {3.662397974196926*^9, 
  3.662398051690569*^9}, {3.6623981180157757`*^9, 3.6623981500469017`*^9}, {
  3.6623982769015217`*^9, 3.662398325149023*^9}, {3.66239886727868*^9, 
  3.662398876830975*^9}, {3.6623994181640377`*^9, 3.66239950349568*^9}, {
  3.6623997780956163`*^9, 3.6623998470706177`*^9}, {3.6624129296834784`*^9, 
  3.662412931482998*^9}, {3.662833602745944*^9, 3.662833652142746*^9}, {
  3.66301308140311*^9, 3.66301314364751*^9}}],

Cell["Which species are where", "Text",
 CellChangeTimes->{{3.66241155496421*^9, 3.66241156097239*^9}, {
  3.6624129435894413`*^9, 3.662412950140648*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYS", "[", "i_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gx", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"gy", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gives", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "location", " ", "of", " ", 
     "plots"}], ",", " ", 
    RowBox[{"and", " ", "sp", " ", "code"}], ",", " ", 
    RowBox[{"in", " ", "each", " ", "bin"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SabA", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"sp", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
      "&"}], "/@", " ", "Uspecie"}]}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "with", " ", "each", " ", 
    "species", " ", "in", " ", "each", " ", "bin"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SabA", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"[", 
            RowBox[{"possub", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
        "&"}], "/@", " ", "Uspecie"}], ")"}], "*", 
     RowBox[{"ab", "[", 
      RowBox[{"[", 
       RowBox[{"possub", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "of", " ", "each", " ", "species", 
    " ", "in", " ", "each", " ", "bin"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stXYS", "[", "i_", "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"stgx", "[", 
       RowBox[{"[", 
        RowBox[{"stpossub", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"stgy", "[", 
       RowBox[{"[", 
        RowBox[{"stpossub", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"stsp", "[", 
       RowBox[{"[", 
        RowBox[{"stpossub", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SabA", "[", "i_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ab", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "k", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"sp", "[", 
                 RowBox[{"[", 
                  RowBox[{"possub", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], 
               "]"}], "&"}], "/@", " ", "Uspecie"}], ")"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "Uspecie", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "*", " ", "abundance", " ", "in", 
    " ", "that", " ", "plot", " ", "of", " ", "each", " ", "species", " ", 
    "in", " ", "each", " ", "bin"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stSabA", "[", "i_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"stab", "[", 
         RowBox[{"[", 
          RowBox[{"stpossub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "k", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"stsp", "[", 
                 RowBox[{"[", 
                  RowBox[{"stpossub", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], 
               "]"}], "&"}], "/@", "stUspecie"}], ")"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "stUspecie", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], " ", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SA", "[", "i_", "]"}], ":=", 
    RowBox[{"Boole", "/@", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"[", 
            RowBox[{"possub", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
        "&"}], "/@", " ", "Uspecie"}], ")"}]}]}], " ", "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "at", " ", "least", " ", "one", " ", "plot", " ", 
     "with", " ", "a", " ", "species", " ", "in", " ", "given", " ", "bin"}], 
    ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"presence", "/", "absence"}], " ", "in", " ", "bin"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SA", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Boole", "[", 
     RowBox[{"#", ">", "0"}], "]"}], "&"}], "/@", 
   RowBox[{"SabA", "[", "i", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"stSA", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Boole", "[", 
     RowBox[{"#", ">", "0"}], "]"}], "&"}], "/@", 
   RowBox[{"stSabA", "[", "i", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Spos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SA", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "possub", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stSpos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"stSA", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "stpossub", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"table", " ", "with", " ", "all", " ", "bins"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395558546788*^9, 3.662395590718184*^9}, {
   3.662395637422887*^9, 3.662395855679844*^9}, {3.662396084462902*^9, 
   3.662396093135119*^9}, {3.6624000366580553`*^9, 3.6624000612422333`*^9}, {
   3.662400105056695*^9, 3.66240013763741*^9}, {3.662400198268684*^9, 
   3.662400203847021*^9}, {3.662400283268598*^9, 3.662400340107189*^9}, {
   3.662400370913103*^9, 3.662400403535512*^9}, {3.662400442030035*^9, 
   3.662400450460515*^9}, {3.662400495985153*^9, 3.662400502456811*^9}, {
   3.662401369958474*^9, 3.6624013885339117`*^9}, 3.6624017363239193`*^9, {
   3.662412958541737*^9, 3.662413003201478*^9}, {3.6627582460381603`*^9, 
   3.662758260113225*^9}, {3.6628318134295197`*^9, 3.662831849986977*^9}, {
   3.6628319319074497`*^9, 3.662831967083124*^9}, {3.662831999183221*^9, 
   3.662832084079393*^9}, {3.662835999562031*^9, 3.6628360509594927`*^9}, {
   3.662843309536722*^9, 3.662843318961556*^9}, 3.6629924525692873`*^9, 
   3.6630048586764517`*^9, {3.663012444502667*^9, 3.6630124493151608`*^9}, {
   3.663013157256215*^9, 3.6630132245165453`*^9}}],

Cell["Covariance in species abundance by distances", "Text",
 CellChangeTimes->{{3.662411564012209*^9, 3.662411577084908*^9}, {
   3.662413007593816*^9, 3.6624130216361732`*^9}, {3.662413321726729*^9, 
   3.6624133250631638`*^9}, {3.662843668157742*^9, 3.662843674738571*^9}, 
   3.6629924846744556`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ")"}], "^", "2"}], "]"}], 
    "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Euclidean", " ", "distance", " ", "between", " ", "center", " ", "of", 
    " ", "two", " ", "bins", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"in", " ", "translated", " ", "space"}], ";", " ", 
       RowBox[{
       "need", " ", "to", " ", "multiply", " ", "by", " ", "Asub", " ", "to", 
        " ", "get", " ", "real", " ", "distances"}]}], ",", " ", 
      RowBox[{"which", " ", "we", " ", "do", " ", "later"}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"not", " ", "sure", " ", "what", " ", "this", " ", "does"}], ",", 
    " ", 
    RowBox[{"but", " ", "doesnt", " ", "hurt"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alldist", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"dist", ",", 
      RowBox[{"allpair", "/.", "rule1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "distance", " ", "between", " ", "center", " ", "of", " ", "all", " ", 
    "pairs", " ", "of", " ", "bins"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rvec", "=", 
    RowBox[{"Union", "[", "alldist", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "unique", " ", "distances", " ", "in", " ", "increasing", " ", 
    "order"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"indexpair", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"index", ",", 
      RowBox[{"allpair", "/.", " ", "rule1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "translate", " ", "from", " ", "tuples", " ", "of", " ", "coordinates", 
    " ", "to", " ", "pairs", " ", "of", " ", "coordinate", " ", "indices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"posdist", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"alldist", ",", "#"}], "]"}], "&"}], "/@", " ", "rvec"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "identify", " ", "coordinate", " ", "index", " ", "pairs", " ", "whose", 
    " ", "bin", " ", "centers", " ", "are", " ", "given", " ", "distance", 
    " ", "apart"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cov", "[", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"SabA", "[", "i", "]"}], " ", 
        RowBox[{"SabA", "[", "j", "]"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "i", "]"}], "]"}], " ", 
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<covariance\>\"", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "bins"}], ",", " ", 
    RowBox[{
    "note", " ", "that", " ", "the", " ", "\"\<covariance\>\"", " ", "is", 
     " ", "taken", " ", "over", " ", "all", " ", "species"}], ",", " ", 
    RowBox[{
    "ie", " ", "\"\<covariance\>\"", " ", "in", " ", "community", " ", 
     "composition"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stCov", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"stSabA", "[", "i", "]"}], " ", 
       RowBox[{"stSabA", "[", "j", "]"}]}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"stSabA", "[", "i", "]"}], "]"}], " ", 
       RowBox[{"Mean", "[", 
        RowBox[{"stSabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.662396046222033*^9, 3.66239604622891*^9}, {
   3.662396115390656*^9, 3.6623964096680927`*^9}, {3.662396685632201*^9, 
   3.662396708518929*^9}, {3.662398383172187*^9, 3.662398401009489*^9}, {
   3.662400582990465*^9, 3.662400610172123*^9}, {3.662400684528366*^9, 
   3.662400698271431*^9}, {3.6624007584947987`*^9, 3.662400768955894*^9}, {
   3.662400801323835*^9, 3.662400832977763*^9}, {3.662400912708703*^9, 
   3.662400934469743*^9}, {3.662401038161566*^9, 3.662401045495079*^9}, {
   3.6624011896463223`*^9, 3.662401194686388*^9}, {3.662401315893465*^9, 
   3.6624013594664583`*^9}, {3.6624013981437902`*^9, 
   3.6624014153380213`*^9}, {3.662401683564044*^9, 3.662401732307383*^9}, {
   3.6624130293654127`*^9, 3.662413065229185*^9}, {3.662413147945756*^9, 
   3.6624131547927437`*^9}, {3.6624133583115*^9, 3.662413395382146*^9}, {
   3.662413444492093*^9, 3.6624135757417507`*^9}, {3.6627548194806147`*^9, 
   3.66275481983049*^9}, {3.662754862013492*^9, 3.6627548706385736`*^9}, {
   3.662755281695499*^9, 3.662755302757578*^9}, {3.662757002337412*^9, 
   3.662757002568337*^9}, 3.662842654035261*^9, {3.662842773639843*^9, 
   3.662842785351123*^9}, 3.662843697549049*^9, {3.662843859427684*^9, 
   3.662843859906129*^9}, {3.662843907603223*^9, 3.66284390815858*^9}, {
   3.662992279085969*^9, 3.6629922796048107`*^9}, {3.663012477775668*^9, 
   3.663012487576812*^9}}],

Cell["\<\
 This function can take a while to run (if too long increase Asub)\
\>", "Text",
 CellChangeTimes->{{3.662992487992318*^9, 3.66299250406977*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allcov", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ParallelMap", "[", 
       RowBox[{"Cov", ",", 
        RowBox[{"indexpair", "[", 
         RowBox[{"[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"posdist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", " ", 
    "with", " ", "species", " ", "at", " ", "each", " ", "distance"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stallcov", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ParallelMap", "[", 
      RowBox[{"stCov", ",", 
       RowBox[{"indexpair", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"posdist", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], "]"}]}],
       "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.663012492809421*^9, 3.663012494968432*^9}, {
  3.663012553003874*^9, 3.663012554402398*^9}}],

Cell["Our empirical correlation function", "Text",
 CellChangeTimes->{{3.662411583164523*^9, 3.6624115898929653`*^9}, {
  3.662413328936442*^9, 3.662413339075227*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"empPCF", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvec", "*", "Asub"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", "allcov"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"empirical", " ", "correlation", " ", "function"}], ",", " ", 
    RowBox[{"PCF", ";", " ", 
     RowBox[{
     "first", " ", "element", " ", "of", " ", "each", " ", "pair", " ", "is", 
      " ", "the", " ", 
      RowBox[{"(", "untranslated", ")"}], " ", "distance", " ", "between", 
      " ", "the", " ", "center", " ", "of", " ", "two", " ", "bins", " ", 
      RowBox[{"(", 
       RowBox[{"rvec", "*", "Asub"}], ")"}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", "mean", 
     " ", "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "all", " ", "pairs", 
     " ", "of", " ", "bins", " ", "that", " ", "distance", " ", "apart"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stempPCF", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rvec", "*", "Asub"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{"Mean", ",", "stallcov"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.662401751323216*^9, 3.662401767856126*^9}, {
  3.6624018026823177`*^9, 3.662401805136237*^9}, {3.662402598586731*^9, 
  3.662402656960024*^9}, {3.662403448724161*^9, 3.662403449356001*^9}, {
  3.662413682182837*^9, 3.662413751871039*^9}, {3.663012508625531*^9, 
  3.663012514297451*^9}}],

Cell["which looks like this", "Text",
 CellChangeTimes->{{3.662413762951601*^9, 3.662413766590012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"empPCF", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"stempPCF", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.662402671244444*^9, 3.6624026938166847`*^9}, {
  3.6624027307213984`*^9, 3.6624027646607313`*^9}, {3.66284515333747*^9, 
  3.662845164270727*^9}, {3.663012519337796*^9, 3.663012535069141*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], 
     LineBox[{{0., 10.99540195170852}, {5., 6.373969409741758}, {
      7.0710678118654755`, 3.794305262574646}, {10., 1.0963962940732257`}, {
      11.180339887498949`, 0.660591967013109}, {14.142135623730951`, 
      0.11308860053655641`}, {15., 0.03753329038905565}, {15.811388300841898`,
       0.02518347641695937}, {18.027756377319946`, 0.007407697952713561}, {
      21.213203435596423`, 0.0011243739720043198`}}]}, {}}, {{}, 
    {RGBColor[1, 0, 0], 
     LineBox[{{0., 14.465783062826553`}, {5., 8.631442183117205}, {
      7.0710678118654755`, 5.701584410287954}, {10., 1.8830067331345521`}, {
      11.180339887498949`, 1.3303685348254821`}, {14.142135623730951`, 
      0.24878875292149852`}, {15., 0.2645975709407388}, {15.811388300841898`, 
      0.08984020233410818}, {18.027756377319946`, 0.0035976684129494416`}, {
      21.213203435596423`, 0.00037385521331162154`}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 21.213203435596423`}, {0, 10.99540195170852}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.42426406871192845`, 0.42426406871192845`}, {
   0.2199080390341704, 0.2199080390341704}}]], "Output",
 CellChangeTimes->{{3.6624026753490877`*^9, 3.662402694224242*^9}, {
   3.662402733657669*^9, 3.662402764957795*^9}, 3.662403280700993*^9, 
   3.662405717953288*^9, 3.6624062969674873`*^9, 3.662406329773899*^9, 
   3.662406416186351*^9, 3.662406804603773*^9, 3.66240683746817*^9, {
   3.662406886173161*^9, 3.66240691093393*^9}, {3.6624069838326597`*^9, 
   3.662407012312221*^9}, {3.662407083140224*^9, 3.662407106243676*^9}, {
   3.662407909118041*^9, 3.662407928023505*^9}, 3.662408841453096*^9, 
   3.662408905364181*^9, {3.6624089446938267`*^9, 3.6624089748889437`*^9}, {
   3.6624090129800463`*^9, 3.6624090870484447`*^9}, 3.662409222978368*^9, 
   3.662410582890629*^9, 3.662410645396593*^9, 3.662411257144088*^9, 
   3.662411323604559*^9, 3.662411410305233*^9, 3.6624114593953867`*^9, 
   3.662411831491273*^9, 3.6627548268499537`*^9, 3.6627551177774353`*^9, 
   3.6627551888229713`*^9, 3.662832514275855*^9, 3.6628445763722677`*^9, 
   3.662845108840994*^9, {3.662845154442807*^9, 3.662845164557125*^9}, 
   3.662992523886785*^9, 3.6630116626124983`*^9, 3.663011815752756*^9, 
   3.663012649646262*^9, 3.663013327052182*^9}]
}, Open  ]],

Cell["Fitting the function to the data", "Text",
 CellChangeTimes->{{3.6624116006129713`*^9, 3.662411617797512*^9}, 
   3.6624137709835*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Rho]", "\[Lambda]"], ")"}], "2"], 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       FractionBox["r", "\[Lambda]"]}], "]"}]}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "function", " ", "to", " ", "fit", " ", "to", " ", "the", " ", "empirical",
     " ", "PCF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]", "=."}], ";", 
  RowBox[{"(*", 
   RowBox[{"what", " ", "does", " ", "this", " ", 
    RowBox[{"do", "?"}]}], "*)"}], "\n", 
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fitcor", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"g", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "50"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
  ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fit", " ", "the", " ", "function"}], ",", " ", 
    RowBox[{"with", " ", "some", " ", "parameter", " ", "guesses"}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"stfitcor", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "stempPCF", "]"}], ",", 
     RowBox[{"g", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "50"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6624027871760187`*^9, 3.662402882159881*^9}, {
   3.662403440956188*^9, 3.662403443083897*^9}, {3.662413819411948*^9, 
   3.662413832425786*^9}, {3.6628452248990993`*^9, 3.662845233067706*^9}, {
   3.66284544825609*^9, 3.6628454777433033`*^9}, 3.662999882088624*^9, {
   3.663012578060636*^9, 3.6630125805089893`*^9}, {3.663012713354792*^9, 
   3.6630127135136747`*^9}, {3.663013524429468*^9, 3.6630135248435*^9}}],

Cell["How good is the fit?", "Text",
 CellChangeTimes->{{3.662413841744823*^9, 3.662413844902369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
        ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "fit"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662403357573029*^9, 3.662403400917585*^9}, {
  3.662403460732779*^9, 3.662403460900476*^9}, {3.6624035271260643`*^9, 
  3.6624035294532757`*^9}, {3.662403567283935*^9, 3.662403568012061*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.8591069937274668`"},
    {"\<\"AIC\"\>", "28.20266262397926`"},
    {"\<\"BIC\"\>", "28.79433635598792`"},
    {"\<\"RSquared\"\>", "0.8904165506769187`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.662844576650337*^9, 3.662845108938904*^9, 
  3.66284523510108*^9, 3.662845480109968*^9, 3.6629925433449373`*^9, 
  3.662999884276883*^9, 3.663011662727475*^9, 3.663011815867652*^9, 
  3.663012649862006*^9, 3.663012715810932*^9, 3.663013327167984*^9, 
  3.663013531093873*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"stfitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
       ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
   RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6630125923495092`*^9, 3.663012592883932*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.9203958045648194`"},
    {"\<\"AIC\"\>", "29.231660452410082`"},
    {"\<\"BIC\"\>", "29.82333418441874`"},
    {"\<\"RSquared\"\>", "0.9380856257726373`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.663012649945126*^9, 3.663012716909595*^9, 
  3.6630133272339153`*^9, 3.663013533258871*^9}]
}, Open  ]],

Cell["What are our parameter estimates?", "Text",
 CellChangeTimes->{{3.6624138505438223`*^9, 3.662413855414859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Rho]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662403541170051*^9, 3.662403579627411*^9}, {
  3.662413877368452*^9, 3.662413935628236*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", "2.3219596472724042`", "1.0566897340842294`", 
      "2.197390182166111`", "0.06397700632161947`"},
     {"\[Rho]", "44.74117913267607`", "8.223946879663186`", 
      "5.440353614554044`", "0.0009658815221354373`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.6628445767528753`*^9, 3.662845108980483*^9, 
  3.662845237827681*^9, 3.6629925446773767`*^9, 3.662999886111066*^9, 
  3.6630116627712517`*^9, 3.663011815916007*^9, 3.663012650029296*^9, 
  3.663012719976832*^9, 3.663013327301014*^9, 3.663013535752783*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stfitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"st\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"stfitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"st\[Sigma]\[Rho]1", "=", 
   RowBox[{
    RowBox[{"stfitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.663012606526299*^9, 3.6630126137170563`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", "3.000016935806106`", "0.9092163735994099`", 
      "3.2995632534966624`", "0.01312859993078236`"},
     {"\[Rho]", "51.29886738162031`", "3.5588102671356086`", 
      "14.414611494000606`", "1.8423434972814503`*^-6"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.663012650113944*^9, 3.663012720925774*^9, 
  3.6630133273680696`*^9, 3.663013536858712*^9}]
}, Open  ]],

Cell["Or if you like confidence intervals better...", "Text",
 CellChangeTimes->{{3.662413938361573*^9, 3.662413946160007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"get", " ", "confidence", " ", "intervals", " ", "too"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{3.662413934755294*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", "2.3219596472724042`", "1.0566897340842294`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.17671452435229495`"}], ",", "4.820633818897104`"}], 
       "}"}]},
     {"\[Rho]", "44.74117913267607`", "8.223946879663186`", 
      RowBox[{"{", 
       RowBox[{"25.294634897213697`", ",", "64.18772336813845`"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.662844577101038*^9, 3.662845109007119*^9, 
  3.662845241317061*^9, 3.662992546494075*^9, 3.662999888509388*^9, 
  3.6630116628126583`*^9, 3.6630118159497128`*^9, 3.663012650380192*^9, 
  3.663012722525793*^9, 3.663013327452413*^9, 3.66301353814187*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stfitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.663012629286323*^9, 3.663012629444726*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", "3.000016935806106`", "0.9092163735994099`", 
      RowBox[{"{", 
       RowBox[{"0.8500618488476959`", ",", "5.149972022764516`"}], "}"}]},
     {"\[Rho]", "51.29886738162031`", "3.5588102671356086`", 
      RowBox[{"{", 
       RowBox[{"42.88361831713406`", ",", "59.714116446106566`"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.663012650461525*^9, 3.6630127232748213`*^9, 
  3.663013327518771*^9, 3.663013539606707*^9}]
}, Open  ]],

Cell["Plot fitted curve with data points", "Text",
 CellChangeTimes->{{3.662413956438634*^9, 3.662413969480398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", " ", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
        RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Prolog", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
        RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stfitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", " ", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
        RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Prolog", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
        RowBox[{"Point", "/@", " ", "stempPCF"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Prolog", " ", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
        RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
        RowBox[{"Point", "/@", " ", "stempPCF"}]}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.662403769406761*^9, 3.662403992597126*^9}, {
  3.662404042064361*^9, 3.6624041243000097`*^9}, {3.662404161267418*^9, 
  3.662404199527317*^9}, {3.662405800170576*^9, 3.6624058024493113`*^9}, {
  3.66240792592798*^9, 3.662407926379305*^9}, {3.662413951485792*^9, 
  3.66241399528541*^9}, {3.662755240062652*^9, 3.662755249022591*^9}, {
  3.663012661384403*^9, 3.6630126898258133`*^9}, {3.6630127432217503`*^9, 
  3.663012779733029*^9}, {3.6630133339912558`*^9, 3.663013353623452*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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

      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1:eJwV1fs/04sDx3GXmS1zvzSXtc3SXNYSm0R83lQUwhEdJYqQJPSl9E3EUccl
utEJEUUlSkJRKUoURyqlUCoSSmrkEonvvj+8H+/H8y94sf3C3AKkJCQkKsT7
//s0Zq2KcZ8lNjv3nPpcbINHp0t6Ul/MEllO5e21PjbI0I6iWYlmiQc+z9Y4
ONtga57tsmHaHGF14df4ZysbTF/sTF1nN0conVTyDWLYgH9T1lzh1hwR+U1j
pXc34Phl6SN7FwlMCe0fkn2BCspRRpNAErnvA948/WqNvkDnhTxbSXinmTYk
tVlDo0HB6JiLJOqu3HfaUm2N/fHHzD2CJZFleme//yFr2EwfX9+TJ4mNvTMu
zQxrPB1KT56aJwWSzFe1bg8rDLVmjRv0SOHutceVvzotobN400zqNynslI9f
qF5vCecjWtKiX1LYm5qsZH/FEuX2Z5RuakhDWDTX+iPWEv+tyzGydZLGxu2R
irv0LCFbnue7qUoak/OvtNXttQDn1IUnKWkk1P4oDaIZLkfojcBaWg4JbrQz
RfZqy3G7nXv9aDEJFRK2c9mz5nDTKM44+YiEeuGUX/ILc8SdLvXKlpRB5/Ay
0/hYc7zLqvp8eY8MDhBtbrUdy5B5tkmmyZsMlkLwjVO5Zui7lzLpEEJG4T92
ihkpZjB+7/i5ZT8Zj0ZL0y5GmeERs7Xl2WkyvOo4ybJuZpjIb0vveE5GxNjA
gZuyZlhf8IY9uFoWPXs5Ctf3CqFQNGwly6fAtinbNMhPgIxGRK5eQcEN6JWS
3QTQ/pRenOBAQQfP9eQNGwH0dS3mS2ynQKKzduUqtgC2OX+LfuZRML3Rg8Lp
McXe48yCL8pUcK8rRL7cZop3+/6gtI5TIalmuyMu0gSla2+0ZdyVw9a+aivD
WmPEkbZNdzfLQU33Zia/whhutUq63A45BPevjLa6ZIxxQcjuW6NyiO47fHn/
MWOsYHGU3nFpOFvoErZ7qzGaJ46v456kwemZy087kjEGCkIe3wqUR7Nm49lj
F/lgzXLuvVNURMri+oeTdB5o0W3P7BYoojHRwVmKxMPPybiPpTxFXE4wGGB+
N8LTkW7KwbWK0Ejo+ZHeYITYT6fXMxMUcXUv3cI7wghvW+Q+b5lQxMyHT2/8
2gzR8mQqOTxUCTUjt+bKcw2QmNNTOeKuDKdmg/roAC50DfrNSryUsSZnS8kL
Dy7u3fhS7e+nDMUMeQ9zOy7GW3/UvA5TxqOrpjVcLhfbJMkNd1OUIRsSnpT7
eRGIQMP25DplxGmW13SFL8LkkohxNk8F7KHoKMckPWyvJ5m5SatC/iaRXNrB
AcvFreszVRVjma73mC0cdHTlxcYrqWLu9vvL2bUcOIxaPCpjqKLDcjr+6kUO
+OzdnormqkD/VTu7PRxMxHbvbwlRhUYj/+EKNQ4OWdystXulCquA2hDSRl2c
u759reVlNWz4N97PdYaFwLPCbX5lauh7kOmgOMIC74h0THKVGnTmuP6vP7FQ
7Z9X9rpBDR1+d6kJT1l4Nv/1/MheNfhL8UztC1iYjbHrv6KtjgKBYV20Ewub
HfQSFhxVx9nMUJM7DkzQP/bWSEZowOIQXVDzTgekBT4upf/VgPpV/wMnn+jg
u2dnz6Y4DXhp5ifuqdFBY+tTcmWaBla8za7xzdZB5O0a18AiDegFvdj/fIMO
np34p6+5WwMv7eosZNq0kQQHWsaa+TgQPLwp6rkWfuZe91q0gA79D7Vfwkfp
EC2/us1Pj46yPBWXn710fG4v2nmWR4e3SdbQkRd0dMnnR2tY0jGSf+f860o6
amKOniF70rHr6VTPXBQdcd473/SfoGPMv+BIigQdsgw9r0symsgXKXTaaM2H
Rk7mJv1hTbg5M3m6oergLes+ZDumCdXytuMXfNVh28a+tvmXJj75Zu4x8VBH
KKVE+gRVC4mHXuUFrVBHQ+TdK1N6WrhLZ+SsllNH5Lre2WYfLUSuzI+4U6yG
tlmjgl3PtHA+k6fkJ1LFUd/aofIKbZRy5U/RTqmg2eH6Ubfb2kiu+Ns/6IgK
ZAQFS0frtLHqB+97c7wKDpATo5a2asMx7Rq7MFQFwSXO0mWD2uifdgy9uEYF
duPdWlcZOqg+U7K2/7cyZpNm1l5K1AG/LXzOeJcywsqWF53xYsDkopnEd28l
VE+X1DX7MbDd2endQg8lSKxe0Dm1g4FbTrx1vk5KON4pNc9zHwP1ycTjYQsl
lEu17FQ7xUDKmP85d7oSJtx9lqS1MrA6LL26uEgRsVN/3Yy1WYD6Y+zkuXMK
SLNteejLZeLXRHp9ZxUNM11DHhp8Jvr6P5ouL6YhOEJuoFnABOU5X+Z8Dg12
hQ5UgS0TcY5Lrx2Lp2FWpmkd2ZuJ8PCDvl2ONIQ2NbwqPslE1qt2D26vHFxd
awd//GbifvHE2t3qcpi3ZCN5ZTALZ9KDD/ufouKx0WXqp10s5GYtnjeWRMVh
/Sla4m4W8qRu30k9QIWEbpbqv/tY6BuNTercRsWEWidrfSIL4YusJD+YUNE7
7Wm5rZAF5wYv++w2Cu40eoYnvGNBbnkZPYNOQYiPZ1e9GxsVxlPN/LtkVHe1
fHPfwIYS+3Q7qYIM0p820v0b2ThnFKPfW0RGroshj+LLhqI360R5BhmtmIlx
CmMjVOvGy8vijhhz8tntR9gwz+buHGaQMTYwENT/kA2JuurBgsMyiN4dNUlZ
povFX8s3VQaRYL0Whr/lOMg+XnqXlyGFfFt1+Q+jHGRGXJNmDEqgSiJD5j/N
C2H2ku1VyZ8jos+b2D/O1UP+K/evu3/PEN0B3ebyCYvQZ9z4ZXBqmhgbXgrJ
jVy83G7tVeU3RRSfPjn5EfoI7XgroTo8Scjrqf5MWWiAAa+oVX1VE8TCKCuF
np8GaKzPde19ME50fYl4qffeEJJsKpPVM0as4riXad40gvHKgHM8/hixmXBv
f57EQ93sqmWUzB+ESszW4n27FmPzYYe9fPkfRMxBjVOttnycT8qgdp0dJf4u
6FiiargEPH/2eYnlo4SunW64tKQxSLYLV6oNjhCevMGQ98HGCLIfTVQoHCG8
OZX3y7uNEf5wB0k5YISomXE/171mKQYcdCOGTEaIL/2/OuZqliLVbPZ0OmmE
+P7AREhaYoLM6KzF490iwjneWmdrlgkK9z3J068VETGurl4VNFPMmFKLc8+L
CLLUMj2ffaZg+NBS3h4REQEXrqoOiTsb5mUdeWWfiMjYaLgpzF2AWN2pFR2B
IoIhijZyrBVA94TH0hxPESFyue6qf1+AQ3Je3r5iP7jWv0emXtz1DQ/LFokd
GPZHXW2jAE+f//nk+p8iouzbIg9Bq7jrWTldTRtExKrh57GMbgE0vYv5kh4i
IvgLt+37tABOPb2U1D9ExAoH78mWGQE2Pdb87iG2YvFJneJZAQqV/5piil25
43egv5QQylKH91e6iojfg22/OqhCJCWUGL53ERHHB2L0HtCFEF4M5ls6iwg/
+wqHPC0hUuP8nWTFFl4aDDugI4TUfKW0F+tERFfg+ttmLCG+P16wN0Tshf36
LiVcIfLH0vrynETExGqfyCQDIcZGk9R3id10IT0rwEgI7eHoIAuxQwNmPzKX
CLGF/S2i3VFEoMGU+ttYiKEiglcgtoreDn6XiRCKjxaTd4vdd+js+iqBEAeb
zkkSYlf1vdiXYSZEhPzhBfJi/w90Fd6i
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"g(r)\"", TraditionalForm], None}, {
     FormBox["\"Distance (m)\"", TraditionalForm], None}},
  ImageSize->800,
  LabelStyle->{FontFamily -> "Times", FontSize -> 12},
  Method->{},
  PlotLabel->FormBox["\"Pair correlation function\"", TraditionalForm],
  PlotRange->{{0, 21.213203435596423`}, {0., 28.926246699618936`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, 
    Scaled[0.02]},
  Prolog->{{
     RGBColor[0, 0, 1], 
     PointSize[0.005], {
      PointBox[{0., 10.99540195170852}], 
      PointBox[{5., 6.373969409741758}], 
      PointBox[{7.0710678118654755`, 3.794305262574646}], 
      PointBox[{10., 1.0963962940732257`}], 
      PointBox[{11.180339887498949`, 0.660591967013109}], 
      PointBox[{14.142135623730951`, 0.11308860053655641`}], 
      PointBox[{15., 0.03753329038905565}], 
      PointBox[{15.811388300841898`, 0.02518347641695937}], 
      PointBox[{18.027756377319946`, 0.007407697952713561}], 
      PointBox[{21.213203435596423`, 0.0011243739720043198`}]}}, {
     RGBColor[1, 0, 0], 
     PointSize[0.005], {
      PointBox[{0., 14.465783062826553`}], 
      PointBox[{5., 8.631442183117205}], 
      PointBox[{7.0710678118654755`, 5.701584410287954}], 
      PointBox[{10., 1.8830067331345521`}], 
      PointBox[{11.180339887498949`, 1.3303685348254821`}], 
      PointBox[{14.142135623730951`, 0.24878875292149852`}], 
      PointBox[{15., 0.2645975709407388}], 
      PointBox[{15.811388300841898`, 0.08984020233410818}], 
      PointBox[{18.027756377319946`, 0.0035976684129494416`}], 
      PointBox[{21.213203435596423`, 0.00037385521331162154`}]}}}]], "Output",\

 CellChangeTimes->{
  3.663012781622993*^9, {3.663013339077299*^9, 3.663013354356492*^9}, 
   3.663013541222905*^9}]
}, Open  ]],

Cell["Plot fitted curve with confidence bands", "Text",
 CellChangeTimes->{{3.6624140170269537`*^9, 3.662414017625156*^9}, {
  3.662414059835639*^9, 3.662414068251809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bands90", "[", "x_", "]"}], ",", 
      RowBox[{"bands95", "[", "x_", "]"}], ",", 
      RowBox[{"bands99", "[", "x_", "]"}], ",", 
      RowBox[{"bands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fitcor", "[", 
       RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
        RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"cl", ",", 
        RowBox[{"{", 
         RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitcor", "[", "r", "]"}], ",", 
       RowBox[{"bands90", "[", "r", "]"}], ",", 
       RowBox[{"bands95", "[", "r", "]"}], ",", 
       RowBox[{"bands99", "[", "r", "]"}], ",", 
       RowBox[{"bands999", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"3", " ", "\[Rule]", 
         RowBox[{"{", "2", "}"}]}], ",", 
        RowBox[{"4", " ", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}], ",", 
        RowBox[{"5", " ", "\[Rule]", 
         RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662404221668598*^9, 3.662404310745612*^9}, 
   3.662414014514715*^9, {3.662755211342601*^9, 3.662755231736133*^9}, {
   3.662845540490911*^9, 3.6628455435145197`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], 
     PointBox[{{5., 6.373969409741758}, {7.0710678118654755`, 
      3.794305262574646}, {10., 1.0963962940732257`}, {11.180339887498949`, 
      0.660591967013109}, {14.142135623730951`, 0.11308860053655641`}, {15., 
      0.03753329038905565}, {15.811388300841898`, 0.02518347641695937}, {
      18.027756377319946`, 0.007407697952713561}, {21.213203435596423`, 
      0.0011243739720043198`}}]}, {}}, GraphicsComplexBox[CompressedData["
1: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
WT9KFlPHfmzsGbdzTSjfjw/sHK5afoHvx8cPDEjBYL4fH2P5PXT5q4P79QVm
jRM7e+m4X0/qntRJFlPD/Tq7/QFb1kgZ+/Hq7bzUc+T3i/rd9PES5QwVLdzv
Xpq0/elvRsNefC/AzmrYVwV7sVu4/jdeBN+L348G1cEAbdxfpoNvN4J5ZJ80
u8WqeA75fr4zkeWsoo79OMdDeiQ7lO/H3rMf0pMv8P24fdMZF7XzfD9+l5Yt
zQj+v36MvNh9vtS4lI0iE3lxzaj0AvsxLkT1kjHoonsV9hOoXq7JeTB4V2KK
QPVyXWWZ7+bVYwSql1zTD19u6X7CXpxVfPy20KkvENVLFZOXxntihyCql4s+
bNi8MGkconppxzFXtqZwsRf3ZOjTDVdwsRfnp5zeNDo5gb340NOJgo3MMezF
zl/NNucbjmAvbvn956WaNRt7sV1zTXf23h7sxXGa1AL/qu8Q1UsVFXbMTM8n
iOpl8PHmrr8RzRDVS1/NJD+TsiKI6iUt5BNru1k2rpeW09qua2KqcL3MPyz3
/a94C66XTusvPWgX/4jrpVKc6gq7FV9wvdw5Wl7MVfqG66XIQr2Ex+o/cL3M
cBrUzhP5ietlq0jDuu3Rv3C95A2o3iv62o3r5UvXUv9sxV5cL/fRbRqfyvbh
ellySW1yjkA/rpdZMkpaEpX9uF7uVPWczmQM8O83E6Y1q2p4ANfL9MjTucS+
37hevt2tWbKp+jf/8+5D+QEKNL4XyzDexW7dz8b18uShNVcLs9kE8mDrIWfH
vglxJvJgQOvuXVXOhKieumruaI3byCFQPbWef6rYMGOSQPXUuij38faRPgLV
U9rSyX22W/Mh8mBWjhvcI9wLkQdPX+WVDJwahciD9RKtZDfqc7AHs87bLejf
xsUeXFfgFvi2ioM9uKSrQf3Q2Dj24BPfc6X8z49i/z0mcUzv/BU2/nufNg0K
Ah9DZZjIe1nVmyPf2PRCVN/HTPffUibna1TfHUst3IMmeQSq79RPxc9e/xki
UH3PlxwIkFtVib03OtBJwk23CyLv/ZVU3/mePgKR91oeFhXSOTUBkfcmJyVr
MwAXe++IR2hdlQQXey/lNPjyLmgCe69r35CQktYY9t0Qg4LFG0+yCeS3zImC
Cxs1hZiov+jc4p+z+msbgfoLrZJvBXs/TxKov2DEuBKtmzkE8lvHpdWp9U5v
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
z+5V5PkU6RFp68yFOcXtt5aIyIKs46nfjpDvdy2B/ZpRZ9XBs53WC09bcrFH
Xvx4/eGCM5PEqMije9cMaCD4tOPaHWQ9FgljLH7fS55nzP8Cjcl6hDzSMDQ+
WYTNI/bVPTA0Z9BAdqpp4wF7LvbIoKJC66ZMNjES+CYu/wU5r+y7knVKe4po
FJ/fJCpGXj+ShGsZ+fyOdvlmGiaywCtEq8SJxSOHw7lbH9nQgHufW+dNsn/T
6AD7ejlUIFqUrTilNUWEHo6S/qxJAzmz5pYuJn8+Bi50GZ928nqxM9/URn6/
wpwfMqvCqYCWr3BcqIVHUBaIzWz4TAUsizfVC4yniAfLHYaOytFAu41POJP8
/5bXTzSEUmVBTkfC1+dCU4RHSoO5nQkNRJY+26tFvt+/F6dsJTjqoN1uJkxl
Gxf2aCvdv5dGBdaX1aCg8BTOXz0/bW0of8D+Px6J79/NLXxuoKSN/XHbcpO9
Ec/o2B8v3XnoMOJGw/54OH2323iFGvbHkx4qF3J/qWB/3HlqdX7HXGXsj5nZ
635Ljihgfzz42eNbEFcO+2NivYx0xHcq9sffnmHHtwxLY3/07aupngZS2B89
ok+JvNKej/0xpbxmgYqDOPbHOrUdwZR6MeyPHRukHyrtmIP9MeV3By/STRj7
Y9xwpJXusdkA5akXTsZERjYLApSn7pw0uPz2lABAeSqlMGa5v98MzlNf3Hrr
kus9jfNUqvelw/0FPJynGpWU7tksO4nz1Gt2FQ6najk4T/3cbiE0EDuB89Qi
WZEb4cnjOE8NUXFnfWwaw3kq517XiLPEGM5T7TflrVh0fBTnqbfuvtwy1T2C
81TuXI533bERnKcuf/+7843sCM5TpXZ+2GbF5Puj5aqBWaFnhnGeKl7+9kfv
ymH+51un2azW+cM4T41sl7F/8ovvj4KbLjT/gXx/3Ce9TTauSxf7o42+d7Uw
RRP740NRo9ttbBr2x+95ijlvnqhjf4x3IZ+4he+P1tnrjl/J1Mf+eOMOPd93
XBP7o83teROU9XTsjyw9r6N5CjTsj8zyY6lu7UM4D+xMXq2ya7cO9sYzB96t
+uWggb0xO/SGSmwqDXujqtuld8K1/DyuznmerHqwFvZF60jaur/n6NgXbyyM
5cVZ0bAvVn+PCz3xje+LbcyQdVbKutgXBbtPdwplamBfzFtFzNhV07AvbvC5
8uBxI98Xze/xfnaV62FfFLddfU/5pCYwPOB7wkhGHjicVlL6pUTH+/dfvpT8
uFykjf1RqMhwMkBAA/tjrlXtC//KIZznbIdRAgb1Wtgb567VXRCaRMfeaFm+
bU70Ohr2RmP7ZTTpLr43lshcVRoK0sXe+CNgulL2gwb2xoSxwasGbTTsjeqt
S+ukWHxvfF4y3ZZhrI+9MbljYEHkU01wNihk0f+eI/sdVxw8aErH+9YOX6MY
KhQd7JE3q5UfR+hoYI/ctHRwqrSa75HXpfznWrwawvPxlNHGVv0RLeyPnQ1v
w1we0rE/2j90MDbbTMP+aCnUwNz9k++PG2y0XSrzdbE/yiadOW00pIH90f6c
Dd2ri4b98ZRDsa/dG74/aqjtLY05pI/9MVvfrWzeO02QOSdKTKtfDnwqlXp2
04aO90+LjKNur16sg31SPrftpw/Zt6J5zCxNgPr1Nd8nFa+L33Su4PtkWtoT
dcWXQ7j//o9x6LeYiDb2SDXFOIeuAjr2SEPZg9rXttKwR+pbSdhTfvE9MnON
58GoOl3skWuWfX05648G9kjzpJLbib007JEnfKIPdrzhe+Sy8vuVPpf1sUde
uVxXofFTEzxvkAoM7JIDkl8e91fb0fF+mulgy5D5eh3slfoBqULxdhrYK/tW
HyGO1fC90uDcy+NdFXyvnHfqz+7Ml3yvnHPpP7sI5hAhYineuf25OED1UrtP
wRq4CQDkl16HJWujFkvhxxs/ZKhqLxTCj9uFrPpTeZv/+P41cW8XvhbDjztW
fZ+XtlcaPy7id3Hp6yoJ/Lj52POxvH0y+PH/AQMUkm0=
    
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1lXUVWUQBuBfTDqluxsFRJEu6U4p6W4p6VJaaRVQUEFCBQG7le7uBhVU
UuzCZxYXz5p5Zy7OOnt/31knV6f+TfolSkhIuIs/NE9oSiVOSCgtl6Gm/KJ5
eW7oNzCNr+SuZOKUPJh39E24j+3yUmrxklyBm/r3mM7Xcjcyc1oewhp9U+5n
h/watXlZrsjP+veZwTdyd7JwRh7KWn0zHmCn/Dp1WChX4pb+A2ayUe5BVs7K
w3hX35zE7JLfYJd+IPm4LNdlkb4yv+g/5JD+GYrxvLxJ7Uk2zsmn1PE8wnB5
ndqCJHzHNHabH1NH8zBXmcMy893qoPg88vNDfA5/R29/Tn020Z33V5brzOM/
6tkvVqvE8+NX+aI6hb/4SD6sjuA3ivMTs3jBbrPai+xcYgbnzU+rEygT311e
r7YkKXvk4+oYSrJc3qM+TQF+lOvzir5qfK7+Y2axRe5NDi7II+LM6VuRjL3y
mzTgVbkav+s/YTYjacgS8+rxTPSfModRNIpzaV6DP/WfMZfRcTbNniQ5++QV
NI5zGPcinpf+c+YxJs6iWWtSsF9eSZM4d3LNeD/6L5jP2Dh7Zm1IyQF5FU3j
nMm1+Ef/JQsYF2fLrC2pOCivphnL5Nr8G/cw7ifj+cisHak5JL9Fc5bLdeI8
xL2L+8hWuQ85uShPiHegb08aDstv0yKet1yX23Hv4j6yTe5LLr6VJ8Y70D9F
Wo7E7wF79YMpGOdKbhnPNc4lCWyM+8l2ffwQ5Y47IU+K96bvQDqOyifUsZRi
jbxPHUIhrsit4h3o63MXm+Qj6khKsEjeofYnD5eZyffmZ9SJPBp3Kc6F2pEH
Y890jpmfVMfFmaM015gb74K19vvVoXHPKBxnPe5RvFuu2p9Xn4uzx+PcYH48
2zh7cSbUBtwiUTxbprLZ7qg6iofi+zKbxeY71QHk5ZJ8Vp3EY/FZcWbVTqTn
ePzOcUA/jCLxHeTWcb70DbmbLXE/mRxnWO5MBk7E7xdt4nzJjbiHrXEfmUJb
2tGep+hARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAGxZn0WY25l21xz5ka90bu
QkZOyus5qB9OUa7LF9TJlOMmC+IM3u13ya6ktob6INX5Xk6nVot7pf+OtPqq
TNd/yLekkavE99RPZgPnSGFWgYf17XmO9ZwluXl5HtK341nWcYZk5uUooW/L
JN7lNEnNH6e4vg0TWcspkpiXpZi+NRNYw0kSmz9GUf2TjOcdTvCA+aMU0bdi
HG9znPvNy1BY35KxvMUx7jN/hEL6FoxhNUe517w0BfXNGc0qjnCPeSkK6Jsx
ipUcjlcR74H8+qaMZAWH4qciniX59E0YwZscjP8u8SzJq2/MMyznQMKdPzYl
yKNtxHCWsZ/bFLfLrTZkGG+wj/8oZpdLbcBQXmcv/1LULqdanyG8xh7+oYhd
DrUeg1nKbv6msF12tS5Ps4Rd/EUhu2xqHQbxKjv5k4J2WdXaDOQVdvAHBeyy
qLUYwGK28zv57TKrNenPIrbxG/nsMqlP0I+FbOVX8tplVGvQl5fZwi/kscug
VqcPL7GZW+S2S69WozcvsomfyRX3S61KLxawkZvktEunVqEn8/mGG+SwS6tW
pgfz+JrrZLdLo1aiO3P5imtks0utVqQbc/iSq2S1S6VWoCuz+YIrZLFLqZan
C7P4nJ/IbJdCLUdnXuAzfiSTXXJ1Gh9wkdRmlePe6jvxPJ/yAxnNk6ll6chM
PuEyGeySqlN5nwukMqsUd1nfgRl8zCXSmydRp/Ae50lpVjHut75k4jv/8f8H
rtiEJQ==
         "]]]}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1WN0nAkUBuBJUsWulXrrpojbRjVTu02tpFjbtm2ra9u2bdvefe7ZH895
73fvn/neM3OmqLG5oSk5kUgksSPp/yxOTSRK5GgP2bxvvonDSaOt3afydo5m
OaWMsc/hA/PNHEE67ew+k3dwDCsoI4P2bp/LOzmWRsoZa5/Lh+ZbOJJMOth9
Ie/iOFZSQRYd3b6Ud3M8q6gkm05uX8l7OIHVVJFDZ7ev5b2cyJp4d3Lp4vaN
vI+TWBvvSR5d3b6V93My6+Jzk083t+/kA5zCeqopoLvb9/JBTmUDNRRS5PaD
fIjT2EhtdE4Ptx/lw5zOJuqiX3q6/SQf4Qw2Ux/90svtZ/koZ9LEuOiS3m6/
yMc4i2bGR5f0cftVPs7ZbGFCdElft9/kE5zDViZGl/Rz+10+yblsY1J0yU5u
f8inOI/tTI4u6e/2p3ya89mZKdElA9z+ks9wAbswNbpkoNvf8lkuZFemRZcM
cvtHPsdF7Mb06JLBbv/K57mY3ZkRXTIkfgi8IC5hD2ZGlwyN3wkvmi9lTxqi
S4bZJ/OS+TL2YlZ0SbF9Ci+bL2dvZkeXDLdvwSvmK9iHOdElI+xb8qr5SvZl
bnTJSPtWvGa+iv2YF10yyr41r5uvZn/mR5eU2LfhDfM1HMCC6JJS+1TeNF/L
gSyMLimzT+Mt8w4OYlF0Sbl9Om+br+NgFkeXVNhn8I75eg5hSXRJpX0m75pv
4FCWRpdU2WfxnvlGDmMZ1XZ5fGS+laOo8ZzPx+bbqDUX8Im5ThZST3F0l+L7
xSq2M4eVbGM8s2lkK+XU08BymhnCSMYylUVsoB996UNvetGTHhTRnW50pQud
6URHOtCedrSlkALyySOXHLLJIpMM0kkjlTa0ZjAjGMMUFrKeVpRRx0yW0cQg
hjOaySxgHS0ppZYZLGUzAxnHLFawhWKqmMR81tKCEmqYzhI2MYBhVDKReawh
hVFUM43FbKQ/Q6lgAnNZTXK8p/+rJPkfuo2m8w==
         
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt12W3VVUUBuBDiYiCXVjYXYiK3ZSBmCjd3SkNKt3d3Z1Kd6M00t2NICWI
zxz+BT+eD8+Y81373nP2XXuuATtz0Up5K6ZMJBIhX6pEIquaNV0ikVZVEjWt
jUqdSHxFRjbLU1ilr0MWrsgDma0vzYMck5dSi9Hy19zIFnkqq/U/8BL/yIOY
oy/DQxyXl1GbMfI33MRW+RfW6OuSlavyYObqy/IwJ+Tl1GGs/C03s03+lbX6
erxMgiHW5qnleIST8gG1PblYIW9Rf+Qtro37tzZOzcctbJd3q634kGnyOrU+
r/AX/UjBETrzKZcZGvz8fLV8/EyaROJR9Qx9OOXaQbUDaVzLrV5iMOnlla5v
1f9EKvlt9TwDuE5OF3tKt7h3+fPYd4aTQa7r98frv+NWTtOLHdb3qK35iOny
erUBr5KSo3ThM4a5vkCtwGPxOfJvbNP/zDtxP7H31iao33MbO+UZDGehXJHH
+VP+nfo0YKK1/NzOLnkmI1gkV+KJ2LOYTxoySS7AHeyWZzGSxXJlnuRszCON
mCwX5E72xEzH/LNErsJT8Rxj/mgcZ0EuxF3sjRmOeY/Zl6vyNOdi3mgSsy8X
5m72xcyyQd+QbPHsGBOzr1bjmXiOMUc0jdmXi5CJ/TGzbNQ34jVSMzZmX63O
s1yIZ8Z2fTPejZmJWY6zoBblHg7Ie9U2ZGe+/IfamNdj7hhnbYVag+e4KB9S
O/IxG+QdanPe43pO0J28MZ+uT1OLcW88X3pz0Po+tS054nMZxALrm9QmvBF7
SX+u4RhdSWt+86hXYv64QR7v91bqa8aMys/Hc6Yv6eRLrh/Wd4rPkj9R/2ZI
3LO80fWd+haxp/L7sY8MjM/nJD34gquMiPn2O9PV4tzHIXm/2o6cLJQ3q015
M+6bCXE+1Fq8EPcQe06zOA9yCe7ncMx4zD/NY+6tleQBjsQ8x6zTgpa0ojVt
aEs72tOBjnSiM13oSje604Oe9KI3fehLP/rH+fF9pcjM0TgXcWbijMq1eZHL
8czYpW/JB2TgFD35koQ9HalmVAf42WoprMW9+IfoNK/TjD2cdO1ptTbrmChv
5U59cebQQu7HUtLInzOaqnIVKlOJilSgPOUoSxlKU4qSlKA4xShKEQpTiIIU
ID/N6csSUvuuPIzie3kCW7hDLsbs+HvkPiwmlfwZI/lOPsFT+lqsZby8mdv1
RZnFz/Kr6o/s5KD8sFqZFfSWO6jHeJ56/MEi6y3UfaTkDJ8ygnyuXVW7cIrX
uBjfxW6Ou35ZbccRnuQvarKGca5fUTtxgpc4TyO2ssn1VuoBbqMIM/nJ+itq
U3bEdbmNeoiHqMRyell/Tq3LRhbKKdRPGM638jGe0NdgNWPlLGpDtsQeyLeq
hZkR+yfv50F9/OdnGT3lBSn++4/QxwzjG/koj+urs4ox8kZu0RdievwN8j4y
6yuwlB7y/NhbcstD+Vo/mg3cLBdkGk3kvTygL88Susvz+Idc8hC+0o9iPTfJ
BfiVxnI35sazIKe1wXypH8k6bpTz80s8G7krc+LZksPaIL7Qj2AtGWOOmRr7
KHdhNn+T3dpA8uqHs4YMMcdMoYHcmVlc4iNrA+JM6oexmhti9phMfbkTM7nI
h9b6k0dfj47M4AIfWO8XZ0dfN+ad6Zznfet9Y7b1Q1nF9TEjTOIHeQ/368ux
mPbyNM7xntwnZkt/hMf01fg99l9+Mf42NseanD5mhInUkV+OZ8n2ODtya/Ug
91GWRXGOrLdXj/Is5+K+2BDPMvZLbc7eOGfyn+q79I65jHlQO3OSbFyIs8Qu
DsfzUdtGz6OcpSq/xUzEXqrHeSH2nU1xzXpLdT/XxZwygdrWs8Z8sS2+Q75X
LcPC+B75mfjbWR+zJZ/lHX0vcusP8Yi+CitjzuSVpIt5Zjy15J3coy/NAtrI
UznD23JPcukHsoJrY74ZR015B5n0pZhPa3lK7B9vyT3IqR/ActLGvDOWGvJ2
7taXZB6t5Mmc5k25Ozn0/VnGNTH/jKG6vI279CWYS0t5Eqd4Q+5G9piRRPId
K/mOlXzHSr5jJd+xku9YyXes5DtW8h0r+Y6VfMdKvmMl37H+z3esfwHh18ie

         "]]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{326, 2355, 52, 51, 885}}], 
         PolygonBox[{{326, 2355, 52, 54, 53, 51, 885}}], 
         PolygonBox[CompressedData["
1:eJzt00VylAEQgNEfwgBB424Td0+Iu7u7TtwVd27LLXhzCxZZvOrqZXfVF45c
zV0+DoIg6i+PYoKgMdZuHrDECO3UUs4ZG0zRSzMxHLLMKB3UUcE5m0zTxzue
cMQKY3RSzzW7zDNEJRdsMUM/LYQ4ZpVxumigiku2mWWAVp5ywhoTdEfvpJpn
PCeWF7zkFa95w1viiCeBRJJIJoVU0kgng0yyyCaHXPIIk08BhRRRTAmlnLLO
JD00UcMVO8wxSBs3RFhgmFv2WOSOfe4pi/47FAR/uOU3e9zwi0UiXPOTEebY
5oJvdNLPJGsc85FmmmikgXrqqKWGaqqopIJyyiilhGKKKKSAfMLkkUsO2WSR
SQbppJFKCsl00McEqxzxgSSGmWWLc77STi/jrHDIexIZYoZNzvhCGwvscsUP
ehhjmQPuSWCQaTY45TOtzLPDJd/pZpQl9rkjngGmWOeET7TQFf23LuNCD40+
NPrQ6P/e6D/ufIFo
          "]]}]}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
         "]]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{885, 2357, 7, 6, 1411}}], 
         PolygonBox[{{885, 2357, 7, 9, 8, 6, 1411}}], 
         PolygonBox[CompressedData["
1:eJzt09VOnFEYBdC/tECp4l5gcHcZ3N3dbYB6oe5C+7B9hLqteYtecLGyk2M5
+ZIdipwsHMcEQRD1mcTYIGhNCIIeGeYld9hkhiGSeMIhK4zTyzuO2WORdl5x
ly1mGSaZpxyxygR9vOeEfZbo4DX32GaOEVJ4xk3WmKSfTt5wnx3mGSWV59xi
nSkG6CKNdDLIJItscsjlBnnkU0CIQooopoRSyiingkqqqKaGWuqop4FGmmim
JTpvXnCbDaYZpJu3PGCXBcb4wEMiLHPKIw74yGM+0Rb9f7w5scIRoyxzSDsj
LHFANS0MMMcuhZTRQA9TbJJLDtlkkUkG6aSRSgrJJJHIda5xlStc5hIJXCSe
OGK5wHliOEfA37gg+MNvfvGTkPVS6ulmkg1+2KuSzfQzyw4FlFBHFxOs8935
sBxmkQiVNNHHDNvk08YQC+xTTC2djLPGN+9VyEZ6mWaLPFoZZJ49iqihgzFW
+ep+uQzr4pe4s16e9fKsl/9jL/8BTKGMZw==
          "]]}]}, {}, {}, {}, {}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1mWfVVUUB+ArkiooIhYYmKBgopSK2NiEooSBhaC0gYEojaDA0DXMwAww
DI30gEEI0hLS3R2KoKLP+gJ+gvvimbX++5y559y997m/U6J+k+qNcyUSibDY
n9xqhQKJRIN8icTb+ROJ4mzXTyOVL+R7+Eu/gh60lG/hqH4+Y3iXd4xdxQ79
dIbSRr6Xv/Ur6ckH8q0c0y9gLJ3kB8jNerkhDfRXs1M/g+76x7iANPlLtRz/
6H+lv/45ipIif6iW5rg+XX2Jn/W91acoTBavMc54Z7UyecikLhuMD1KrM5XL
GcMb5NAovrt6DePZFd9bfZFpzIw5Ux9nMgUZySvMIN3xr9TyTOSsPFytzSr9
APV5LqWX/JFahhP6hfTRP83FcX25i/ogedkovxdzqb+W3fpZDIs54H0aGS/B
Hn1OXDs+k4+N3cZJ/SIm0Dg+z9h17NXPJoO2cgX+1a+mL63k2/ld/wsTaRLX
NHY9+/RzyKSdXJEEa+R+fKK/gz/0i5nE13IV8rFJbhr3pL+B/frvY3/pn6AQ
I+T2aiXOYW3sET7V38kp/ZK4X/0zFIk1kruqD5GfzfJgtQZX0Cy+h3ojB/Rp
ai1+0KeoVbmQUbwaa228g3ofucigDr8ZH6hWYwqXkU19ZjHA8c/Uu5jAn7Fu
6stMZ2nMk/os33EJo3k99lyMOd5NfZhJFIj5oB5bHBui1uRKxvImzWNO1Zs4
qP+RXvonuSi+k9xRvZ9zWRffgc/1d3Nav4wpfCM/wnlslVvQTH8zh/Q/kRXP
Vvye0Nx4SQ7r5zI65j1+K+I5jn0fezL2VeyNWMOYn7g2reN3Kn5r4jchnqfY
k7GvYv1j/uO+4zcmnvF4RmIvxTrHHMW98m3co+uX4oh+HtkxT/H5xspyRr+c
qXG+/Cjns01OVV+gGON4i9l0d2xMHs9BXuvFbp6kE2u4gEq0YgGbnPs3t+rf
ZSqz5aUcorhcm5Fky6PJYhQjGUEmGQxnGOmkMZRUhjCYQQxkAP3pR1/60Jte
pJDDEg5SzHVfZgQ95Y38xS1yA6YwS17MAa6UXyKTHvL5akU+Zj4bjJ2hlP4d
vmOm/JjajpXk5m6aMYdfHO+pbqUyn8cY+413UX/jCvZQiwy6O3ZS7csuqnKY
jqzmPI7GeWymQnweHzGP9f7/uNqL7TzMQb5kGacd7xrnUZK3mcwM44+qbVnB
uXzDRu6iaawvi5z3gPpZ9OyTL1dfZDjfygXU8nzIXNYZe0htw1L+lG9W32IS
0+Vc6p00IYeFxvZymf4FhsX9yPnVcnzATzGHxk5xk/5NJjJNPke9g8axzvxs
bA+X6muSTjd5LX9wo/wGE2IvywvYTVG5Bml0ldfEM8INcn3Gx16S57OLS+Tq
DOVreXWsJ9fLrzMu9o48j50UkauRShd5MnPZwcXGnmcIneVVnOA6+TXGxvzJ
CfV23o89GfNi7H7105jH2AdyYfU5BtMpnh11J0/QgVXki/VjE/fG2tKSH/nV
/xxTU9hGFQ7wBUs47viR+M6x3pRgL68yJtYl7l3tzQ4e4RBfsZx/He+mbuA2
3os9Gdc23kPdwn18EmsZ92C8s7qWi3iWQXQ0/rjaPu6ZvNxDC35gpeMPqq1Z
zDH5WvUVsmP95bOU0TeKvRn/J2/lQv0zDIw5k/OoZWnO96wwdpRr9PUYHftD
/ofS+oaxN+NceQuF9E8zIO5XXh5zyNVyXbJiv8hz2ExB+Sn6005exmGukusw
KvZE3Fci+b6cfF9Ovi8n35eT78vJ9+Xk+3LyfTn5vpx8X06+L//f+/J/yeIx
tA==
         "]]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{1411, 2359, 3, 2, 1895}}], 
         PolygonBox[{{1411, 2359, 3, 5, 4, 2, 1895}}], 
         PolygonBox[CompressedData["
1:eJzt09VyFEEYBtDJJtnsxt1diQcPQYK7BncIcgmPiLu7OwR3iAsnb8HFXpz6
v69npmuqurqq93jPsVAQBJP66A8HQWc0CKYkBcGAvN1cSRet1HCATSxhFuXs
YR3dTKORQd/vMFcxlzZqOUgPS5lNBXtZz0Km00Qvm1lGJ0P222muZh7t1FHJ
PjawiBk0M+z9XeYa5tNBPVWMeDbKGONMEFiPI0Q8CSQSJokIUZJJIZU00skg
kyyyySGXPPIpoJAiiimhlN2sZQFTaaCa/WxkMTNp4RBbWM4cDrOVFRxhG0cp
413Efs6xkg4yqaCdODIop43f3h0hKhdOnj2f9O8MkKjnUstb/Q2vecVLXvCc
ZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDB/5Rj8J/iuH
Gk7rvxgmohfQwAd9nFS5hGa+6n+Jl7Op5pQemOmU0cpPa0MkyfnU814fI0Uu
pokv+h9CchZVnNQnSJNLaeGHPkhYzqOOPn2UZLmIRj7rXeaJSOxexu5l7F7+
j/fyHywLyL8=
          "]]}]}, {}, {}}, {{}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1Hec1gMcB/AnRNftu0LDuBYq0lXuuoFbKSW6aInqhCR3SgPZu+yRBjIq
ZDUpGe1QCoVQdoV2Zrb39+WP9/P5Pt/vH8/z+7xez5NTVVNZXSuRSHT0kpuU
SOSZTzan87V5PndQl0PtvpOvchcDyecU+wy+Mb/MOJI5zO57uYi7GRSfQwqH
u/0gX+MeqijgVPtMvjW/wnhSaWC3Xb7OvVxAIWk0dNsh3+A+BlNEOo3cdso3
uZ8LKSaDxm675GIe4KJ4djI5wm23XMKDXBzPSRZHuu2RS3mIIfG9yeYot71y
GRO4hBLqcbTbPrmchxlKKfXJcftRrmAil1IWndPE7Se5kkkMozz6panbz3IV
k7mMiuiXZm6/yLeYQjWdokuau/0q3+YRajgtuqSF22/yHR7lcjpHlxzjtl+u
5jGG0yW65Fi33+UapjKC06NLjnP7Q77L41xB1+iSlm5/yrU8wUi6RZe0cvtL
ruNJRnFGdElrt7/lezzFaLpHlxzv9o98n2mM4czokhPc/pUfMJ0rOSu6pE38
GFgvZnAVPaJLTrSvxQbz01xNZXRJW/sD+ND8DGPpGV2Sa38gH5mf5RrOji5p
Z38QH5tnci3nRJe0t6/NRvNzXEev6JIO9gfzifl5rqd3dMlJ9ofwqfkFbqBP
dEmefR0+M7/IjfSNLsm3T2KT+SVuol90mfj//6Eum82zuJlzo0sK7JP53Dyb
W+gfXVJon8IX5jncynnRJUX2qXxpnsttnB9dUmyfxlfmedzOAErssthiXsCd
lHqfzVbzQsrM9dhmLpf1qYj/N+//A8oAil8=
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1Xe8j3UUB/DfpUIaJAlRpFKoZKSSSmVmXXtz7XmRlb2ylV12g3YUyiij
7L33pqIhJJrkfV798b7nfL7PH8/r9zznPDdPSmpyx6REIrHMnyIZEomi+uKU
ld9Ik0iU5Lx+ASNZKbcgO4flrnyqT+YGNshvUY435ae5oF/IKL6RW5KDI3I3
5uqrk46N8tuUZ4pcit/0XzCab+VW5OSo3J15+hqkZ5P8DhWYKj/DRf2XjGGV
3Jq7OCb34DN9TTKwWX6XzfrO3McZuSLT9M/yu34Ru/WvUIjX5NVqG3JxXD6s
DqQYPeXP1VrcyPeMZIvz/WpfCnOW8cx2vkXtEvfjfn6M+/BP9K4fV1/lT57g
HBO5ykuuT1efi+fHJfmUOpy/WSzvUXtxmYf5mbG87toatS25Oc1oTjg/og6i
ePx2eb5am4xslQ+o/XiMOfJW9WUe4Ce5EjP0peO++iWMZa3cjrs5KfeKmdPX
4Sa2ye9RmZny8/yhX8o4elOFWc5fiGei/4rx9KFqzKXzF/lL/zUT6Buz6awu
N7Ndfp9qMYdymXheSf/vx0T6xSw6q8ct7JA/IDnmTi4b70e/nEn0j9lzVp9b
2Sl/SPWYM7kc/+pXMJkBMVvOGpCJXfJH1GC2XJ4rsYexnwxksbOGZGa3/DE1
mSNXiHmIvYt9ZJ3cnns4JQ+Kd6BvxG3skT+hVjxvuSL/xd7FPrJe7kAevpMH
xzvQNyYLe+N7wDZ9V/LHXMm147nGXJJgVewnG/QdyRs7IQ+J96Zvwu3skw+q
/SnCXHm72o0H+UWuE+9AX4kkVst71d48wjR5o5rKvZxhDD84P6oO5vHYpZgL
tSlZ4zqj2O/8kDogZo6i/MqEeBfMc32H2j32jIdi1mOP4t1y1vUT6tCYPZ7k
PJPi2cbsxUyolblImni2jGCNa/vUPjwav5dxTHe+Se1EPk7Lx9QhlIh7xcyq
KdzBgfjOsVPfgwLxG+R6MV/6KqRlbewnw2KG5WZk42B8v6gf8yVX5TrWxT4y
nAY0pBGNaUJTUmhGc1rQkla0pg1taUd7OhD/kFLpRGe6xEy6VzWuZ33sOSNi
b+Tm3MkheT679D0pyDn5pDqMp7jA5JjBtL5Lrl0DrLP7Hw==
        "]], 
       LineBox[CompressedData["
1:eJwNwwNXgwEAAMCvlpZtLdu2zWXXspb2/193710k9hWNJwVBkHAoHATJoSB4
9Ng1J+2zw3cv3XHeEUM+eeK6U/bb6YdX7rrgqCk+e+qG0w747Z0Hrtjlp9fu
ueiYqb545qYzDtpt3Bv3XXLcNF89d8tZh+wx3QzDZppltjnmmme+BRZaZLEl
llpmuRVWWmW1NdZaZ70RG2y0yWZbbLXNNy/cds5he/3y1qjLTvhjzENX/fXe
I/98MGG7/xrpHj8=
        "]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV03e8T2UcB/AjpIuoNCQjWtohKqIUigahKZLQRsvIXtl7j2vvspq2bLmK
EmWPaxNS9nx//3jfz/N5zu/3u+f1nO8pWKdh1QYZkiRJ9ad4SpJksRZJ44xJ
8nWmJHmZnGzUf2CNdTOKcUEfwwLr9yjEYX0lTfhGf4Vr2KT/yFrrL3mYi/pY
Flq/z238o/9CU6bqr3Itm/Wf+N26OcW5pI/jZ+sPuJ0j+iqaMU1/jevYos/i
D+sWlCBhvL1F8kPu4Ki+V/amEmn6JtmBMlwV929vunydXGzVd8pulGe2vk62
5BFOMJIMHKQ/L3KeCcHnF8uP4jOZk+RO+R+pHHNtn+xDZteek2cZRzZ9teub
rTuSUX9CnmI0WfWUOFMGxb3rL8W5M4kcenPfn2H9BtfzL8PYZn+X7E4F5uh/
ylY8yhUcYgCVmej6Evkxd8Xv6L+yxfornoz7ibO3N1PW4Aa263OZxFK9AYU5
rv9GS1rxrb03uZEd+jwms0xvyN1xZjGftOY7vSY3sVOfzxSW6424h/9jHmnD
93otcrMrZjrmnxX6J9wbzzHmj7bxLuhvcTPpMcMx7zH7+qfcx8mYN9rF7Ou1
ycPumFnWW7fmsXh2TI3Zl59xfzzHmCPax+zrb3MLe2Jm2WDdhpJkYlrMvvyc
Bzgdz4yt1p0oGzMTsxzvgqxDXvbq6bIHz7BY/0u2pVTMHdPtpckveJAz+n7Z
l+dZr2+TnXmK7BxhMFVjPl2fLd8hXzxfhrPP/m7Zk2fjdxnLEvt/y3Y8HmfJ
KK7kMAPJYn6ryAsxf1ytz/C91daNY0b1h+I5M4IU/azrB6z7xW/pL8hzjI97
1je4vt26S5yp/nScI2Pi9znKEKpxickx374zR9YlP/v1PbIXFVmqb5TtKR33
zcx4P2QTisQ9xJnTKd4HvR4FOBAzHvNP55h7e/W5lYMxzzHrdKEr3ehOD3rS
i970oS/96M8ABjKIwQxhKMMYTiojGMmoeH/8v3cpyKF4L+KdiXdUb0pRzscz
Y4d1V8qRg2MMpTqJM50ic8rRPnsZZ+PtDw==
        "]], LineBox[CompressedData["
1:eJwNw0NXhAEAAMCvQ4eO2dhst9l2bXZt1m62f3kz700oGo/EEoIguDecFAR9
iUHQ4YvnbjnniMnee+Sqk/b7acx9l+z01Qu3nXfUFB88ds0pB/wy7oHLdvnm
pTsuOGaqj5647rSDdvvulbsuOm6aT5664YxD9phuhplmmW2OueaZb4GFFhmy
2BJLLbPcCiutstoaa62z3gYbbbLZFlttM+yzZ24667C9fnjtnhEn/PbGqCv+
eOuhv975Z7v/d0IlWw==
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1HfAjlUcBuDXHhXaS6JFpbRF0UA7oUkl0SKhIhRpkK1sRbRoGBUqo1S0
0CIrK6UtQhpWdd1/XN/v3Od53u993nN+z6nSsn2TdkUKhUInf2qWKRSKGZdg
ij8vlywUrucwNslf0JMn5UvZi7Xyu7zKK/INVOJ3+Ut68ZR8GeX4Rn6PGcZt
qM5u+TUmGt/I4WyWF+Ve43s4jRI8Zm60ejnlWSe/z0zjOzmBf+XXmWTcnMps
kT9VH+RcFudz6r2cTkm+ohcX0tv1MWpDKrCcvnxr/hP1fs7O72Ewc83PUtty
IqsYyH9ZB/URNlKf9QznD6a6Plm9iZ+pwtf0zxqy1fXP1B5s4Lw8A0Pzm/LM
rs9VO/ILZ7CGxynFkqwZF/E9I+jjM0+rV7A338nz1Qeowzx5tnoXNSgwzdwU
tQVH5NnlJfRlrNyIffLb5A+YTj/GmWvMvvl++UPeSL/IN3Mk2+Sl9OcZuQn7
8YP8EW+mP+SWHMWf8jIG8Kx8Jfvzo/wxb2X/5VYczV/ycgbynHwVB/BT9pK3
jdtxEkWYYW6qegvH8Le8gnnGnahJaQaZe169mgOzf1lH3jFuz8kUZaa5aeqt
VOUf+XP1Ic7PfmfN1Ps4kzLZP3MvqNdwUPZWXqB2oy4L5DlqB05hdZ6HYizi
URowK3uh3kY1VjKA7Xmf1Yf5jXrpA4al53Jf9krtzK/UYi1PsJmyLKU3m7g4
+8XI7Gfu8/nx6rVZZw5mBf3y/1xbqHbnHNYxhIU5S9S7OZXiLKYnFzA7vaPe
zrHskFelR4y7UJs9GGxugnodh7Ah7372Ob0k38Fx7JRXM4QX5aYcmvXIO5d9
ZCjDGM4IRjIqZ2DOtZxFOSfyPuU9SL+nh9OX6bX0R/Yxa5FnyvfwUs7WnJc5
83JOZc73NqMiG9Mf2d/0stya49klr0mPG3flLPZkGX24JO8Ao/KOMNm9/wOi
5N4T
        "]], LineBox[CompressedData["
1:eJwNzMVSA0AQQMENFoK7W3B3d3cN7s4Riq/HpQ9dr2pnZuN3L4nnSAjhldFY
CK3REN7SQjjWVcbpooEb9lhgmBou2GKGftp4d3+ia0zQTSO3JFhkhFou2WaW
Adq5Y58lRvnw36muM0kPTdRxxQ5zDNLBp/0z3WCKXpqJ82X2zQ+//BG8R0gi
mRRSSSNKOjEyyCSLbHLIJY98CiikiGJKKKWMciqopIpzNpmmjxbquWaXeYbo
5J4DlhnjgUNWeOSIJ6r5ByaGIsU=
        "]]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1HmcT1UYB+CraGwVZcnSYilF0YLQHlkLTdlSQiVLEZJSUVGWirEzlcnI
0Gx2ZqZBlLQSKaTdXilt2tPz/vHM+33Pnc/v3nvOuadW3yGpg0skSdLdn+Zl
kqR/SpL0K50kNflGLiCDMfom/C1vYyoP6utzVH6LPAZwr7Ez2SsX8jJP6Jvy
j7ydaYzQN+AneTP5TNBfTUk+1Q+kv3wW++Qi0uTWlGe+/kn1cv6VP2Ku3InK
TNc/pF7Iz3Km2p235ZlqByqSTW+WGJ+oXkMpsridPcZfVFNZwxnkcRdrGRTv
rp7NUvbHe6tdKeC1mDO1DSs5mcX0oohM159Sm7Gc//SvqLexQ05XO1OFGfqR
6kX8Ir/DLPlGTov76yep13ISn+nvi7mUz+GAXMyCmAPuZ5DxWhyU18a94zd5
2FhDfpXfZRmD4/eM1eaQvI6FjNU357j8MbN5RN+I3+T3WM6QuKexOhyW15PF
OH0LEj7Rz2GUfDHH5PdZwbP660jhc/0D8UxyXb6VX4/9JbflFBbpn1avoAQ7
Y4/wqHwJv8sfxPPKN3F6rJH+OfV6SvOF/iX1FqoxNN5DPZfv5PlqNzbI09V2
nMqr3BlrbfwZ9UpOYCE92WX8BfVmVlOVXPpSTLrrj6mXsow/Yt3UHhSyJeZJ
7cgqKpFDn9hzMeb682pLVlAm5oM7+NK1eeqtVCefuxkWc6qex/fyRmbI7akQ
76Qfr17FieyOd+Bx+TL+lLeymsn6VpTlK/1whsr1OCK/QXZ8W3GeMMz4+fwg
v0lOzHucFfEdx76PPRn7KvZGrGHMT9yb0XFOxVkTZ0J8T7EnY1/F+sf8x3PH
GRPfeHwjsZdinWOO4lmZEs/o/hfwo7yJ3Jin+H1jjflL/pA18f/6GyjH1/oM
tQs1WMI9rCPNtf8B7Lq95A==
        "]], LineBox[CompressedData["
1:eJwNzkN2hEEAhdG/w+7YVsfGNMvIErKAZJANxrZt29Yd3FPvq1ODinb3dvWE
giDoozMSBFfhIGhwFpLEtz6lxs4lgXd9T7NdQip/up+onUkMz/qaRruIZH70
GbV2Hol86Ada7FLSCBhwV+nMIpYXfUOTXUwKv/qcOjufMJ/6kUGqdDZxvOpb
LhhimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454phq
/8ohnjd9xyX1uoAIX/qJVruMdEK0UU4G7VTQwYm3/5UnQtU=
        "]]}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{5., 0},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 21.213203435596423`}, {0, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.3242640687119285, 0.3242640687119285}, {
   0.12747938819483515`, 0.12747938819483515`}}]], "Output",
 CellChangeTimes->{
  3.662404459246986*^9, 3.662404598895645*^9, 3.662405222464849*^9, 
   3.662405718428056*^9, 3.662406297584968*^9, 3.662406330339636*^9, 
   3.662406417572104*^9, 3.662406805347022*^9, 3.662406839001141*^9, {
   3.66240688798071*^9, 3.6624069126876163`*^9}, {3.662406984717441*^9, 
   3.662407012861548*^9}, {3.6624070836417437`*^9, 3.662407106780003*^9}, {
   3.662407909635324*^9, 3.662407928564303*^9}, 3.6624079656102057`*^9, 
   3.6624088419917307`*^9, 3.662408907167906*^9, {3.6624089455614347`*^9, 
   3.662408976175329*^9}, {3.662409014175234*^9, 3.662409088225396*^9}, 
   3.662409224178812*^9, 3.6624105841259403`*^9, 3.662410646600896*^9, {
   3.662411258379698*^9, 3.662411325108368*^9}, 3.662411411686612*^9, 
   3.662411460658895*^9, 3.662411832776853*^9, 3.662754828152622*^9, 
   3.662755118997655*^9, 3.662755189829032*^9, {3.662755219952276*^9, 
   3.6627552330088873`*^9}, 3.662844577584013*^9, 3.662845109814867*^9, 
   3.662845252658106*^9, 3.662845545070427*^9, 3.6629925511403713`*^9, 
   3.662999894246655*^9, 3.663011663602908*^9, 3.6630118167070303`*^9, 
   3.663013359424388*^9, 3.663013546722507*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"stbands90", "[", "x_", "]"}], ",", 
     RowBox[{"stbands95", "[", "x_", "]"}], ",", 
     RowBox[{"stbands99", "[", "x_", "]"}], ",", 
     RowBox[{"stbands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"stfitcor", "[", 
      RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
       RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"cl", ",", 
       RowBox[{"{", 
        RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], "}"}]}],
     "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}], "\n", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Rest", "[", "stempPCF", "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"stfitcor", "[", "r", "]"}], ",", 
        RowBox[{"stbands90", "[", "r", "]"}], ",", 
        RowBox[{"stbands95", "[", "r", "]"}], ",", 
        RowBox[{"stbands99", "[", "r", "]"}], ",", 
        RowBox[{"stbands999", "[", "r", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        RowBox[{"Min", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
      RowBox[{"Filling", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", " ", "\[Rule]", 
          RowBox[{"{", "1", "}"}]}], ",", 
         RowBox[{"3", " ", "\[Rule]", 
          RowBox[{"{", "2", "}"}]}], ",", 
         RowBox[{"4", " ", "\[Rule]", 
          RowBox[{"{", "3", "}"}]}], ",", 
         RowBox[{"5", " ", "\[Rule]", 
          RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Max", "[", 
          RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.663012838289744*^9, 3.6630128595362377`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], 
     PointBox[{{5., 8.631442183117205}, {7.0710678118654755`, 
      5.701584410287954}, {10., 1.8830067331345521`}, {11.180339887498949`, 
      1.3303685348254821`}, {14.142135623730951`, 0.24878875292149852`}, {15.,
       0.2645975709407388}, {15.811388300841898`, 0.08984020233410818}, {
      18.027756377319946`, 0.0035976684129494416`}, {21.213203435596423`, 
      0.00037385521331162154`}}]}, {}}, GraphicsComplexBox[CompressedData["
1:eJyc23k4VOEbP377vu/7DIYZQ7YoKZ47SUKhtCmSJVmK0L4pCqVCQoWECimS
iJSpLCWVJEklxNDY913f87muzzyf6/r+/vn9fn91ncs0zpw5537e93O/qHsG
bfLh4uDgGBXk4PjPv8bjrN2XRdMsPYNcXrntWgpfBKrGVir/Q1FXhtVO/6Aw
/r8ec13OfPU+uf//9fGj9U8bE18Ig0fXMwt6pSGQFzVftomLw8Ulb6qmFPQg
KrWjeMRFEhzqdN6c8KGC7xueZZu4pUG0BMU8atGEO49916/MlYGt7896Os2T
QeFPZwVnqByYRyqYVLSpwHTa453aagpAa69kBY8qgFxqiittQBE2bSTpaRyQ
hSt7KvuKnijDI6rodZHrUhBUuCLn1k5VML63jGPITQIuW9VX7aGSYG7y2pvv
pSIgZLCDb40/GW5d8z/vfV0QAt23t77ZpA5PDGfq9F/wwYmDR6YElmvAkv4i
1+J9PGC5HugLwppwM+7RC71ELsiwkhVtH9WElNACbtVeDijlSOQNqaPAsib1
ncX6/9CJTON1b9O0IKPZpf/gwjz65fPLTDRCG7oMa1i9M7NofMAIOHdQocnX
cmep5wzKS06Y+gM0ONDyk0N6YAqJaklPX6ToQM/OI9ZdpZOIcsRCrGNaB2re
pDl1vp5ArazQJq3fdOBUFySRO8aRtaZLoWKJLhiu8bmjpz+OdiGXr5+j9YCx
aL1cIGUMSZ3yyDu6fwnsOm93WF90DJ06I3f9o5U+ZEYnCramj6ILWS0G0nQD
0PNWz+RYMYo0bDSCuTkNgceKskamdwRt1+sN/O1vCPvWjUaJZY8gN83iV0W/
DCG4yo9H0mcEVcy73PllawQ9dhqhfcYjiMWca/lXYQSxyxaTr/GMoKHXxqY8
BsaQcuLGkolfw2jjWUsVjxvGkH30w21a5TA65eS084nIUphfKpiXljmM+LiW
a7kfXQqq7iIXf14aRj53H0r3dSyFoJ2WYflHh1HiDrprkIsJnNaYWdWydxip
Dp/Qta80AY34LUap24dRadeXo4nLTCFU9LyaqP0w+r/vV0XfwL1cxz///z5u
O+os8HFCEDhlrPzCw4yhJyvwbdleUahTrEm/ek8f6j/MxAQfkICKkbJ/RWk6
MGUQOqGuJwXqfSeO2EdrQaR5SaVNszRY+FQG8uzQgF12WhFqV2QhPeWA8XM7
EkSDnUiirTyc9B9wPfJZCfhVtXbe51WEjGGx76uV5KFxUTdrf4MSZKboSXgO
S8Ni9Pz6+1EqoN8Y/M9wvyScnjlXcnq1Gry5qh7z744YODlV9o4tkOBV3uT6
g7LC8Lxme3BEGxmEVxQqJCoIwHhPzz5mlTpwMJ71Zp3nBX8WtXFo1gQcOjoF
Yp2HUd1k3AZqggg4NDhO2/AYws964b+7J8Vhvr37h2cjHdBe+tcYhiSEKxZV
tAZrw+TpX8frA6VBrka/apWMJiyesmHmK8tClgmdccKBDA3xSV11v+SgyYZh
ztuoDOFuAT+Y8Qow7p116SKHAoRt6Fysc1eCsDUZoc/zZMBm4pfSQ1UVeHbr
wXrmgiRMurgbXP6oCmuDrj3LyxGHA++qm/MSSHCj+esWaqcwdM5uX+mVTYaN
1TvX3WwUAEPNDPWvl9TB7CY1YECVD6wHPp9W/WUCim55+pxbhlFczymt1wqm
YHrPX3/lxmG0iqwp0UYVgfRsx6CDHoZwujt5MylCHB4eVjB3C9UFL06+6hcX
JYE/MDg67a826Ksf3C5uJg3AfGhjc0gTGuS/yYd1yoA3l97SdVlkCCuvcNqb
Iwda+74c/7xVBSpOXbnFt10B9n+a6fh3RAGqw17kz2gpwQsF1dS1wrLg/2Aj
d2GvMjBn7Q/cs5WCIq76AJnrqnBx3PuOi4IELPK+28DnRoLg4DN7Wu1FYFLm
O3lzFBmCtS04240F4SPMn3IIUocDSk+bcgP5oHBQe4vJRxOwupHa+m7rMFro
bZxrETSF6IgH9N+Ow4jCpDk+oJpCxvjlrtsOw2jCJPBg2agwnOg6n3v8qiF8
GvklcGa9OMhFdIxdq9aFiY9jFd+CJKH24dIKKpUKdqPmtYWq0tCycvbsw3ua
8Mz7duG3ahlo8XwhGPGJDDUfP/EVX5aDVT9vVuy5qQKtohkn5FYqwEjG88xv
xQpwQOABd7ygEkRFNt/et0oWTvJFHTH6qAz2lwvUsw9IQdx3LqHtR1XhTQx6
O2AuATbZdoImViQItzcquHpWBDg0bki/P0qGrtHT0d+9BCHNka4nsEcdxN3I
8UWJfLA3yJlRWWMCnz5v+/B42zAq9lvY681lCpJc548XOw2j1r2by5eRTWHo
rdrhwA3D6IDP4h+SgSnsVh8M/UrUj02VEhrUFmHwZ645YXHfEKanwv880hOH
3AidHtKQLrx8ynrm7SkJ4omiW8xsqNDSevv0WQlp+Ff+O/dmpSboXeI+FVMq
Ayr/qN7fuskwtP17h2u4HOxUzIg6VKECf7/mBKTrKYCb8Y2+S18UwKpRvWDX
nCJ070k5ZLxFFnhNsoxGGcpgPaY3VHdWCjjWqn2f8VOFMge9DXscJMA/VLin
zoQEAp/1eTNTReA8bUYk6iAZbnOVP489KQg821ZzM3eowx3dU7TOHD54XcA8
xPvGBJS3VhVqE/VSPC9BJW/RBLIlz82QiOfd9H5v0EkVU+CSl7j8hbge7+5e
u+GjawrKAyf2mRP3h5SWn36rsSmI1y7hO0hcn3Aer9lfdcIgo1GSov/EEERO
NDbYqIlDTZTdRi4ePdDQYS57sFMSbFN3P/iyhQpkx02tfwWlYTzF6SWpXhP2
ppt6eRbKQNfrFDvxETLwqLk7PjomB7IPvU8mfFCB4RUPvTy1FKDwtpTjdKcC
6C3/FWk1rgjSRY1xd/fIQp3d4yubypUh5skF732XpODZ7ANGnacq+G50aKNs
kYD51r4tcvok6GL+WboiTwTe6uYKdu8nQ9qNJULj0YLwrLV+0GWrOkioJ3/l
ecIHw46PnWivTCBSeKfbHuL6rLJzm6qfNwHXt4pDW4jr47nuid1tJVOIDfd2
4CfqxeRa97BoHVMYH42W3U9cH6heKrhgaAp9OUgvi7g+XZHpm0tNTOHMuzuc
iDhm5zX2eiJnQGLI3GtFHHarFwPOSjE428JaFqv60LDDX910A0n4vfz5ltGM
cQShj+w60khAU1sZHWUxh1aJsDJyVmnCE4Erqu9MOIHs2yKx/R0FNK/f/XDx
Mg+MjWkVxwtpgVjOgAW/PlHnW6yi98RQgJ3XXL0mQpZd0cR5TfeSFdPPXQPn
tVQj84fdHWSc15gnb1+KfaSG89qK/Z0rqtyUcV5L6dz479MpeZzXxFTkrgW2
SeO8FupcoDVB3K/svHarsUH6y2MhnNf8bBsH84z4cF4rCz39useOC+c1z6+F
OpWti4id1x7lPpX145tF7LxWoVzzYtp3ErHzml8XOUmhaQyx85pZ69nD0mUj
iJ3XUm0CTaush3Fei3qlPH0xeBDnNVdOLgn5L/04r43OyB95Wt+H81r23abV
W+X7cF6Tslz+2rmYhfPa45mhts+xLJzXZrNFhs4Tx+y8VkyKOmuTy8J5Ld94
puFhCwvnNanGgF3lSn04rz1qqk6W3NOH81q6zjer2KI+nNd+XljOc52jH+e1
m9n3pn469OO8NjkkK/MkrR/nNU91NGfF7Md5ze9Xrv+A4QDOa8J1j4KLDw3g
vNYf2FmT8HgA57VwPq3Z0oEBnNc2/Gg3CVQfxHlt2eDScBGnQZzX+u75Dluf
HsR57fiPcJ5zdwdxXtOXk/6m9WEQ1ZhbpfLEdqHw+ntTv273o+Avs+3PVo+g
4E1l1i8fKwKP7tzgqqEp9Izv0+j5ZnWoTX7QEftlEQVvrll4aUaBvo83JnQ6
uMD9knp9P68WpKS/433nxgcH4jO5ldoowM5vO/wNG3PlKTi/7fgYSZqb18D5
Sp3y6gXprCjOV8y0QO7+zQI4X2WmWW2jkXlwvpIyoqWG1HDgfJVu/318y7p5
xM5XcWsdypLlp9GuXz8kIu5owFCaoqSGwAQaqs67deCMJkStWh9rXjSK8u+4
COa6U8BgqXn9wvAwuuHspa1qogWhKnIlvb5DSI9HgOEvoQ2xvcYuh64MoN7c
qFX8g9pgKjTi0G3Vjz5Zdd4araeC0Yo0xs69fWhXW+OR0iIaOB8+L+H/i4UU
NtK4S67ogHuko5jSLRb6V7j9IHcgHW5xWw5PRLGQOL/369t2umDr7qU1k8xC
TkZNrw+R9KDsa9VerkoWWu7eirTm9MAkODlSf5qF2HmxaOjR0x9lg4j2l3Y6
aqgdQS33r0cjU5XBVqYbzChDyJC15V9ZkyyEGO3MlLedRHqyL9OEWGSYdh0z
uSiwgE5/5NeVrtOET33XYmaEuGBcS+3XqSHi+7pR+jf3EC/oenJy8c5S4HAc
KYslKQjBIU1prZspwM6nlABb+oF1mjg/Hhhd+mAXjzjOj5oHGlaZnBDE+VEz
sPeyoDovzo/r5T7mz5/jxPmxD+X2al5YQOz8uHpv8t4svhkUeF+HxyZQAzZz
9FVZF02gpKiJzqdrNUHlUSLvK4sxpD1qcqmKRgGl2rHn25xHEC137vq6fxQY
k1wQJY0NIZfNaRGK37Tgz+rd9K2zA6gzqsj84jNt8MlSXBcd1Y88FYQGZxKo
MBGQ0O2b1Ie4nxeVfjhGg29JayJVieudUJZ2KmOHDvT+yd9geY+oFzLvUYgx
HQSP8ZerxLDQ+HTA+04ZXXA678IfFs9CdvTEslqWLjTtW3H55hMWqtuYfHHu
lR6ce/tmgaOXqEf/zcPVlW9CPxcMooaUDTxx819Qw2OXDX5K6gzv2J3lZ2m9
yIO/tZRqwQc5vDtvbRkZRQqpbfmRfSqQRLm10jNpBg3fPNgxeFMD7FlGtesc
OcA85NDvolgK8Bfd3uNayg1VtQpt+8W0YHPWD/Xetfxgsah0SOcZBWz2ROx/
/F0Iyu3GjOK+agJf+n2L4GI14DNz7d2mzw03AnadSjchg/XppzoMGQ5ITNh+
N0tBHYzUxZo1VefQs3yDwqkFdUC77Sq2mE2hDdJXVBnNGvAoxvf58L5xZMvj
4UIt04SXSSNxvw1HkbFzWNTlROL31m06diN5GAnN1pWM7tMCXmeBMugZRDxP
Q+afr9eGmWYy8bANoMH3uywjNYl+fdPzLa94+tGq/eXr+/ho0BJOE9Bc1YeK
OceW3+mjwW6Opx6sGhZK7yyKfv9GB2bvnRsvTGCh/g3MzMS7dGI9s9+kQ3w/
dNldZbvCdeHA17WO47dZuP8orluQynwziJ6Em7XFW7Uhjo5fW2yT+BlmEl8T
boUNoDid6xtH06Qhx0R4PjJsAqUElum+9SRD3KrkNgHNeUTOkdx0KkoTVs/G
be64zQlVY0Hfw4l6F578aOdNTl7I0rlx/iO3FlilXhievi1APEenfMKDKMDu
d+bNzV9uCNDE/UhwBWPqV7047kcG6r50JMgI4X5k8+7QPdvu8+J+ROGTvsep
bk7cjxinXViXvWQRsfuR+Pib53ZHzqCw2IZT9501oIGH3z5TeBL599688J2m
CQzrE+NRUWPIS0nLoVGUAl7GjZ5WkSNouKn2w88uCjDd3HcdVBtGvbO+3cHl
WiDUIautbDKI2idry96naYOq1j9qQH4/0uVWS144RIWxvV27Kgv70NbczG/b
3WjwYWr1kCZ/H3IKaimXRTrw2633FTOfhW6t5bmfK0uHm0vdVTIvslDPyJAj
zywdQjJDJ2uvsFCt9nhxcIMuhOb3HHN4xELStRMFe+/qAeXn70vm7SzE7q8s
MswOF+UNout/NuqucWUiButUSqXlIortp1tGKY6ilDd1DNIeZfhAtb/+6fU0
4vmgFOJhoQH6JfxmYmX/UNHJBuFmHwocY6TqWjlww7if/qcGYS2YzGi81vKZ
D66JJqVtrKeA1H5WeaWvENzfE87nOKUJr+1lj08dV4NB51xxv7vc0C7YZlav
SIZZ/fudNoEckJPfcvHaHJGffpZzVBTMoa11l0SCOtTBMrtYRuTeFHKZNklW
r9CAgw8+sUxKx5GKD++0Xaom5DE2pjkHj6KgY962t45RgCI4ezT0zTBq1Eoe
jNqoBcf41NsdtIdQyi4Ld+kl2lARsN7VYNcA6jMPeVEtQIUyxXlOIc1+xLf9
4+jgXyL3i5xOvOTUhwSGO7fpfaLB5+mA+zmfWWhnykA15OqA6A0Wik9iocNn
SEL10XSIdmecWhfNQipi7RanfXThXu/58XfEesXuXwVXrnaofTmIpuJNRWte
dCIOZoGm4nR9pUt5XQTLbxhJcPfEF36Xh5X6D2zzlKeQdUVJ8AMfdfA45nhJ
eHABlTx44T3PQwG3X0mVkoe5wH/fVuMr8xRYmco4UvaXF1wvmxR4D1AgZcmk
9WQBFQR2vX2YcaoPFda/TrZKosGAsuM2MxYLfeX2At0wHXh6yuOmcwYLRXfG
t5g70uEerbzdnDh/Lo5em1cGusA8vuvz+UQWGvNa5rnJ+RtiUJshqFSRYWy6
bz1j8i9qd2oQuXtbBKrULk1rvhtDhi3q96kuakQf2tcx7jeLqpJKpb8OacCZ
md0hAq85oISez/nyIQWuZ2Umh2jwQGjltNu4qBYU3u0qmCrjh6/DqoKf7lDA
Q5pbQU5AB5o/yddrvWChDr2j9lvbdOClrCgp9CoLeak8XOn2mg6MGFu/68T9
z94PuHLWe2ng20HU9U3XcXPYT8T4yWFbICzGUJnKNv2Q2o8YJZniJKI/t172
J+e50AQS8NTZcEaJDLuW+C21LZxDo2E5JylemnD87FWzLf6c0OIiKXy4iQKb
5PISE2p5wKBBkSORXwtoGubyHL4CEDR91ebBSQqw9x/WqmtXdZzUxPsDi7d1
6v0UJfD+gJB3mEqJpxDeH7C2NVX618eL9wcci0lWTfJceH9gZK8G60TEImLv
D6wZ8c5qqZpB04tZ5tutNaCyRVBu/4pJ1JSyf3uAkibklDYUHHo4hs7pp+nt
4CDukx0m5vvTR1AT66Hf/W8UEEJrZwOMhlHRxg1JKvlaEFH8dsO88yByf7Tp
WGCcNsR/2ScTVdmP4qbvB5zxpULoJ94H51/2ofCMm75qjjSiL64ckBPvQ/p1
h3Y0GOnAk4N/zkYUspBHW4brWn46DCXNrc6+RBwPGkld76fDxXsrAm5cZiE+
rWzjtW90QSYy0obxgIXMuO9aqSTrgdB5zqrAnyzE3u/oPBV4QCVnEOlffftH
M7QbccSdk1E5N4kWfyeIZzwcQdEPSHE2V5Rgn46mFd+OaTQufS+WKqxBrFvf
YzfY/EMvPe7nKjhRoGjdLYkSOW6wsSc32glqQS3pY31DMh8cCpD6e/YrBaZH
0zpq9IXgQq7N6jx+CmRoOCisdFeDHY79l507uYHne7qclwgZMkUtpflvcEBR
Wcop4QEyvPvFf4Q5O4e0vpeV07+owyHD8pAtbVOoxV/ApfGRBqwZbF2y5fc4
uiDb8u7nZU2IP22xOBE3iq5c/knTCKSA/yP/Os7WYVSy8tTFTau1wFhcPLXW
Zgh5FmqIV6ppg/+tszZ8RP/iPzp/cu+cNhhWU85XGfcj/w3ba4N/UCF89V/m
2p19yLintWeEQYOP4gy3fd9YyHzsovfcLR04yEUzYaQQxwoVL3yP06HXq8Ne
hHiek4Q0OMS360LqDyvVZqJmsfeT7A7HpG2uGERxFgXV95o7EMeJ5ATRv6zK
2J0+eXzzQ8gpzOeYyi85aDaImGh/PIkq3h75BzrqoOev3m53YgE1LT4tCevV
hCTv69nngQv2dVxpPjNJARHlisLHBbwwJxLwXWScAgsa4YpH71Ch1CBF80tM
H2p9U04ViKaBmo7ffv4R4nzcOX5379WBxYocpmEWC204oR/bDHTYuCy6Npk4
/xPzOoKbNHSB5ss6OkzkE8/F1UtH7n1Fwy6Jp4xqVRnv2zs474j/RYxR2w56
pCAskxp7t8ptDHlccq5qy1KFWY03V3Q5ZlG0Svj2/TUa0D3yViUnmgNcVr0I
6k+jwEf6nZPMfm4452MtEE/kvXOU9t6hM/zw1t6kFIh6dVFo7v6PGRo8cbEN
+/uKhRhRsiyJzzqwY52S0mIcC9Gerh+afkIHroffQj8SeYm9P9d8z9NUsGYQ
vUrMXLZPoB2FTytPSCZyMqrsq2PeXZ9H0y3bcmpyNUEgNOHA/q+c0J6c8ja8
hwIFCk80MlfyQoAIb8R/cvhBmZUqOx10wFWSmn2c6L+b833HRCl0iFo2cLmO
+H0HJh5eDuXXhcOMCG5J4nwsl+74qr+pEaV4p0upRmsyHnfePNgjywGUZwe4
eI9TAFak23w8yw2x17RVzhP196SFE/VCiQ78+/00IJao94+Z57YaJtOhQSKF
cY+4/pStKa1pD7hA5tER/UJOLfBXrbZ8pckHHx7SZyWZFKhaP0G57UYH8le7
pbzE6xU5p2r3zXHAoy/BAUsrKLBLJbtocRsPZLxwC0sT0QKuxtb8W306ED+a
YytO5JX0CInoVw104NN4eOwUUT/Y+5mi48ul3tcNolMRd/lNLv9AjOkrFtzP
JRhXWCL8TEOiz77p0v+qQRKkljv+a/46jsJZPffXskjwWqvxV8/hOSR0csZQ
z0kT5KrFdK86coKJp/qc4CcKlH+lPr6SxwObloya6RH1Qbn7Wl6EnQCsMN1g
IhtB1Pv/7p9eMFuunnheE+9vJvilHFFdKoH3N3v36ztoXRTC+5sppTFbi8X4
8P5mTbaxvY0RF97fHOH6UT30aBGx9zcNhY4WneqeQebPRG8UErlqUrs666bT
JBIc2braRFoTToktcS5kjKF4s++pqTOawNL48LHwwQiqmcgoFflMXPci+kaR
lcMoabrywGi2FoSfMa9esmcQqQkpfK+I0Ya4QFIovOtHVmP9W8CDCtHaN9bE
Vfch2dQkA05bGsjclZzSk+5D6Ueqcpbo6oCaPYe3dxELvaYHmUhz0KEvwvua
aSwLpfVvCv3VTYcfSdutRIh6rkU5ebCgQhdeWeaIn80j+rU788JTV/WAy3+7
36VW4v//d7/WNVe45tO9QTTrzQuJ/7oQwyXmoPPRUVT63eZo/pERROb+WIrU
lWAZ/WqKOmUaNVxsQlojRN65bbV8QOQfsnU9AxnWFNh4SYl7eI4Lkqbal5cS
66/hb/u/9cf5YFC8MK/jOwX6nk6F2UkJQUDxs7yn4hQQv+Lb89NRDfbq8y2o
cfJAEpw5/4iXDMV3h+zuF3DAMsb04dpuMuzYNGk3QZ5Hse0N8QL16kDfNW35
bXYKKVFCiug5GqB5uaPr7tg4Kt//qujuBU1I/PVTPvLOKEpLVrjhQ+Tewmer
5w52D6Mcm+CWUnMtODT2xHTNtiG0zvV6T6K8Nrxuq8vIOzuAdDa+/lkyrg0/
t23le2vej1Rs0x4bNVGh2P+SbbVHH6rtbC5oKqMBz7hMlwdx/XIzvj/Zfl0H
VtzmftZD1OtU74vJpqF0kFzbdHg+ioUaBdbs2easC67/Il50EfWevR+egqSN
FJ4Pol3S/eryXh0IUn1ZymmjlYsbP5wgxQ2hfZaSvQdc5SDbcMh+/uQkOnrU
m5dTSB0SPC9eZK1eQOR3pSvCv2uCcY5McqUWF0SO/nqjOkaBQ60rPjxM4IUa
Z511pCnic6tWc6+4SQUWKJIk4/rQgcqSIVY40V/y8EbGjLOQpoij/hoPHWhX
vvnucTbRb9TO+2SvoMOmL0LGX4n68GzWzv+msi6YPu9QMiDq+Y33tbcYn5sQ
dJgech8hMVJK1NwlU3sR48zieXsmPwwJ3zdeTyXq+XarlDJbVXiradBt834G
Fb8YJ48WaoDCgYWRqQAOsNzh63fqOrHOHiAHkRu5YdCu5W0yUc9Zf9x4+z35
wWBv3dGaIgqQ+KaCXo7S4GjHbQPPKhYyMPVecaBOBzSzU880xrPQRU6FdzX5
dPAc7Ek9QtRX9nxhQ6O4TnPVIFL6+lLrsc5vFC4425UUxcOgW+ub+O2aRxeK
9rzoTNGE7BLJPffLOUGkfjZP/Q8FFFoMUboaL0T/Dv+SSdTP9lcxAc/W6kBC
wrl8+n/y0Izphx8qdJi0J0kYEXk2b+zj4HMOXSiaPG3qR+Tdwxy/LRZPfkbt
OjmJGc0UxtsX6ZcPjP5D7m6WJ9WCKfDzpOoKAV9ucIrVfVtF1Nd+VvrhPwU6
kHpDIj3mOgvJLHU2XLxKB4nHq3NDiOvPuCH/4VscFxgH/rFbRawvjT+tdr7g
44PzH/Y5NfylgHbSm8XArXQItG81UCZe73BKN+1ZGwfwRJWd03xK5KfdmnfN
LHhAzijy+25i/Qg5ozM/3aUDa9u+ulYQ9ZyjoW3P1Xd0KL15eQcvUc/Z85jq
Rx7aqe8G0d+tekeTunhA/tSZ5ne8WrAY3xh+RIwOquKuH1WJ18vxqKidNOKG
kz2z/jlCWtDyfuDPjbN0SMoM3qpFnM8sWa7IficX6Et/4bo7QwGWvkeRgC0d
ju7s2u1N/Ny4R/1iPj8PRK+23+xKfP81+07I6j6ng29UceUS4vqGedxQBF06
xP5zPH6A+H6zJ9RcElO5wWwz9YoU8fqNN4tPeqYT5zOe8uAP8X7RUoq9XjVc
8Ojqtucsbi3wXNC2/+xNh7ffbD5PE88jo4XCqArhAbHgla0Pif6XPW+aJcVP
Tb8fRHY7Or2yFX8gIkisXbwlybDtYgSNzvYhGA/MyguXhKPLz+d5Px9Hhht3
h6yvIsHEHb4ny13nUHbpsdkTNprQtXcjRc+KE65UhzeuIPrpA0/3Voqk8sDL
CKOd3cT6lVgDYWtXCQD/zzIFdIEC7PmWXhZzY0+MJp4/ae8MbuABCTx/In+6
5DqeJoTnT3713QepZD48f+q9cFdG0pILz5+kD+bOv69aROz5U1LAxXjWxAxq
TbR6u8tcAx5bdd1Ys2sSUdLeP00R14TAwbQy97oxlGIx5WI5SfTn8Rmr3ItG
kOWJm+6VHyhQon7LoRsNo+gNM65ud7TAICyqo3nfIFosnRXwuaANUldJcrSP
/ehWsPj7jF1UeN9icYH0rg+130i8FmJNg0rGGSMk24e2fgxw+knVAZHgr2d3
PCH6Vaet6sfndcBnVnX7OWL9qgj4k3W2kw5Nk+2r3hLHxZq9cd5lumBbm2/8
h8hTm4Nzgr1j9YBVLkJJ/c5C7Hna4duHBHSI9av9k+aB+uouxJH/M4V/3zBK
bM7IL9o1grb7/lv76a8ipNGr1xQITiOFL6d8//5Rh0TlIyIWw4vIfandtwpL
CqgscZ2PHeSCfJUtf1v4tKDr5cUpu0CiH/mk85HrJwW8k7MtRXiEgNkB+UXS
FKhZM/Hxoa0aGD40p6ZK8MDusKFVLlxkIKWRY/mfc8DRNzmhWp1kSEj5uVPZ
ZB6B965TR96qQ8BGudsGxHk857jf0ZytAd98T0e1LYyjJsVlVKEITXhhU7a6
NXcUZacuc+b3pMCMfVigSd8wItf7nfFfrgWno6SK43YPIfOCj1/+SWsDZ5EN
XTh6AAnMZ4vsHtGG1IMP93+x7EeHqyu1Exqo4NRxOP2yVx9KaG+Stimhwbfb
sl5/fhD931T4Tv4EHRjNXB915iYLfbx4MDI1iA7aczSB/zwvw1Ff4uc26ALH
77PLDxDrF3teSTdYL3u8fBBZnRZyctQh1q/RHPXXqycqS23Pdum6DiGFcc27
k/JyIGykNRXjOYn0XG5+U5klQ3Xby93mWguoRKiN2fJZEzjsXOJ2KXBBrwXX
zS0jFKCXH/2hG8kLzzPX1CRPU0DwVs/RG0lUKOQM8VlxrQ+ZvSjevOsUDbg9
XaydJ4n87jn5dWSXDlw7/fX64bss1DHwZ5PwMjqYSDwqnCLqQfOxHzctFXTB
/faLmgZivTApEnKi+TahnHjvTz1RZMZpdYvY9Z69yCO2/gZNmh/qBTh9HUXG
0FHxtOY9SqpgQPGJayqcQRm84Tmc9zTAOD/55203os+siH2oGU8BMwmPfS+q
uKFdMmg8mqhH6W9Spf1d+OHB1Y3bTxL1l8U98cVgiAb6XZrbsqtZiHlJuEOl
Vgcs5u4fBmI9fU7993RJLtF/cyZ7OxL1Dc9/ldajVcT6xcybO6te0obaN+48
eVCYj+HG8BQsQ/PI9fdSN4jThJDtzq7WDznBw6Eq+ns7BepLgzaoSPCCXG1I
/ksuLUhRMJL2tdIBcs+vpfz5LORPUi23UqTDs0Nr1uwj6uvbkN0kjwU6fC/k
fiNPrF9zK754vvz6D3FEcaXyBVAgT83N+O4ObsizTXNwJtar7NU2agn5OlCw
PookksRCa3eYqfrE0iG77uz4TuJ6X1m5rSYsgguK1q+91r9AgQsVZ/1WTvMC
12+Xd7f7KLCtIq/vyyY6BH1Qb9AhXr/3eXWURwPxnIxLxp54TDxPnF7pXw14
oH/pg84CYr2iNzdk3e/QgU/t6LwccX7Gk9UbJ6vp0HOI27WeOH/2fHzpnc8b
eIj1Kn1ZwAWZZh5o0itTeUo8vwbPyva3CdHBYIfpo93EetV1d6e8IoUb+La1
OnMQ65XgaFMDx2k6zAjx5csT5/P29ZYHvRu4oHlD/awicf+pbFl3O8iaDnJ8
XF9PEj/niNkTsX6WG5be4Lpzgvi+p654ciWU0kFrMlVkgfj+7l4I57tPpUOM
I6fZLeI4JNl9g9FVbkgX3aLVSHyecMYtv3c36WD0V1O1ini/rcXbOzjKuKAm
ZTG+ifi+rmmKmZntoUP7vfiGBeL5u3Lcu2yPDw9Updqv0SWuP3v+H/Q7V8uT
WK/C/7YKbhbkhpBopcYoAS0IsMzK+3iYyANHVVZwE+9/+o7sMQsLOmy3rDZ/
Shyn1rcfivjNDZoBR0NuEucv9uMXCgjjhtez5111ifPrFPFfk3yNDnVSkymX
iNdPBP2U5HP9z3p/b16MOKa//PPglh0PWKat3M5DvN7W8yfltyU3NHUtLltD
rKf37/JNGZ+nQ9oVIVtT4vVlAseq79jToWRNl/dG4th7bWecuCwP7OuKNl1C
/P7mzb9dp3K5wXv+7AEb4tjwG3L330cHQS5z40ni87N9w7sEruir9YPo//ao
bF8w3nPn8+u/xtgXzHsqfpf8uwT7gvsPC+rlXGnYF0h4SOW8XE/BvmBQ6qBJ
E0kd+wKrbD+rQ3xq2BcY2V81dryqhH2BGNMow+CzPPYFhjSeGIEsWewL1F64
dPokSGNfYOW+WF7cJok9qG3NpfOJKyWwBz1Zd25rYJoo9qAcBQ6GGyyFsQeV
mVV1KBwTwB60tzAANonwA9sXWDI36Dvu4QW2L7hSWK2tWc0NbF+w3e/oQkwQ
F7B9AW+Bb7AFlRPYvsAz9u+XT0IcwPYFxRffPN6JFrEvOD90yWbhxDz2BRcm
+bhK+OewL6B7i14oezODfUGB+u6X/2KnsS8Y0LZZp3t5CvuCmKXfNJ6nTGJf
cJOhx9P2aQL7gohVkomP1CewL+iOe3va9sQ49gWqvHf3PR0dw77A+/T944XB
Y9gX6Cb80JDgHMO+oLFc52fU3VHsC551/du6e+Mo9gXXNubMcPGPYl/wptIz
Z9O7EewLLhx8yXnlygj2BVHF/h5H3EewL/h0Ndw5ymAEsX1mHqXU/3WdIfaZ
c9Xuo85DdOwz462qbpnTtbHPHNpk2F8Sp4F9ppOiU4P9LAn7TJWHTsM6BirY
D5jcPrrahKyIPWWl3eAyus0IYvvJkKXONlcajLCfPDuWbzDtrof9ZNPxp/Ev
l1Oxn1xCfXw92EsT+0kH65aWl9Fk7Cd1Y841/pBSxfPvx5fvxdt+UcTe0bE1
JEtx0wiiP91PetwhAVK3n7HgkQEUzDyXLU+WAs/cee/qFB2QmrzC8wrJAG9v
oeRVQy0ol+Mhx3HIwaUjJoKiDeoAQwtL3Z7Ig6JfCDl4Sg3Y80sJ362b75qP
ILaXLLEeXnnP1Rh7yXcjug9uk5dgL7mhcLcZ1FCxl+ydThwUbdLEXvJHS/ra
qkYy9pJXVTpHzl9UxfNJqy87VqkYKmHf6NOpctx8+wg68epJk0SOBGyfQ20v
NxrCl8Rk3sE9UvB+ZL5pHuhgn6LRyS0sA326Msdn8rTgUmGi87ZaWWjUHfBd
oa8BXfKUjOlT8qAu4/3+xGESsOdNsX7LClxhBM9HjuX4FQiajiC2j1SifteL
v2OMfeSYfO2B+Ygl2EeOq6a1nRanYR8p4RAks1qMgn2k5frJJb3TZOwjrY+3
9w/VquL5h4RfRKjvbiXsGR96H/PasnMEZdduLYBLEnBRbeyFUawh+HieX+Bf
JwVJbvtN9iTTYZ9fv9PdYWm4Ufdn5cJfLQhb2MUqz5OFzjc737LcNWCZ3vKt
Nl7yYHR0aENNKQnY+9kLtmu10ZoRvP8aahnr3LR8BO8nPrNluK81HkFsD3mt
j/9jeLUx9pA7e3wfOpYswR4yc9I44LYJDXvIz7cLzJp1KdhDDh11+motoo49
5Jl16y6I9aji/UIz15TQdUeUsF+M+XbudDfRNzyzy0ltOSkBbvzvJLY+MAT9
9SdnEldIwaxMawn1DR0mnZ0FDv+RBrXrrsfGBbWhV/NVSWCqLJi9vaj88IgG
7C4Bo4Et8sB8XCDa0UIC9v7PyYjjrU+sR/B+RZt1Cu+qFSO4//5yrvbFvaUj
2EOqLybEdRuOILZ/NOGQOJr8zRj7x9Jym++Zn5Zg/6g2rrDCaR0N+0f3AoX5
SnMK9o/uPR0afHLq2D8GrR6oezapivtPDkFTZ5sIJewVN6w7seyR2wiyEnG+
ln1IApp7IpdyPzeEhIojR34YS0HJftvNht/pYFHD7d32UxqG+lTuiSppg8by
sdS112WBmn2CXydSA8JOVKeDozx0vVrvGvuXBOx+gjRz5cuBtSM4/zaGUo4N
E9eDne82yurwbDcZwf5RzTNv7XWjEZwPbq63QsuI6/N/+0e2bzQc8CsXs+Jh
sH1j8OWM86VLuLBvtPZReXTSWBb7xnZWheDPWGXsG38m3jQtEyBh3xjB6a45
qUDG+WNz7EpTbuLzsPNHjVDxiq3Rajh/mB3YutI8RAXnD/4tLW5ryhVx/hhr
W3XZmCaH80fq+6nHf25J4fyhNk9fdBITw/lj+glaaFEQwPnD1kDa2TKRG+eP
ytx6t+N+/xA7f4y+GQtPa5jBvjGpTfBlh/EE9o2BnBv645pHsG/kGm4+3ic2
hH1jTvuL2RWH+7BvbJi8VSqp+Rf7RpfdFzx23OrBvvH7lNVdcjIT+8bch2i+
SJGJfWPD3/mR8uFu7BuPVH8mx4kxsW/cYzlLbd7KxPlDbM1p5skaJs4fXrWK
LrprenD+yB5Zk/z1bQ/OH+6SinN0j16cP+6lvygtHuzF+UPkw3qp4Qt/cf6I
7Cm4dFKChfNH1T0ThRCiX2TnDyp1+m+ybB/OHxfUuSKFYvpw/qjbEKpkvtCH
80ekuZrsyr39OH9wdP80XcXox/kjK8dc/4ji/3yj6DKjV+t9BnD+aL/H0cSR
O4Dzh86FU3kxfQM4f7i/NFG5pvk/3xhb0TZRs3MQe0aFBUvtwZcKDLZn5PBw
U424XYvYntF7sPyxDYcE9ozD05NLrjYrYM/4bJf/Nbe7qtgzUkq84rm/kbBn
DOfP6FlN3P/svDP8ZIvbjW0knHceyZ3uWJeoivMO39r7zaV0ZZx3lnw+WmXM
qYDzjPb0LUWrQSHsIVep134PLOXFHnKZdUPGx0hO7CGLh/ffCAyaR2wPWWBU
eyZu6xT2kGPHlZT/eI1hD7kplBJ4LGUYe8jAgdlQfeL6sz2kwOTexEpDFvaQ
lOqFVH+7Xuwh25Tdh27w9WAPGZwk77nSgYk9ZOz69Qa5s93YQ/ZfXtOwZ7ob
e8h0U+fPq/WZ2ENKHYyZ0b7ExB7SbW+rbT9XD/aOn7e8iTkOxPf5X984buOt
u6SPzGD7xvY7OoV7t4xUsn1j+NK/65uvCWLf2LD9s0W8ljz2jcXpF13XF6lg
3/g2nes84wwJ+8YtSeukXFXJ+O9vTKWNj1zIIeH8uCk13MtQRg3nR/KFjojn
X5Rxfuw1ZDxN7Pzf39dIfEs6rXRIBPvIRgtKpk47H/aRpOXjOhDJhX3k5p9P
jxxvX0BsH+m4+PoFLXoa+8h3eWEN+Vbj2EdGaYhfvkzUf7aPtG0Y2MIjOIh9
pLFTGKdkPQv7yEUxLz7Tx73YR550U10xY9+DfaSI4tZ1/geY2EcWD/nFbeJn
Yh+5/OK/wMTRbuwjVTyjPhmrMrGPHG14d54nmIl9pF5m2l96FxP7R9aCo9dK
40HE9o3ksmITYZYEg+0bw6W/SJa8GEds3ziswny7/50U9o1NRxcPOzsoYd+Y
P81QcgpQw76x+IOw1msBMvA4265xWCkGbj+uXwkUIgM7j68xDHhoReRpdh5X
En1a3CWgCiUqysfujBDfz2iIunU6D/aRwnVvIkyvc2AfOeSGXujJziG2jzz9
3jg41nwS+0ipoeueZ6+PYh/5ZYulVo7QMPaRbW8863gt+7GPDG63MHHP+ot9
pJj70GbuwR7sI7V9JK7G1DGxjww0HFLUMGRiH1noOtFvPdaNfWTYaMbrT5xM
7CNzGxyfRK9mYv+4UKMysmnjIGJ7R8orhXW+RzUZbO/oMXOu52f0fCXbOzqd
KDulzMWHvaNe7kEmw0QOe8dxxftLzLRVsHdUKFxAfrYk7B0HfEbPequQ8d93
HX1Q5dFdR8L9Sn2Mmc4rRzXcr/y0qvfdSFHB/Qprpn+m1FER9yOLrxL2hyJR
7CWvmByfP3WcH3vJjwVWmRpC3NhL/uNYVvT3ziJie8n4G9rnQ3RmsJd0Mn2/
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
Wp1mnH9IweP/D/Kkk5g=
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1nfcTXUcB/AHyd5b9t6k7FlkZZMdUTZRZFR2mRlly16Fyh5FQkpUGkYU
FQ0zKW2r9/flj/fr9/l+zr2u55zfOffm7zag5ZOJExISErFMWGi9lCIhoYK1
Epl12x28m3hhYlbJnVjkeDnzfrkneRhuTsMG+aLjj8t/ywtowWFdY9338jiq
kowBuiSslh9lsdfda/5A7kVeLume0P0jv0pLPtM10Z2RX6AayRmou4vX5M4s
8bry5g/l3uTjsq677l95Ia34XNdUd1Z+keqk4CldUl6Xu7DU6+4zH5D7kJ9n
zWnZKP/ieA/5vzhPtOYLXTPdD/J4ajDanIUdckqelu9mjfwYE+RcvCcv8/77
5Y/kvhTgOXM6NslXHO8pX4/zxwy5MI/EubHmYJc811qKL72+ufXHOJ/WCdZp
1oKsoKZ5jDUrS3jbPNtaIs4rqcyDrMlYzFrzK9aicR3pap5ozc1y9pjnW8vE
7LMrWA/q+vGSnD8+W37emp7N8q9e10u+EdeQNnFdzDl5Vz7ieAv5p/gsapGa
wbrkrJO7scLrKpoPyf0pxFXdUVrqfzZPojZpWBn7X/9x7HsK85vuGKtYzWu8
zhrWso7K3vNJ7GeK8LvuOG9QxbFPY29SlGu6r3iTqo4djn1GMf7QnaCV/px5
Mg+Qlrf01fSfxX6hOH/qTtJaf948hQdJx3p9df3ncb0owV+6r3lEfyHOP3VI
zwZ9Df0XcR4pyd+6b2ijv2ieSl0ysFFfM/aT/Ayl+Ed3irb6S7GveIiMbNLX
0h+Rh1Caf3Wnaae/bJ5OPTKxWV9bf1QeShn+031Le/0vsdepT2a26B/QH5OH
UZbruu/ooL9ifpkGZGGr/kH9cXk45bih+56O+l9jX9OQrGzT19F/Ffc893JT
d4ZO+qvmmTQiG9v1dfUn4n6lPLd0vXU35aW05azuUd1v8iweJjs79A/pT8a9
wX3c1vXR3ZKX0Y4fdJ11v8d9SmNyxDXRpeAN+XHe9rp65q/lEdwfqzkDWxLd
+TLoK9+2Lqc9P6q76K7Jc2jCWHM23pFzxrWUU/Km/ETcT3Ie9srveH99+Rt5
ZOwfuQAVYrZmZGv83dbiJJL7WRNYFM+juGbWIqyig3m89Z7Ed763dpvnWUvH
MzqeB976mPUP/ULr3NhT1kKspKl5nDU7S9kZf5e1ZPybsc/i+cZbcS2txege
96E1L/vknT6jgXxKHkXFWM2Z2CYnpn/8LfGZckd+9p6u5j/j/0szcrFL31B/
Wh5NJZJwTv8ujRz71jyGytzFef1u3mMPe9nH++znAz7kAB9xkEN8zCc87N/8
Lq4jVUjKBX03/V/yfJqTO+4jXWrWyz2YIufjfXmBtSxr4vkW37O8ykQWMIQJ
zI/vW55hPPPi+RPf6QzmRebG3oznWPx2YBAvMCd+D8TvDcpShtKUoiQlKE4x
ilKEwhSiIAXITz7ykofc5OIecpKD7GQja9xz8fyN88HTjGM2WeJ+pmVcS55i
LLPIHM8GWsT+YyBjmEmmeM7QPO4lBjCaV8gYzyyaxT3Mk4ziZTJQm6bxfKA/
I5lBemrRhE70YwTTSUdNGtORvjzPNNJSI/YAHejDc0wlDdVpRHt68ywvkZpq
NKQdvRjOFFJRlQa0pSfDmExKqlCfNvRgKJPwczOhMhdT3Pkd+j8yRD0A
         "]]]}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1FNzXmEUBtAvdeo2qZmkaZPUvaptN7Vt27btf1Dbtm3bttuV6cWa/Tz7
XBzMOyesXe/YXvECgUAQIUH/54vgQKCoaQSmMphONKIKxUjKNIbQmcZUpTjJ
mM5QutCEapQgOTMYRleaUp2SpGAmw+lGM2pQipTMYgTdaU5NSpOK2YykBy2o
RRlSM4dR9KQltSlLGuYyml60og7lSMs8xtCb1tSlfNx3Yj5j6UMb6lGBUBYw
jr60JZaKpGMh4+lHO+pTifRkICOZyEwWspKN7OQgJ2GEE0EuIslNHqKIJoa8
5CM/BShIIQqziAn0pz0NqMxiJjKADjRkCZMYSEeWMplBLGMKyynCRYcpb3zv
QAxJyEg031xLbGYgiuf6VxLJ6cnDTf0h7+MOpZ6aMC7o5znHWc5wmlOc5ATH
OcZRjnCYQxzkAPvZx172sJtd7GQH29nGVrawmU1sZAM3eMA7/pLKc+VkvXyd
+7zlDyntc7BOfsYXEurpyM01/R5v+E0Ku+yslZ/ymQR6KJFc1e/yml8kt8vG
GvkJn4ivh5CLK/odXvGTZHZZWS0/5iPx9LREcFm/zUt+kNQuC6vkR3wgSE9D
OJf0W7zgO8F2mVkZd08/jhXmP5QSfgU=
         
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt2GXbVOUaBuChGwwEAwPEAKRbBQQVBOlukJKQVBqkkUY6pLvTQARE6e5u
kO6Shn0+x94/YP+A+XAe93Xda96YNWvmhZW6TvOyzWJGIpHg+diRSC7zaoJI
JJ6ZnX9jRSILaM9Fx7uTgTN6dXbJjXmRLfpIMvKLXpJ78kI6cEnvwQf8o9dg
t9yE5GzVR5GJX/VS3JcX0ZHLek8yclavyR75G15imz6azPyml+aBvJhOXNF7
kYlzei32yk1JwXZ9DFlYppfhobyEzlzVe5OZ83pt9snNSMkOfSx35UHk5rqe
ld/lsjySl/JYHkF+vtevmT+QhQt67DiRyHi5MF/p+83mvExSx2aaO+0j8hi5
ED/p/5qDyRNeE8fmmTfs48uT5bfNYuYr5hIzm2PLzXKksnusJzan6++YP+tP
5JG8pRcI59pcYKYzuzh+Xe7DG3pW83lzjvmeedHxOOYEPY1ZJDwHc7FZx7ED
Zovw+5DMfpa5yz6GPFb+lHH6PfNH8nJTT+D4FPlLsut/mOV5Eq49unJD7xue
I5f0uhyUW/Iqu/Xx5GCFXoGn4dqjG/U4ZNeK19ijTyAnK/WKPAvXGt2pTy5W
2VciwjK9Bw3ITR7y8qdjlYnB73pPvuZDVttVISbL9V405LD+bXid2KtP5CP+
0qsSiz/03jTiiP4dr7NPn8TH/K1XIzYr9B9ozFG9dXgd2a9PJh9r9OrEYaXe
hyYc09vwJgf0KeRnrV6DuKzS+/INx/W24TrioD6VAqzTaxKPP/V+NOWE3o7U
HNKn8Qnr9VrEZ7Xen2ac1NuH64zD+nQKskGvTQL+0gfQnFN6h/Ce4Ig+g0Js
DO85EvK3PpAWnNY7kpaj+kw+ZVO4lknEGn0QN+V+4drkst6SM3Kn8L7imD6L
z9is1yUxa/XB3JL7k4Mreiv+kTvzLsf12dyXh/Aht/TP2SLXIwnr9KfmKD4J
7yH9tjmAnFzV43ovTZS/CNeXftb8Prx/ec6x2eYJ+5jyT/JnpJQXmXPsH5hD
w3Vg95GZ3Jxvvm/edjyhOTWcN7N4eO+ZS830ZmHHt8r1w3WqJw2/tzkjPE9z
vePP5NHhOtALminMheF5O3bHHEguXrCfa16zjydPkouG94B+zuwSfidO6rEc
Hyd/zlz9oTmMj7mjF2Gb3IBkbNCH0przelfScUqfxxds178O54yN+jDaUJQd
dg1j//dv7CZ9OG0pxpcUpwQlKUVpylCWcpSnAhWpRGWqUJWdvmej8PzZrI+g
HRf0buE8c1qfzyN5OPm4qydyHqbJJXgtfN6bGcxq4fn7CJvtHwaZGcuaGN67
Zn8ayAtJLLfjdbk0Y/iXOnYXw58nOS/dOcGX9lvtt7CZTWxkA+tZx1rW8Dd/
sZo/WcWF8LHq++ShG8cp5nuutD9PLD03XTlGUcdW2KeSSzGau3xlf86+mjyN
GHpTYsq/8qLchVxyF47yhf5H+L3kN+V+1JffN4exQE5ktuU1OYM5MnyNPMl8
mR6UDD/TTMtgRunjzDtmbfOsnzHLzMhoVtlPDt+T3lTVp5vvMoSp+vj//SPu
G2Lo6czh/CK/YH5PTjmNOTB0+QhF5OXhPMtvyH2pJ88nodyGV+XlpJS7U0Ie
yW1q6f/4+iryFJ7RJPwu5s88L3cmh9yZwxTWf/eQuvI8EuiteUUuzghuUdPu
jMdVDs+fpzS2exb+bSp34hCf2y2zezlcXwznJjXsT9tXCuefJzSye2qXTe7I
QT6z+80uZbiWGMYNqtufsn9CVr0DB/jU/le7FOH6YijXqWZ/0v4xWfT27KdQ
eB3sXgrXEEO4RlX7E/aPyKy3Yx8F7X+2Sx5eH37kKlXsj9s/JJPelr18Yr/U
7sVwbhnMFSrbH7N/QEa9DXsoYL/E7oVw7hjEZSrZH7W/zwd6a3aT335x+P9B
OFcM5BIV7Y/Y3yOD/h27yGe/yO65cK4YwEUq2B8O/6cgvf4tO/nYfqFdsnCu
6M8Fytsfsr9LOr0VO/govNfskoZzRT/OU87+oP0d3tdbsp0P7efbHeA279m1
YBt5HZtnt59bvGvXnK3kcWyu3ZzwORjek8xkBtPZx03e8dhmbCG3r5lmlyS8
LvTlHGXt99rfIK3elM3kCu9fuzryXOLr35E4vE704Sxl7PZ43Er5VbkXFeWJ
PKahft3xpfJzcifellObA8LngryJnPKUcP2YY1htNyV8ftOHr/QZ5nsMZY4+
wYzHtyTSZ5rpGRHex+F3MFPQjfz61PCzGcQP+k/hM8Isbe4O11b4zAufy3av
mD2pIL9j/sgE+RFfy9c8fomcTO5IGrkJG8mhTw5/G+RU4WdRW55NXLkVCeVl
vCR3JZ/cmzOU0nf5+vLyeB7SwO6q3WI5qdyB1HJjNpBdn+R4LXkWcfSWJAjX
Mb04TUm7nR5XTh7HA+rbXbF7S27EerLZTbSrGc4rsfUWxA/XOT05RQm7HR5X
NpxP7lPP7rLdm+H1Zx1Zw/mzqxFeR2LpzcPrF94H9OAkxe22e1wZeSz3qGt3
yW6RnERuzxvhdWAtWfTxjleXpxNTDzcP4sq/kVzOHYneQ4jeQ4jeQ4jeQ4je
Q4jeQ4jeQ4jeQ4jeQ4jeQ4jeQ4jeQ4jeQ4jeQ4jeQ4jeQ/j/7iH8ByrcJMo=

         "]]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{156, 2539, 53, 52, 812}}], 
         PolygonBox[{{156, 2539, 53, 55, 54, 52, 812}}], 
         PolygonBox[CompressedData["
1:eJzt1Oe/iGUYB/Dn4MQxErKFk529Z2bZe4TsE9lkh+wd2XtvPmZm9l5RouxN
9iYjFL7+DufF93P/ftf94n7ePFd4RPvq7aIEQfBOSEgQLBHuhgXBUmeyqEEQ
xgv5Nuc4xqdm8QjhsX6VZSTXY/JSvsN5jpPGLD5R+Ee/xnJS6LF49e5NLnCC
tGYJiMoT/Tor+ESPzX/yPS5yknRmHxONp/oNVpJSj8P/8n0ucYr0ZgkJ5Zl+
k59JpX/Ia/kBlznNKlKbx+WN/JArnGE1a1jLOtbzCxvYyCY2s4WtbGM7O9jJ
Lnazh73sYz8H+JWDHOI3fucwf3CEo/xJuO/6iIBH+t+cJYOeiA94rt8io5yY
6PyrZ3ImIQafkZTM/OWuZmgQLGYSixjCRBbyPYOZwAJa0Y1BjGc+9WlKB/ow
kpnUoDrVqEoVKlOJilSgPOUoSxlK8yVfUIqSlKA4xSjK5xShMIUoSAHyk4+8
5CE39fiG7+jNT8wgF18TQXt6MYLp5KQlXRnIOOZRlya04weGM40ctKALAxjL
XOrQmLb05Eemkp3mdKY/Y5hDbRrRhh4MYwrZ+JZO9GM0s/mKhrSmO0OZTFaa
0ZG+jGIWtWjAff99ltDIHRC5AyJ3wPu+A94CqmEKkA==
          
          "]]}]}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
vUf+/z3y/wBiFeRe
         "]]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{812, 2541, 7, 6, 1449}}], 
         PolygonBox[{{812, 2541, 7, 51, 8, 6, 1449}}], 
         PolygonBox[CompressedData["
1:eJzt08VSkAEAhdF/nHEYH8O93d3dYrdiJ9KhIKF0Kah0KGV3d3d399Zx5drD
azgsztz7Al/7sPDQDW2CIGjxlw5tg+B3uyBYYGdQQyEpRLKcjpSSRQJrWchM
aikilShW0IkysklkHYuYRR3bSSOalXSmnBw2sZ7FzGYPO0gnhlV0oYJcNrOB
JcxhL8VsJZbVdKWSPJIIJ4y5dKOKfJLZyFLm0Z0e9KQXvelDX/rRnwEMZBCD
GcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVEKZRjUFbCGCZcynnhK2EccaGthJ
BvE0sotMmthNM9NbfkgQ/OIVP7nNS35wllu84DsHOMNNnvONaho4zhUe8ZFd
7KSEYnawnSIKKSCfPHLJIZssMslgG1tJJ41UUthCMklsZhOJJBBPHLFUUc8x
LvOQD8RQyV6OcokHvCea/ZzmBs/4SgV7OMJF7vOOKPZxius85Qvl1HGYC9zj
LZE0c5JrPOEzZdRyiPPc5Q0RNHGCqzzmE6XUcJBz3OE1G2nkj5bDQ1q7bu26
tev/set/02IXkA==
          "]]}]}, {}, {}, {}, {}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1+XbFHUbBuClu0O6u5UURAXp7pYyaezu7u5upbsbVLobQbqku3nP+094
v++H87ju37WzO7Mz8+xzTPH+wzoMTZlIJEKHVIlEankyQyJRJ30icSBdIpHd
PMf8NM0pTU5K6tfI9+jFzRy0fQ79XPMztKAMuSilXyvf507qcsj2OfXzzM/S
krJU1+2S3zGY3LFf3Tr5Ab2px2Hvz6Wfb36OVpSjhm63/J4h5Inj0K2XH9KH
ptZn5URuCdaH5e88wn8+O7dugfl5WnOH9Uk5lvLUtN4jf6CLOTVD43vIi3Iq
eeM7WW+QH9HJnJK+5mbynLxPTorzIjPFZ1Dfur78T94j/5DdZToG86h1W3lV
DpAz43vJLAzjiOPPIxfq+8sXZAeZoI25kTwlx9HTnIEK5lpyr/yRruY08Xlx
buUlOY0b4jxbb5Qf049bQ+xXjuAxjjqGvLpF5hfjeKlIPo557Tg3eP1P65do
RyXyx/nVb5KfxPFzGydsn0//l/ll2lOZAlTQb5afche3c9L2+fV/m1+J708V
CsZx6LfIz7ibBpyyfQH9YvOrdKQqheK49Fvl53E9aMhp2xfULzG/FteWatTW
7ZM/MZzCcZy6bfIL7o17iTPeX0i/1Pw6nbmROrr98mceoEgct+4f+WXcL3H9
4pzojsqRPM5Zn1dYt8z8RtyTNLY+LcdzEzdbH5C/8GDc19aX5XSKxve13i6/
4n6aW5+Xk+Oz4rxaH5Oj6GFOzxNx7eQ1OYu+5qxxbzueInJ5XBP5ZpxTmYKB
dLVuIs/EOZETZC+ZkSFUt64rD8Y1kr/KbjItg3jIuo28EscqZ8jeMjPF4lrI
HfLrOLfmVAwwt5AX5JTYf1x76+NyNE9y3nEX1a0wvxX7pAb1dIfkbzxM8bhe
un/lNwykKRe8v5h+pfltulOTElz0WnGvrTK/E+eQWpTkktcuc4WrXOM6Ca+l
ICWpSE0a0pKO9GQgI5nITBayko3ssW/7XC3fpWfco5SKe0K/U37LIJrFva07
IcfwFO2tr8vZ9DNnYzg5rDem8XvlGFPSh1/S+juirbmr/ITd3BZ/i7IxL7Ga
yrqj3p/aXI2hzCK/foN+PetYyxpWs4qVrGA5y1jKEhbzN3/xJ4tYyALmc4RU
Pr8qQ5hJPvuap89nbsSLrKKS/j99SnMVBjODG/Rz9V3MH7OLW+N3TN7BC6yk
ou6w7b43H6WFdRv5NluoZZ1CfsH+eK91ZXmWDuZBcjp5zXN8TgrZm59198mT
so3sLAfFfSO7yY/kXXKnrB+/v/Fd436SPeQ38p44NtlUNpQD5HnZST4v+8kV
soI8ZN/Xzb3M38kjNDe3lhfpYn5LbqZm3Kvyc/bR0LqSHMg08ljP9nk/mU/Q
2rqT/JB/uSX+Z8mvOUQT6wbyOZZT3vqg97cyv8kmasTfiK5ifA+mkls3S9fR
/AE7qBf/z+XtPMsyyukO2K6l+Q02Uj3+7nQVzPczhVy6mbpccR/zDEspq9+v
v0r5uC5MJqd+hi5n3Bs8zRLK6Pfpr1DO+l4mkUM/XZcjrhlPsZjS+r36y5SN
68ZEsuun6bLHOeNJ/qaUfo/+EmWs72YC2fRTddniPPAEf1FSv1t/kdJx3zCe
rPopuqzmujzOn5TQ79JfoJR1f8aRRT9Zt5PzlIx7iLFk9tok3UT+5Rwl9H0Z
QyavT9BlMd/MYyyiuH6H/izFrfswmoz68boO5vfZHseoyyzr8CgLKabbbrsW
5tfZwE26M7rPzHtpEL/T8gzt4+9LjiKDeZztEvJOftQdp5W5fdzP8pLsKt+L
8yD/ieOXmeTg+A2X3eVXcR3ivpWNZe24r+Q52VE+EudCLpBF43Ps95q5p/nb
uEfid0g2k83lBTqbX5PrudF82ns+Ne+J+zv+d8nTtIvjlyNJbx5rux/Mx2hp
3U6+y7Y4d9YZ5ZccoJF1Lfkw8ylivc37m5lfZR3VdKd0Rcy9GEE63RhdW/M7
bKW2LoOsyUPMo7Buq+2aml9hLVXjd01XOL4/f5BWN1qX3lyDB5lLIf0WfRPz
y6yhiu6ErpC5B7+TRjdKl85cnQeYQ0H9Zv1xCsa14jdS60fq0sb9wnBmU0C/
SX+MAtbd+JVU+hG6NHEtGBb7TCSfo5LPUcnnqORzVPI5KvkclXyOSj5HJZ+j
ks9Ryeeo5HNU8jnq/32O+h+f1FBb
         "]]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{1449, 2543, 3, 2, 2022}}], 
         PolygonBox[{{1449, 2543, 3, 5, 4, 2, 2022}}], 
         PolygonBox[CompressedData["
1:eJzt09VtFgAAhdE/vJCOwUqMwACUlrpTdxfqTt3d3d0N6kXeSCfgdA3Sh5M7
wM337kPw+49vAoHAi2eC3wYCf4MCgW/2E6esMUE39XzlB7vMM0QbIZyxziQ9
NFDJNXssMEw7oZyzwRS9NFLFDfssMkIHn7lgk2n6aKKaWw5YYpROwrhkixn6
aaaGcK7YZpYBWqglgkiiiCaGWOKIJ4FEkvhCMimkkkY6GWSSRTY55JJHPgUU
UkQxJZRSRjnf2WGOQVqp445Dlhmji3uOWGGcB45Z5ZETnqh4+c63fzjnN+uc
8YsJ1jjlJ12MscIxj9TTygBz7HJNBeWUUUoJxRRRSAH55JFLDtlkkUkG6aSR
SgrJfCGJRBKIJ45YYogmikjqaKGfWXb4QQSdjLLMEQ/U0kwfM2zznXA6GGGJ
Q+6poYleptniijDaGWaRA+6oZpxVTniikR6m2OSSz7QxxAL73FJFA91MssEF
oS99Msg8e9xQyTMhQa8dv3b82vH/0PE/dmRXOg==
          
          "]]}]}, {}, {}}, {{}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwtzkc/0AEAgOG/o01ZRcomUpySIpGRPbJKRYkipJS9JWUT0jfsU3gODs/v
vb5pA+NtYyFBEOzxPzQI7qsEW3znPZ3UUEIYv5hmiC5qeUA4v5lhmG7qKCWC
bWb5QA/PeEgkO8zxkV7qeUQUu8wzwgsaKCP68nuBUV7SSDkx7LPIJ/po4jGx
HLDEGK9opoIrHLLMOK9p4QlXOWKFCd7QSiVxHLPKZ/ppo4p4/rDGJAO085QE
EkniGtdJJoUbpHKTW6SRTgaZZJFNDrnkcZt8CrhDIXe5RxEnrPOFt3RQzSkb
fOUdzznjB1MM8pdNvnHOT/5RzAWdzjFD
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1GXYVGUUBdChQ7pBWrq7u7u7u8NWTBAFFbsQpLu7u1tCulO6u3G9jz/W
c/bZ9w7Dd2MyderfqF+USCSSKGokci1OJFJULk4y+1IHYtJPjspkuQ2jHS9g
3yR3Jz0D7PGZJ191vLP8SB5JQ3br6ujOyIMpRSz666IxRW7LGOcVtG+We5CB
a7ouusfyXzRij66u7qz8JaWJzZu66EyV2zHWeYXsW+SeZOS6rqvuiTyKxuzV
1dOdk7+iDHF4SxeDaXJ7xjmvsH2r3ItMfGRPwHz5huPd5KfhOtGEfbr6uvPy
EMoy0J6cZXJc3pZjMl3uwFA5LWvl8T5fRN4m9yYzH9sTskC+6Xh3+Vm4fvwk
Z6VpuDZmalbJw808/OP8BuaFcD3NoeYP5htMpJx9kJmCsSy3/27mCteV1+zv
mLEYwwz7L2b2cB/paP/aTMcE1tlHmPnC7ruLmtt1ffhOzhS+W/4k6v/P4UL5
lvN6yM/DPaRZuC/2NKyW9zveUP43fBflice7utjMlDsx0XnF7DvkvmThtu4A
jfQX7d9QgfhMCs+/fmd47snKHd1BJjOFqUxjOjOYSQmf2RWeZ7JxV3eIWZR0
7O/wbJKde7rDzKaUY7vDc0YO7uuO0Fh/yf4tFUnAHH1p/Z7wvJCTB7qjNNFf
tg+jEgmZqy+j3xvuF7l4qDtGU/2VcP2pTCLm6cvq94XrSG4e6Y7TTH/V/j1V
SMx8fbnwPMnvkYfHuhM0D78n4bmiKklYoC+v3y+/T16e6E7SQn/d/iPVSMpC
fQX9AfkD8vFUd4qW+hvhWac6yVikr6g/KH9Ifp7pTtNKf9P+MzVIzmJ9Jf0h
eQAFeK47Q2v9rfBcU5MULNFX1h8O7zwFeaE7Sxv9bfuv1CIlS/VV9EfC+0oh
Xup66l7I42jOOV1b3R35N2qTimX6qvqj4d2gMK90vXQv5fG04Lyune5ueE+p
Q+pwT3RxmCV3ZrnzqtmPyZ9SJEx7YhbJEXrLr8wJtOSCur3unvwHdfnCnpIV
cppwL+W4zJa7hPdJTs96eYXPV5ePy5+F50fOTNGwm0lYHP5uMydR5D5mhNHh
9yjcMzMbk2llH2K+znjW2P8084bf6PB74KMdzPv6Uebw8EyZWZhEPftgMxXj
WBn+LjN3+DfDcxZ+35gT7qWZg67hPTQzsEFe6TtqyCfkzykWpj0pS+So9A1/
S/hOuTUXfaaj/UH4/1KftKzS19SflAdSnGhc0q+mlmOn7IMoQXQu69ewlnWs
ZwMb2cRmtrCVbWxnBzvZRW3/5ulwHylJDK7oO+kfyiNoQLrwHuniMVfuxjA5
IxvlkWZ+poffN5//D9KMDNA=
        "]], LineBox[CompressedData["
1:eJwNzuc+kGEcx+HbntkrIspKZ+MQHADn4HTM7MqIbCqy98zKKipKuF5cn/v3
/T9vnpKauuraiBBCPacJITREhpAfFUICt/YJ68zzwi2dCH7qfRop0In8tb+z
wQIv3TKI5Ep/o4lnOol/9imbLFLqlkkU1/qAZgp1Mnf2GVssUeaWRTS/9CEt
FOkn/LfP2WaZcrdsYvitj2jluU7h3r5ghxXeUOyeyoN9yS6rtNFOB5100U0P
b3nHe3rpo58BPjDIEB8ZZoRRxhhngkmmmOYTn/nCDLN8pcR/pRH4ofdYo0Ln
EMsffUylnUscN/qVN494qnjKa+Z8ewRvl07E
        "]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1GW0VVUUgNHLo0MQRVCxsBERkO5u6S5Bukvp7galQbpBCcWgu7u7u0O6
nfvHHGt9e4/BuPe+c0hRu0XZ5tEikUhUVCRyM24kEtuenofRI5EFdOBqjEik
J6k4r6uz196YN9muR5Oav3VJHtkX0pFruhdfc0HXYJ+9CUnYocfwDf/oUjy2
L6IT13VvUnNRf89+e1PeYqceSxr+1aV5Yv+DztzQffiGS7omB+zNSMouPY60
LNFleGr/ky7c1H1Jw2Vdi4P25iRjtx7PA/tQMnNbp2OpvSzP7It5bh9FLrrq
W2Y/0nJFx4gZiUy0F+IHfchswdskdDfb3OM8Yh9nz8ev+qE5jCzhb+Lud/OO
8zj2qfZPzGLmO+af5rfulpnleM/Zc53AnKk/M//SL+yj+UjnDr+1ucBMaXZz
f9venw90OjOxOc/8wrzqPqY5SX9sFg7fwfzDrO3usNkyfB4SOZ9j7nUezT7e
np8J+pH5M1m5q+O6n2YvTnq93CzPi/Ds0Z07ekD4jlzTdThib8W77NMTycAK
XYGX4dmjB3U56qw1ydmvJ5GRlboir8KzRk/qkYlVzisRYYnuRX0yk4WsrHZX
mWgs1b1pQDbWOKtCFMt0HxpyTP8Y/k4c0JPJzlpdlegs131pxHH9E+9zUE8h
B+t0NWKwQvejMSd0m/B35JCeSk7W6+rEZKXuTxNO6rZ8yGE9jVxs0DWIxSo9
gKac0u3Cc8QRPZ3cbNTfE5vVeiDNOK3bk4KjegZ52KRrEoc1ehDNOaM7hOeM
Y3omedmsaxGXtXowLTirO4Z3guN6FvnYEt454rFOD6El53QnPuWEnk1+toZn
mfis10O5ax8Ynk2u61act3cO7xUn9RwKsE3XIQEb9DD+sw8iAzd0ay7Yu/A5
p/RcHtt/IRv/6YJst9flNTbql+YY8oR3SN8zB5ORmzqWd2myvUh4vvRFs2t4
f3nd3VzztPMo+6/2AiSzLzLnOX9iDg/PgbPsZhJzvvmlec99PHN6+N3M78K7
Zy42vzILud9hrxeeU50wfG5zVvie5ib3r+xjw3Og85pJzYXhe7u7bw4hE284
/8285Ty2fYq9aHgH9CWzW/hMnNHR3U+wF+Q3/dQcQQ7u68LstNcnEZv1cNpw
WXcnJWf17xRhl24QfjO26BG0pSi7nTUkMVv1SNpRjOJ8RwlKUorSlKEs5ShP
BSpSicpUoSp7/JuNwvdnmx5Fe67oHuF35pyezzP7SHLyQMf3O8ywlyB5+P/e
TGVWc/c/vH4JIA==
        "]], LineBox[CompressedData["
1:eJwNw1VWVQEAAMDLBx8sgwUQUtIdksoDke7uUlB4SAlIK90dq2MNzJwz0Z1j
odGIIAjCvkUFQUtkEHz1xj0XnbTHGE/d8KdDtlrnrfsuOWWvsZ75118O2+Y3
7/znstP2Gee5m845Yrv13vvfFb/bb7wXbjnvqB02+OCBq/5wwA9eum3YMTtt
NMErd1xw3C6bTDTJZFP8aKppppthpllmm2OueeZbYKFFFlviJ0sts9wKK63y
s1+sNmSN1+762wm7bfbRQ/8446BPHrnmrM8eu+6LJ75a6zvIFTkq
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1HVgVnUUBuA7xjZGd9fo7rADCcFAUAQRRbEVh93d3d0dpHRLd5d0d47u
8Dl/PHvPeXe/ut9vy+rVp3N2SpIkM/3IyUySVHMafdKTpDFp9FWkZiTJH+Zu
lGWfbjll9ePtD9GEdPrpc+v/NN9EOXJ0Kyin/9f+ME3JoL8+Tf+XuTvl2a9r
oFtkfo22rNSV100wP0Iz8jBAn67/23wzFTiga6hbbH6ddqzSVdBNND9KczJp
qVsl36cjA12Xoetr7kFFDuoa6ZaY3+BKVusq6iaZH6MFre3b5Tfk5Tz7avkB
13GVfZ/8mUEen8fez3xL/N58SFbiMvNm+QWHXNfYvtT8Jl3Mx2X7eB/m3fJu
+UN8fnlWrvGYSubJ5tvk4/J6eVTeK1vKNnKHvFN+G9+VPC17y3zyfLlG9pIf
yq7ypLxfdpJXyxz5S7x/c8I/XjdT9tfdSifzYVmZy81b5Jccdl0T+zLzW3Rg
ra6ybor5ibh35OcC3Vr5EZ0Z7Lq8ugHmnmRxRLeOLP1U+5Px/inAEH0+/cC4
F1ThqG49QxlGfr8fpL+dqhzTbWA4BeJzxX2gGsd1G6min2Z/Kt4jBRmhL6gf
bL6D6pzQbaKqfrr9aS6kECP1hfRD4nugBid1m6mmn2F/hosozCh9Yf1Q813U
5JRuC9X1M+3PcjFFGK0voh8WZ4RanNZtpYZ+lv05LqEoY/RF9cPN91CbM7pt
1NTPtj/PpRRjrL6YfkScK+pwVtdU95/57TjzbNfV0s0xvxDnm+JxH3Tr5Mdx
PhnnuuK6keb7qMs5XTPdcvM7ce7Yoautm2t+Mc4Wbe075XeUiHtmXy8/4Qau
se+XvzLe40vYR8V5ph6t7FvlVyQ0t6+Q73Kj+UQ8B+3Ne+SP9DCfkzs9Xx3z
vDhD8qV4TXksPodsJdvJXfG9ye9ld3lGPihLxncmN8S5kZ/KbvKUfEB2kdfK
A/G9yN/i70umxP9Tr11Sjo5r42/EfETW5wrzNvk1KbSwr5TvxfPRwb5X/sQu
z1PXPt/8cjyWUnE2dBvlZ3EfmOC6Urox5t40IBe79fX0C8yv0JrSTNSX1o+N
z0pDUtmjn8RkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGWU8VrjPH82jcjN
Xn19/ULzq7ShTJxj3Sb5OV3paD8of6enORfZcZY9/n9Ylezw
        "]], 
       LineBox[CompressedData["
1:eJwNw8VRGAEAAMDjxVAGLVECBeAuwV2DBYK7u0sS3CW4O/wpgd2ZDY+MjogK
CYIg2a+wIOgLDYIYr9xx0RHbbfTRY1edtt9Yr911yVE7bPLJE9ecccA4b9xz
2TE7/e2z/1131kHjvXXfFcftstkXT91wziETvPPAP07YbYuJ3nvoXyftsdUk
k00x1TTTzTDTH2aZbY655plvgYUWWWyJpZZZboWVVlntT2ustc56G3zwyH9O
2Wubr5656bzDvnnulgu+e+G2H1766S+/AWmMVPU=
        "]]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0negT2UYB/BzrXuvvfe6RkoqMjISDXuTZGSlZGuiqGhQRsMoo0KRhnbR
IGRFhYqG0c7KuPbW5/nj8/s+z3PO75z3vOdk9B3WcWhKkiQT/WSmJ0ndtCTZ
nZok+dXL1aNpQWUKUtF8i3yGHtRjj/MLmH+pHkNLLqEQlcy/l89yG/XZ6/yC
5ivUD9OKKtQ0+0O+wmAKx33NfpDP0ZMG7PP/QuYr1Y/QmkupZfannMsQisQ6
zH6Uz9OLZvrj8kOuDfp9chH3s9+1C5utUj9KG27UZ8p3uYza+r/kPG5RZ2No
PIc8LZdQNJ5Jv1VO5WZ1Fnqrm8sTsr/8KPZF5opr0FDfUO6Xd8g3ZFeZymAe
0LeT5+UA+Xk8l8zDMP6z/iLyK/O+cqzsKBPaqm+SR+R7dFenU1VdR/4t59NF
nT2uF3srz8ilFIt91m+T0+jDdSHuK99kBAesoajZavW4WC+XU5yDjh2imONr
9I/RnmqUiP01/0lOj/XTiMPOL26+Vv04HbiCklQ1/1nO4HYak+n8Eubr1E/E
83MlpWId5r/IF+jH9Rxxfknz9eon6cRVlI51mf8qX4z3wQ0cdX4p86/V4+Pd
Up1rzP6RrzKcMrFOs+1yJnfGt8Qx/y9tvkE9gc7UoK7Zv/I17qZsrNtsh5wV
30u8v9gTswPyLUZy3PXKmG1UPxXfJE30R+X7XE09/W65gHviu9aflZ9SLp5X
v1PO5i5a6E/Kj+Nasa/6g/JtuqnTGBXvTl6QX9BbnTe+bespK7+JdyKfjj2V
KQyki76pPBZ7Ij+QPWROhlBTX1/uiXckF8pbZQ4Gca++rTwXa5WfyZ4yN+Xj
Xchdck7srTorA9Qt5Sn5Sdw/3r3+kFzMg5y07nJm36onxj2pRQOzvfJ17iMj
3pfZb/IlBtKMU/5f3vw79SS6UpsKnHYsw7FN6smxh9ShImccO8s5znOBiySO
pZCFrGQjOzlIJY10cpKL3OQhL/nIH/d2z81yCt3jG6VSfBPmv8uXGUTz+LbN
Dst3eIgO+otyGX3U+RhOAf3/CWi/1Q==
        "]], LineBox[CompressedData["
1:eJwNw1VSlgEAAMCPR47BlTgCB4AZQvhBWhpEUkpKukO6UzqkUzpeOQG7MxsR
FRMZHRYEQciP8CCo9b/7Ljpih7FeuOm0fTZb550HLjlqp3FeuuWM/bb47Inr
TlrvvYcu+8cu471y21kHbLXBB/+54pjdJnjtjnMO+ttfPnrkquP2+MUbd513
yDYbTTTJkMmm+NVU00w3w0yzzPabOeaaZ74FFlpksSV+t9QfllluhZVWWe1P
b91zwWHbbfLJY9ecsNcXT/3rlK+eueGb575b4ye+cVi0
        "]]}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{5., 0},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 21.213203435596423`}, {0, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.3242640687119285, 0.3242640687119285}, {
   0.1726288436623441, 0.1726288436623441}}]], "Output",
 CellChangeTimes->{3.663012864748608*^9, 3.66301336115728*^9, 
  3.6630135489654818`*^9}]
}, Open  ]],

Cell["\<\
Information for SAD and SAR plots\
\>", "Text",
 CellChangeTimes->{{3.663011425258603*^9, 3.66301143154622*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ind", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"SabA", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "individuals", " ", "in", " ", "each", " ", 
    "plot"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Nu]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]2p", "[", "L_", "]"}], ":=", 
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["L", "\[Rho]"], ")"}], "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Lambda]"}], "L"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], ")"}], 
     
     RowBox[{"-", "1"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]2", "[", "L_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", "ind", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"Nspecies", "*", "Lx", "*", "Ly"}], ")"}]}], ")"}], "*", 
    SuperscriptBox["\[Rho]", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "\[Lambda]"}], "L"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"BesselK", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}], 
          RowBox[{"BesselI", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rsapres2medp", "[", 
    RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", 
       RowBox[{"n", "+", "1"}]]}], "]"}], "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", "n"]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sarmedp", "[", "L_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", "1"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SAR", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Nspecies", "*", 
     FractionBox[
      RowBox[{"sarmedp", "[", "r", "]"}], 
      RowBox[{"sarmedp", "[", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
    RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SAD", "[", 
    RowBox[{"n_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Nspecies", "*", 
     FractionBox[
      RowBox[{"rsapres2medp", "[", 
       RowBox[{"n", ",", "r"}], "]"}], 
      RowBox[{"sarmedp", "[", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
    RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"upRichness", "=", 
   RowBox[{"NsppSamp", "*", 
    FractionBox[
     RowBox[{"sarmedp", " ", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "dens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}], 
     RowBox[{"sarmedp", " ", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"samp", "*", "Asp"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "dens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"UPdens", "=", 
   RowBox[{"Nspecies", "*", 
    RowBox[{"dens", "/", "upRichness"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"downSAR", "[", "r_", "]"}], ":=", 
   RowBox[{"upRichness", "*", 
    FractionBox[
     RowBox[{"sarmedp", "[", 
      RowBox[{"r", ",", "UPdens", ",", "\[Lambda]", ",", "\[Rho]"}], "]"}], 
     RowBox[{"sarmedp", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "UPdens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9, {3.662999096685413*^9, 3.662999096784697*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stind", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"stSabA", "[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "individuals", " ", "in", " ", "each", " ", 
    "plot"}], "*)"}], "\n", 
  RowBox[{"\[Lambda]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Nu]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]2p", "[", "L_", "]"}], ":=", 
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["L", "\[Rho]"], ")"}], "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Lambda]"}], "L"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], ")"}], 
     
     RowBox[{"-", "1"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"st\[Beta]2", "[", "L_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", "stind", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"stNspecies", "*", "Lx", "*", "Ly"}], ")"}]}], ")"}], "*", 
    SuperscriptBox["\[Rho]", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "\[Lambda]"}], "L"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"BesselK", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}], 
          RowBox[{"BesselI", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"strsapres2medp", "[", 
    RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"st\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", 
       RowBox[{"n", "+", "1"}]]}], "]"}], "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"st\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", "n"]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stsarmedp", "[", "L_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"st\[Beta]2", "[", "L", "]"}]}], "]"}], ",", "1"}], "]"}]}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stSAR", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"stNspecies", "*", 
     FractionBox[
      RowBox[{"stsarmedp", "[", "r", "]"}], 
      RowBox[{"stsarmedp", "[", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
    RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.663012887542589*^9, 3.663012936721779*^9}, {
  3.663013381282546*^9, 3.663013396184503*^9}, {3.6630134476040277`*^9, 
  3.663013447685416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"SAR", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", 
       RowBox[{"10", "*", 
        RowBox[{"Max", "[", "rvec", "]"}]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"stSAR", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", 
       RowBox[{"10", "*", 
        RowBox[{"Max", "[", "rvec", "]"}]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.663013412742708*^9, 3.663013467352859*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
9/8Acd0Rjw==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwt13k4VN8bAHC7kSXZScTYCcMYs5iZ11hmKFFUyh4tlF1FUlpJm2TfUhFa
pVKWIi1KkmzZsxSJKNlC9Tt3vr/7z30+z3nved/znvM891617cEbd/Dx8PBM
8/LwYHeT6W9e58RvM3j+fz3viNaMu57AzG/u3+Q/XMf8ruCzzOF6JlNk/DH+
/ItOZpU6n+XNpWtMnMfgvcTVg0y+8pYlo+s3mBeGwWffwWFmfuFG967CEqb0
fQdjQ/Y3Zl0YrSJ76T5T5EjojcD735niIuL71a5XMMezayDx80+mcetMy9DC
E2bQyHseY/YvZrHjpEJLYQ0zJHn46qH0aWaDUsf+lKXnTHerw9EgNceUulds
onS9ntlyZ7J4JmmRmS+X6xPt1MDc9TuL+e7KEtPsUFJiz8I75j3X3Zn0m3+Y
t67RD7wvbGIGOwbi5Ev+Md8HabVdXGphxpvY78p9xQuygvOJcte7mK8mrCoi
dwtCn3mYDju6m6kooJfa2yEI1wPGqw849TCrpAZwORwhIDf1T3Qs9DI9cL9U
3LWE4fY7v+vvCvuZA8/GLv7pxkFTuoNA4tIQ88n77avqSWIgZ6RaI3P9G/OD
Z6Cq4q4VYL910DdfcYx5gffJY9G8FRBzvECYeG6MuS0uNftfxwr4/FHf0Tli
nKl9NOHnpL0U3I8l911kTTAf+KhdkjSSBp1RncNxkz+Y2QwvC6XfMvCKysoW
ODvNLEyev9CZrgC8fREdf18sMlW3OO4OFl8Nn8wrN03lCYBIZuQbkXRt0FGh
xcfRRYEvqru39oIR3MedX/WGuAKyq05wmGwi4FMK3iWck4EGyXSrpCgySBR9
pwsbKsCtfSy3unYLuGP3sDn5yUq45/xqWsEPYPVf/NO+5aowPbptp5gwC8Si
m5tsVVQhqTNU56Y4C+bnYofuGKjCi8tSD2xkWPD+Zy/uiJ0qvFX5qB6kxoLD
X9KcVY+rwnnllRZnaSzoaRAd9ZpVhUe7xbyXgljQ8O736ZCg1dCR976hoJkF
cdkDD366qAHvOyfK0lkrUNcdJt10UwOSyhsp3SQrePrw22O/7WrAV/dJfWOa
Fcw0/qr6GKwGuc6JI+lXrMCXV+jlkwQ10IIDuN8PrYC5U6/tdI0aNItJDvD3
WcGcUfiMmoE6eD8POmSrbw27nguQNvLjYZXn+ceXK6xhtePGrlERPMhrRiS8
fmoNHV2XDx+VxMPR41Z932utwX6KWleyCg9DBbHLDd9ag6FaqOtyMh4cdxAf
nOi2htnDvQcb9uLhXyDu+5lFazhBLau2bcfDcML1FhGKDdBf8fv19eDhU6vK
9AsLG5jdsAG3fwgPZu83VBwCG9jtP+5U8AMPuKw/FoNsG1ibrj7IL6oBU7XR
zJObbUBq9rzAM6YGaPtt8jYIt4Er93bZ0Yo1oF6xrRR3wwZ25pr5bi/RgP07
P6y7dtsGDM7wx5x+pAGhM/061Hs28NjvcsnHlxqw2uD7HffHNtAk/1E+YlAD
cFqrdPe9soG/MbbDt1ZqwrN9cxdmBmzA3V7zuMp5TcgW/O3NkrMFdfNf2TYp
mjDroa3qr2gLX/HPyvZma8JDxWbvs8q2EPHH/VvFDU0YVWIeeK1uC2dKkjds
qdMEVgB1jbyRLVTICaxO5NECH7uAIkm2LSgMDVbxhmtBwtcf4ccjbEFAxdPx
TpQWyK0mm0kesIVJ186BbbFasLhwTj8zyhZeNb4XenBOC+RdBp4WHEb5Kqqc
dhah+Pc3HmTF20LTxdTP9b1asKPn5TGBbFuIB3uxZI42jCnZTrXXoPjol7ng
qA2NFP1/4s9twasMCN83aYNoymgM66UtkAzMN9v6akPZ9qsd197Ywmd5jbz5
GG2YujZA5jTbAkz+MfW4rw3JJ/85Kw7ZwnzOPTctFR2493t5xDc+Nvyg3Pbd
rqkDqVG/9ywJsGG0rWhProEOBMWM3RQVZkOXeF60HE0H1nWUiauLsqEq5nyW
kKsOdDbH5BhKsyHWY0/38EUdUDgVuuKNOhuEV2m6FQrqgtBfZRcZYANP+Wrf
ITFdkMjzF2q1ZMO8i/IeVRld6Brat/6iFRu+npWOTlPXhX5Zn2IBNhvql3iz
4pi64Mza+a7RgQ3ne/q6dkXpwmfOxODUNjbIZadv0/muC918vjUJ4WwwMO89
wZrWhdelLqMLEWxgNavddV/UBbsddUL++9kQhLvJf1FED07Wd2gzo9jwMuLJ
rd+aelAhKstsOcyGCIfBv/WeejC+QuRq9mk2NP/VvxbYpAd97QUCz3NQfRkh
7+I+6oHdYnbPTC4b/hIfzl3p0wNCqP+4Vh4b9PYw1rWP64G2zrXK41fZcPSj
0wxDRB86cukbdArZYFyyjy3J0gdJKiiplqD1+FSPld7Xh4oLMeNNNWi99vfO
b6zQh63lqmefPGODIPEaYapGHwi2AW1FtWw4JBR3gNCoDyfrJPZEv2BDwM31
/CVf9aHs63yD5Gs22M70Kt1eZQDNtsqVfxpRffFLdoVxBqBuqnf6WzcbqGET
47bnDSDVw49+t4cN+9z6LwwnG4DwfsH6sF42jK950aZ51QAS3SXCZvvQfjef
8cmvMgDCvyX8jwE2lCmvjLry0wASvvRZ3hlhQ3AJpSjLbQ3snBap9Zxiw+OF
mzX129fAix+tzRK/0H7bqHT+9l8DJm9FKp4gJ3byLXONXAPxDspSCjNsKOVr
2COTsgbc9Y/IVs+xYdbF0+hc4xoo/qPz5uMSGw7/PlZ22NIQ9l7kT2EIceCV
1UzjbY4hrGmqDGtAXn5+10iPoyHcbfHcslWYA3nq6xRonoZQfGMFLQTHgdq1
sgfnDhrCu6QLl5KWcUAot5Ae8sAQTkdbVt+Q4MA5VsMLH20jeK11apeJHAeW
usY2yRkaQcBdDjMbOSBcdKSeaATvF+R9BeU5YJtvL0JkGcHN0qGkNuS/gm8c
hDyMIPEU/m6gIgeC3rxsv5FkBKllvmUxyhxwcqr++uuPEWwPjyrGq3PAK2LS
woXPGLKuKA9GIqfCkZN3BI3h+Xaek++QBTpz5XzFjKGlaZn4PjwH+kX6yA2K
xhCxLprxRIMDGXvcY3KJxhCXyjtsos2BZUZbhawCjKHJI0m8XJ8Dr/WLRb4E
GgPjj3gXnwEHTur8FosLNYac0SOy65B51DOk30Yag+Wscm8P8qxM52rnOGOo
Mmt6M7eGA4MLrjTffGMw/HFpVNoY9XOuiCFYZAy6xpOym5A9puctC28aQwC/
cE0Kcsf3dM5YqTHIeEwlyhI40NjfsSn8mTGs3reKsdyEA5WvXEOO9xmDXuyf
E2OmHIh8XhSuOWgM2o9cpjWIHCDVzO+v+2IMdoPTEx7IpeXpMaLfjWFnh93p
RuSiWx0JlxaNIV88c/cNMw4kJ7kWXFMgwK5nD2IdzDmw19O16/lGAjz+ssPZ
lsqBx10NEy6bCfClsKEjFFlgiyX/8FYCFPw6JpCDnOOoZ4DzIQAhZdeGKeRG
WIpZF0wA34Wc5nQaB4zxeWptZwiw11Ruqc2CA4cuy5B2XiCA8aXLxkvIr1ee
tp9LIkCljImsOp0DPjJh4YqZBDiwWPNjL3KSoPVLjyICXCYe5P2HPD0ysnv4
BQFMM1YKyTI5AH7uMQdeE0AqLOMwCflsf9NFXAMBfrrN3N2CrNlZXqHXQoDf
7Z7MDOTN9WfEggcIYLM9SFUR0PpuGZXM/SHAiP+JTWKWHIgOPTCHMzcBiWqT
+ecsDnQls167U01gm1rX225k6mPxjBK6CTi0Nwf9Qp7/e43qam0CuFUrNdSt
OBBxtimmcIMJ7OfkbIpB3luoK2C71wT+lLmr6ltz4G39dGtGsAm4HUqVBGS9
ieqC72Em0D8W3O6C/JW4mZ0SZQLL3KwGYpD9ao8lfD5lAisTVy69Q3bv7ZY8
fsUEJniCEnbaoPPAUzjQno/GE9Z9i0RW0ggr1StC89ml488gdwTgXJrvmEAj
PhN/F9llnpimVmUC/vtX+8wgO0ifX1XTbgKfrp5YHm3LAYYd6P0RNYWpfkHx
QDYHNHLePkxfbgoh+7rXHUIW+bnZkihtCj35kv5nkFvTA133KJlC9cZX5sXI
AV8zT3XqmEI7NZI0hJwaNzP40MYUPuAE5504aP+7Y4M22JmCRM9PVU9kHyOx
hfF1pqBudl9nD7LBR/UVGi6mMN35tPcEcq2WEzNpuyn4Ghj2liFPvryRFXTE
FPwvRvvL2qH8iiTtZcdNYcd+oSerkSsCn5UWnDKF1yNuM/rIp2Q73vScM4Wk
KmdZFrLyDsF5+2xTYAV2KwQicwS8XbTLTWEk+J/XU+Q8lqx4/xSKf2qz09Ge
A+n0ORfGrCkYeS8ab0G+SO7Mzv5tCjwdFaOeyMcMcwy28hChzXdCMwjZV0lz
XbM4+q6mUN+dQdaaIp55oUOEdS9l5p4jq3yXa1E3IMKY6bn79cjyX+eVjhoR
obhsnfcHZFxf1Q06iQhyxtpn+pBH31jXl1kRYTB+RHce+dYVF5FiTyJcf/Cw
UGctB/KzSRuEtxNBWqzjgCFyTppCxo4dRDily6ASkc+f69FR30uErzfXpTKR
g6P8OFlR6Pmf1+9sQjbZEBF3LpkIW/vJUUeQH/EkC4bVE0Gx7y+hHpkRnelZ
/Y4IharZAY3Ir2byHol9IIJAFzGjGbn1223/wo9E+EQu6ehC/tFa967nMxGM
ynWHviHrFC+msP+h5yv3k0XWceAunm8ymc8Mmlc87BJDJuXiOIOCZjA6SomQ
RLa+JLtwSMwMwjz8zskje8cYeZYqmsGOZKdtmsgZG3y1VhHNIOH2rSAm8uoG
/yMB5mZwdGzFeRZykW1IxyOqGSTmDRTYIJfRYhI2WpoBLVqgei1ys2baRNx6
MwgqM8jYgrxsob5sarcZtFYwFgORo6+asF/nmEFuwMmBFOR4h9/bPK6YAS7Q
yTMdOXW+Omgq3wzk3uxqzUQuXe+QqnzLDMQOPr11Gfnrwq4vIRVmYDn8cXkx
sotzznHFj2ZgU3H1dgXy9r++aXe6zEBn/MmrKuTgYr2bVn1m4Bu5uuspcsK/
R82BX8xA4NzMZC1yzc1mtdpfZuDWFthZj2wggKsJkCSBSFLO3U5k6t3Gln/S
JNANeBDejczeljKSLE8Ci4Ixk14sX4n68moVEljafb/aj5zuTveUXkMCH/4U
+xFkgYdhS5V2JGgMbq/9hSzlTZHc4EACr7RkxgyyqiiPxrATCf5sMSybxfL5
nFsr6UoCpUrVjN/IIeJFmX47STAnqm70D7l3Ry9Z/DgJeoUv5Ys4oPf5owXc
jlMkINRXvluGrLJMobPqNAnOd7T+EkX2vLMxam8iiv89Q5JA7p+tK3+bQ4L0
qOcZUsiDcaXUhMckGPRp/KiEzNf1ftlgJQli9XxaViLjDb53UapJcIq9qUEZ
2a9JO3r0JQla0qLLVJC/KORUclpIsHUpfK868tfiOAvhCRIc2XXETxcZt5Qv
5vWTBCpSChQ9ZN31tT1l0yQQ/hIuqo8cMLV0aOciCQIunSk2QB6jhj15iTOH
XPX2t0bIE2/dGSfw5vCk5NRtM2QJlYMSPVrmsEetx5uEbBSS1meqZw53yXZS
5sghMs2Hh4zN4fqHmGAy8k93djWLYQ5eAe3SNOTp7wTg3WoOMXHrcYCcFbL8
bZ67OVTKfb6JmfVrfBN4m8PFuYsOlsiJ84V7juwyh/LFtWdYyPr8Kml/9pmD
rv7bH9bI2xWWTfxOMgcCyW23HbJI1khkRqo5iCp3TmIuWfWSn5JpDi9OPN1n
j/xHPVYx8oo5FP34cGgtcvqaWevZu+ZQIZ8W6YD8njWYNdVgDusVXPQ2IO9/
Wa2V1GQOHHunTMzKnJx7hFZzeKgwh9uI9c/BtS6k2xzU2pwHMQu5Nk5NjJqD
ZWbpSRdki8AKuzEhMqjs1U/agjw0mdaasIwMa0/FTWBOCNvnpSdBhsTpV3au
yB0HjPf5y5Lh4MOlJczhx67njeDJIEvN3rwN+UZa0twQkEFS37nTHTtPGcmX
wqzJUCIwg/dAls1ONeLlkMH8TGkg5ti8zF0qjmR4+DXhL+bNxVc/unqQ4ejO
OVkvZP7K0kfvolD8kd5VPsjkJw+c3WPIINXi7YY5qLps8lssGdJnNdMxdz2v
0MbFk2GD6+Hl27H+NtSmsVLJUPv96gxm977mA49KyRDQffyKH3JSf6u0bRkZ
st2UWzHXDbbfbS0ng16dnNAOZJORrpGfNWR4cYO8GzPux+AWg/dkOHxpu+ZO
5Ae8v8yvjJHBKqTxxC7kb/wzLUaTZDhkvvkOZlWhueCnU2S4M7jtI+aEZYuF
3b/J0Mg3oL0b2VuaX0EOR4Eda5c9xyyuKT2foEGBO1FSQ/5YPxr3OPVoU2Cu
t4kvADn3wIuiNfoUOPDGWB2zYf2+rU0ECvB4dXphdgruqJBlUsAP960dc1J5
TkzeVgocrvj8YA/Wn+2zbT/dKRDZaPIeM17M0dDKmwJKXYRRzA88eT592UmB
Q+62ynuR2/h9QT+CAlHaA4cxK6zX4S87T4EOgzRSIFb/XKybcBIFVkVtXYe5
OK/zvmsKBRzqOn0wU38l+C1mUeCLt/xZzG7p319CMQVGezJ7MecOlsa/fU4B
U4rXviDk4TOiA8p1FBhI3RyH2cjMjxJUT4G903IZmGviZL9JfqBAuuFMJeYB
g8i1m/soMFRJ/odZ4wBdYmCeAsb3vQ4FI/9y2qx2cIkChLS9ZzHX6gUTpXmo
0FNulY3Zuy9vm40wFQJ3OVdizrIRKCyWpcLXomVzmKVk3jLDTKjwPtNvRwiW
7/vQRlESFQ5e8AnDXFK3tCOfQoWVKSZHMDtEG55tByok45zTMccPXuygOlLh
eWH2a8z/SlxD+fdSoZz0Si0UuTEh9ER2MBX6lawMMGf7JaSZhVOBpJ9NwkxV
qHqy6yAVfK5+tse8/4jqsoZ4Kmzb1h2Kedxh+GpyARXy+KvLMVdq/3u4ppgK
0vtNajEn8Cq8eXWLCieexddj1nloNzl/nwoZ2z91YfZVvk3zqKXCmBBzAXPX
t/BWzU9UwM3JEsOQq/YMXTs6SAWZS0FUzDnjG8N7v1AhJ6EUMHtPEKRSxqnA
PvtnHeaRn5OOAgtUuHvvuh/m6fk9bwdlaHBqMioRc3tUdyZDgQYGDfkpmB8v
2AdkrqSB+v2nmZijl3RFNqrTIDCiJh8zH89X22dGNNgdyvsY83Jhv9rL9jSw
eJPfjflHXMvFRQcanPj18RPmZpyVz5YNNLhk9mcIc+oydZ7lrjQYK1EZx6ws
0U8/vIMGK81rFzHrybqXu8fSYCbirkI4sljq2/jHx2kQe1deGfN3OZqrTBwN
mPERqphLFJTm3p6jQWmBmBZmc+UOIi2LBh2hFSaYrfEuJYplNFD8q2uP+QH+
a6JfOQ3E9/Wtw6ypcSj0bhUNlJdOO2IW0sw3sXmO6r/5ygVzndb0g5AmGhRc
6vTEbK+XXF73DTn3UCjmCj2dTKkJGuwvvhOOWV+/6qDHTxqE+Hbu49Zv8Jn2
a44GFJbiQczv1hCfqghaQKeOzTHMToTW2n2qFtBf5H0Rcw1h97UadQu4JKxz
CTPBZOm4qJYFiOwdTcYsZaphc8XAAswubUvH3EKMqGugWADsns/FvJks04B3
sYDBfsJNzK/IRbeCtlhAge7VW9z+UCzOlW+zgIAk8TuYFah+6x19LGAtf3sJ
5k7ag6aDQRbwW8qoDLM706XtQ7wF3GiRqMHsHFIU4nfWAqasNjzj9uPKkujc
BQvYJnKhFjOZv4ClnGYBXW1LLzBL183c3VlgASmUa28w169PS1h8ZgHBWTrN
mJ8dGdM8/9IC3pVqt2B+XMJ8tvqNBXhJ4lsxF0h9nbNpsoC0Fol2zLHt5B2J
fRZweLiyk7sezy6m5qIFfFx+oB+z4QXD7kd/LSAsDAYwa9Qc22/PR0f/iUKD
3P6p698OFqHDyrmEIcwTX6KVKuTpwOsVOoz5i1zTw3Ur6TCiqzGCuYetseGT
Ch3cHFu5flPcECegRYf9TQajmPMDV82sJ9Lhxr3qMcxZuaGJA+Z0YLh6jmNO
ev9SP4JGB4lrC1zHEoK2Z7DoaF6DCcxuM0/fDznR4e/jiB/c+mK8b0QG0sGA
cGUas/ImUb7GEDos5MjOYNZaU7YVH0GHZP94rim9oiKNB+mQYeo/i9mb/mgX
Pp4O8gYK85hv/xHXbLxKhyq68SLmsrbHh/DX6fBY+hzXNbd9WyOL6bAx8yvX
rR7lx/EldMh6m7WEeeGJ32DkEzrkUX/9wcw5XHkZ30GH0UV/ngjkjZt3zkV2
0+H+p/tcuxmucGzso8PusiWug/p2/o38QgentWd4MacwpDwap+hw5EA2H+bB
v7uVosQZMNF2UQDzeLt0WKMkA7JPN3A9e+fpG7wMAxp3CAliFvGSiWpUYkDR
tQNcG1dXf8TrMMD6lJMQ5pgjcimNLAbgnfqEMecmjpfj7BmwwpeFw/z0Sm0f
awMDErZe4/rv8yCdR14MIDq5i2BWabN2+LmTAeTDD7hmDiuF6QcxIGpMZBnm
WFxd5eVDDCB13OI6TzGnv/M4AwJiF7iu0QsXlDnDANdyG1HMvA6qjvEZDAjV
aeP62MUDgyFlDBAa6xTDfPWqg/DNJww4KiYnjrn2Pt7gywsGOLGduOZvf79v
awsDFKyrubaej65+N4DGnbUlMJ9Q0hFh/WAApz+e6xcWrRvL/jJAxOkz14Je
sdl64kwo5aUux3zqWoeRtB4TLp1p41pq+6eAJHMmRMfKS3L7tXq4YIUNE1TP
beJa79N4f+JGJix+u8B1Wc6vlZLeTNjW9IrrRiXeJIloJtQt6q3A/CVNAiee
ygSF+ONcL8koHxa9x4TJFx+4lknSnRZpYKJzKyeF2WC5eQBuhAm4bmeu1W3V
Q/h5ARRvnua6pNo5+OBKgGb/Aa7plJNBP80A+Po0pTHXl5YF7nYC8DBw49rV
4OveTwEAx7NOcN2lvV7eLh/NZ/OMaw/8g2elvQBJM0NciyWeIHCkLSHh6izX
VUsuV3o5lqB1llcGc0uozpOJY5YQb4Xj+tvwYse/Kkto/CXK9biLvDDfrCXM
T4hzPVlrYiZgxIKH/Mu5Vrn6WMfEjwV8Sf95/VGGsncGC64M/Ofh3XWVIi0s
OCopyXWMk5PbfTErWK77n1nFVjXxLCswMfvPQnzmmp6RVlBO+89lzmHZGret
QI/5n3cU3JYeG7ACfsv/fOjfGGnNSmsQY/3n5K1624JdrOHi/92h0cLqPW0N
H/7vVT+i9ddWW8PP/zvgm3bz5II18Fv950efWyKTSTYg9n//D1cSN3s=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{0, All},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.6630134338862762`*^9, 3.663013468814857*^9}, 
   3.66301355708409*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reef data", "Section",
 CellChangeTimes->{{3.663003672927095*^9, 3.663003673878709*^9}, {
  3.6630117734338617`*^9, 3.6630117740724382`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Loading data and generating empirical PCF\
\>", "Subsection",
 CellChangeTimes->{{3.663336674950741*^9, 3.663336686190399*^9}}],

Cell["Load data from reef fish", "Text",
 CellChangeTimes->{{3.662756272519383*^9, 3.66275628084601*^9}, {
  3.663003689241371*^9, 3.663003717240877*^9}, {3.663012374715109*^9, 
  3.663012376169477*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datadir", "=", "\"\</Users/mmosmond/Documents/PHD/PCFinR/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"datadir", "<>", "\"\<sbc_fish_2010\>\"", "<>", "\"\<.csv\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.66275556963586*^9, 3.662755648268983*^9}, {
  3.662755792232341*^9, 3.662755820742881*^9}, {3.662756234703286*^9, 
  3.662756236070477*^9}, {3.662831741309568*^9, 3.662831743309153*^9}, {
  3.662832232549533*^9, 3.6628322513403387`*^9}, {3.663003785422308*^9, 
  3.663003804166194*^9}}],

Cell["\<\
The data comes with many columns\
\>", "Text",
 CellChangeTimes->{{3.662756378289138*^9, 3.662756385175745*^9}, {
  3.662756559277006*^9, 3.662756575755829*^9}, {3.662756815034315*^9, 
  3.662756817745803*^9}, {3.6630038415421677`*^9, 3.663003841941766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"realdata", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6627566279933243`*^9, 3.662756642669874*^9}, {
  3.6627566958390627`*^9, 3.662756697638322*^9}, {3.663003810989853*^9, 
  3.663003811841552*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\"\>", ",", "\<\"Day\"\>", ",", "\<\"Month\"\>", 
   ",", "\<\"Year\"\>", ",", "\<\"SampleDescription\"\>", 
   ",", "\<\"Latitude\"\>", ",", "\<\"Longitude\"\>", ",", "\<\"Genus\"\>", 
   ",", "\<\"Species\"\>", ",", "\<\"Abundance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.662756630411153*^9, 3.662756698041078*^9, 3.662831748833181*^9, 
   3.6628324741263437`*^9, 3.662836177113246*^9, 3.6628419035938063`*^9, 
   3.6628422887068853`*^9, 3.6628429710841227`*^9, 3.6628444274198914`*^9, 
   3.66284466732751*^9, 3.662991742090397*^9, 3.6629921459665737`*^9, 
   3.663003812766514*^9, {3.6630040318345613`*^9, 3.66300404649658*^9}, 
   3.66300413210555*^9, 3.663004569313632*^9, 3.663004766240934*^9, 
   3.6630049341922417`*^9, 3.6630049851604643`*^9, 3.663006056421229*^9, 
   3.663011739306911*^9, 3.663011877400483*^9, 3.663331220494487*^9, 
   3.66333227660953*^9, {3.6633323103496447`*^9, 3.663332325926021*^9}}]
}, Open  ]],

Cell["\<\
Lets first drop the row names, time, description, and genus\
\>", "Text",
 CellChangeTimes->{{3.663003860463256*^9, 3.663003883391778*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"realdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"realdata", ",", "None", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"realdata", ",", "None", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"realdata", ",", "None", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"realdata", ",", "None", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"realdata", ",", "None", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"realdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"realdata", ",", "None", ",", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.663003885556419*^9, 3.6630039088261766`*^9}, {
  3.663003948773383*^9, 3.663003948849*^9}, {3.6630040270955*^9, 
  3.663004043409206*^9}, {3.663004097741003*^9, 3.663004128884264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"realdata", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.663004220088417*^9, 3.663004224175254*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Latitude\"\>", ",", "\<\"Longitude\"\>", 
   ",", "\<\"Species\"\>", ",", "\<\"Abundance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6630042246282*^9, 3.663004574312356*^9, 3.66300476757286*^9, 
   3.663004934308145*^9, 3.663004985243478*^9, 3.663006056503824*^9, 
   3.663011739406105*^9, 3.6630118774837914`*^9, 3.663331220557497*^9, 
   3.663332276692775*^9, {3.663332310412822*^9, 3.663332326002125*^9}}]
}, Open  ]],

Cell["Then drop the column names", "Text",
 CellChangeTimes->{{3.66300422621437*^9, 3.6630042319739637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"realdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"realdata", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.663004233357748*^9, 3.663004246463375*^9}}],

Cell["Get each variable of interest from data table", "Text",
 CellChangeTimes->{{3.662411487805341*^9, 3.6624115162679358`*^9}, {
  3.66241239544563*^9, 3.662412400485498*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gx", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "realdata", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gy", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "realdata", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "realdata", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ab", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "realdata", "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6627564818879433`*^9, 3.662756506084942*^9}, {
  3.6627568388114223`*^9, 3.66275689858679*^9}, {3.6627571596583757`*^9, 
  3.662757175800811*^9}, {3.663004190256374*^9, 3.663004207051137*^9}}],

Cell["Define the spatial extent of the area of interest", "Text",
 CellChangeTimes->{{3.662411468482938*^9, 3.6624114723466263`*^9}, {
   3.662412173377927*^9, 3.662412192666273*^9}, 3.662756289862062*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Lx", "=", 
    RowBox[{
     RowBox[{"Max", "[", "gx", "]"}], "-", 
     RowBox[{"Min", "[", "gx", "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "total", " ", "x", " ", "and", " ", "y", " ", "distance", " ", "of", " ", 
     "area", " ", "of", " ", "interest"}], ",", " ", 
    RowBox[{
    "ie", " ", "a", " ", "grid", " ", "with", " ", "length", " ", "Lx", " ", 
     "and", " ", "width", " ", "Ly"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ly", "=", 
   RowBox[{
    RowBox[{"Max", "[", "gy", "]"}], "-", 
    RowBox[{"Min", "[", "gy", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbins", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Asub", "=", 
   RowBox[{"Lx", "/", "nbins"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"space", " ", "between", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "we", " ", "chop", " ", "up", " ", "the", " ", "total", " ", 
      "area", " ", "into", " ", "squares", " ", "with", " ", "length", " ", 
      "Asub"}], ";", " ", 
     RowBox[{
     "best", " ", "if", " ", "this", " ", "divides", " ", "the", " ", "total",
       " ", "space", " ", "nicely"}]}], ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"Lx", "/", "Asub"}], " ", "and", " ", 
     RowBox[{"Ly", "/", "Asub"}], " ", "are", " ", "integers"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6630042731806097`*^9, 3.663004367646329*^9}, {
  3.663004760680716*^9, 3.663004760966917*^9}, {3.663004929710824*^9, 
  3.663004929869749*^9}, {3.663004980623206*^9, 3.663004980887569*^9}, {
  3.6630054281297493`*^9, 3.663005445658505*^9}, {3.663006051164892*^9, 
  3.663006051267058*^9}, {3.663332273320456*^9, 3.663332273429709*^9}, {
  3.663332306568028*^9, 3.66333232352814*^9}}],

Cell["\<\
We then translate the lat longs to start at (0,0)\
\>", "Text",
 CellChangeTimes->{{3.663004486833626*^9, 3.663004507825437*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gx", "=", 
   RowBox[{"gx", "-", 
    RowBox[{"Min", "[", "gx", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gy", "=", 
   RowBox[{"gy", "-", 
    RowBox[{"Min", "[", "gy", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.663004509278392*^9, 3.663004529460001*^9}}],

Cell["\<\
Then the locations and bins look like\
\>", "Text",
 CellChangeTimes->{{3.663005370966436*^9, 3.663005375645767*^9}, {
  3.663005718094393*^9, 3.663005719043908*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"gx", ",", "gy"}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Asub", "*", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"Max", "[", "gx", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Ly", "/", "Asub"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Asub", "*", "i"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Asub", "*", "i"}], ",", 
            RowBox[{"Max", "[", "gy", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nbins"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.66300534713879*^9, 3.663005361774621*^9}, {
  3.6630053984342937`*^9, 3.663005419213439*^9}, {3.66300545757108*^9, 
  3.663005647163575*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDwZWRgANENb6p3Hzp3zb6ht0e+5NYje7rz30989unyNXuG
JQW2XNeJ4KtHcwek3bZnYPrvNdfsBMV8hjKduWtSgHyLH4dSVo0Afr/tlNPG
QL7DJwl99dOk883U7v40AvKPiBV+sB4E/BUbsu+pAvkz+qPEc4chf1aItKUc
yL8Wec83EsHf9XWWnAiQP20TT+Ea2vMbptnMmyYP5P96+/qA5dDnM1zQ+zF9
4i17BoYHu2dNl6M9n7PEnqsbxA9w06wRxOA3BIhrTmkF8SGA7vySgumzAoDl
b/OBUwtdX9rTnf9IeGZYGLC+KF/+8WAiHfgmZ7bfdgTyL06M+edMOZ9hhuYU
JVegf6rMVtuFE+Y3eEYwHXMD8ufKfInOIoKfK/jf1xrID1p7/pkT6XwG3lO+
5rZA9/odc9oXSgT/bFjcJ3sg3+v+1qkZhPkNi1/fXrPuun0DyHvRD0jmM/i9
WVi75ro9g495p2PCAPBnfbJy/Q0ML3ODuBmF9+wZXhw+s/AnkF/pxPWzmgz+
lMKljAXA8GH7IOYR8HiU/yxqC0MukO/kaV4RSjm/galF45DVDXuG95tV2WJu
DHk+g7xD7kcbIB39MkohbQjwt2yalgriT6z7bVUwCPjxm2PMQOGppyj/JWf4
8xsebdyRZAzkp2zbz1c++PgMH/mjq0yA9POn3Fsbhx+/YbaAorcRkF+9+1R9
7sjjM6jZqnrpA+mXcWesi4cA/8PTM2WtfcB22OLj73MfDX/+BdtNO7P67Bs2
/LcyH4p8hopLh1Jdgelu50XBU49HAB/aD5Pbv/3l+VE+IT4AOgA1kw==
      
      "]]}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLfD34XSvw052q/Kfx5i6HLLX1L898YJpoT2Mv7p1
Wep500Y4P65xxXKp9xPh/IeMThO4ls6C82c82Ww4b/pCOL/yQwh7rOUyOD9M
9kbYr+5VcH5uUeYkW+v1cH5p6YKHAa82wvmGTn/Nivi3wPlcyolNz5K2wfmJ
Itu4TvXtgPOzxdfx7lu/C86fpLeWjfX/HjjfPGyuzW61/XD+Hw8vk6R9B+D8
7fnT2d8/Pgjnb5SLrdz89RCcvytcLW2h3BE4n0ky4+Mx46NwfkTK2u+iCcfg
/A4LF+u3bcfh/O9TgmX/zDwB55dUp1WZHDkJ5xu8+li65NYpOP/Yw3Pr5rw+
DednJa9P2id8Fs73zeXYKq5xDs63Z0xtmhV8Hs5n7e88dsnmApzf9VBG+stR
BF/sp6HuqqiLcP6hkGa+mqcI/u2SWr5JuZfg/N+RP0/bMF6G862aN0YwdyP4
jYWvF8UpXIHzny9O3HN1NYK/a1bDlwkmV+H8KWGKrx6cQPD7wv6t8wm+Buf3
S8ca+r5E8P8uSbk0seY6wj9FK5w+sd6A8+VY8wqez0LwL93Oz/2hehPO/1wm
1em7DsGXvu6WZO50C85Pql7PZXsGwT9dF9LmJnkbzjdp+skYkIbgAwAHA5V7

      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLfD34XSvw052q/Kfx5i6XLLX1L898YJpoT2Mv7p1
Wep500Y4P65xxXKp9xPh/IeMThO4ls6C82c82Ww4b/pCOL/yQwh7rOUyOD9M
9kbYr+5VcH5uUeYkW+v1cH5p6YKHAa82wvmGTn/Nivi3wPlcyolNz5K2wfmJ
Itu4TvXtgPOzxdfx7lu/C86fpLeWjfX/HjjfPGyuzW61/XD+Hw8vk6R9B+D8
7fnT2d8/Pgjnb5SLrdz89RCcvytcLW2h3BE4n0ky4+Mx46NwfkTK2u+iCcfg
/A4LF+u3bcfh/O9TgmX/zDwB55dUp1WZHDkJ5xu8+li65NYpOP/Yw3Pr5rw+
DednJa9P2id8Fs73zeXYKq5xDs63Z0xtmhV8Hs5n7e88dsnmApzf9VBG+stR
BF/sp6HuqqiLcP6hkGa+mqcI/u2SWr5JuZfg/N+RP0/bMF6G862aN0YwdyP4
jYWvF8UpXIHzny9O3HN1NYK/a1bDlwkmV+H8KWGKrx6cQPD7wv6t8wm+Buf3
S8ca+r5E8P8uSbk0seY6wj9FK5w+sd6A8+VY8wqez0LwL93Oz/2hehPO/1wm
1em7DsGXvu6WZO50C85Pql7PZXsGwT9dF9LmJnkbzjdp+skYkIbgAwA7zpi7

      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLfD34XSvw0529erR3AFpt+019W9PvGBaaA/jr25d
lnretBHOj2tcsVzq/UQ4/yGj0wSupbPg/BlPNhvOm74Qzq/8EMIea7kMzg+T
vRH2q3sVnJ9blDnJ1no9nF9auuBhwKuNcL6h01+zIv4tcD6XcmLTs6RtcH6i
yDauU3074Pxs8XW8+9bvgvMn6a1lY/2/B843D5trs1ttP5z/x8PLJGnfATh/
e/509vePD8L5G+ViKzd/PQTn7wpXS1sodwTOZ5LM+HjM+CicH5Gy9rtowjE4
v8PCxfpt23E4//uUYNk/M0/A+SXVaVUmR07C+QavPpYuuXUKzj/28Ny6Oa9P
w/lZyeuT9gmfhfN9czm2imucg/PtGVObZgWfh/NZ+zuPXbK5AOd3PZSR/nIU
wRf7aai7KuoinH8opJmv5imCf7uklm9S7iU4/3fkz9M2jJfhfKvmjRHM3Qh+
Y+HrRXEKV+D854sT91xdjeDvmtXwZYLJVTh/SpjiqwcnEPy+sH/rfIKvwfn9
0rGGvi8R/L9LUi5NrLmO8E/RCqdPrDfgfDnWvILnsxD8S7fzc3+o3oTzP5dJ
dfquQ/Clr7slmTvdgvOTqtdz2Z5B8E/XhbS5Sd6G802afjKCaBgfAJ8SYrM=

      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLfD34XSvw052q/Kfx5i6PLLX1L898YJpoT2Mv7p1
Wep500Y4P65xxXKp9xPh/IeMThO4ls6C82c82Ww4b/pCOL/yQwh7rOUyOD9M
9kbYr+5VcH5uUeYkW+v1cH5p6YKHAa82wvmGTn/Nivi3wPlcyolNz5K2wfmJ
Itu4TvXtgPOzxdfx7lu/C86fpLeWjfX/HjjfPGyuzW61/XD+Hw8vk6R9B+D8
7fnT2d8/Pgjnb5SLrdz89RCcvytcLW2h3BE4n0ky4+Mx46NwfkTK2u+iCcfg
/A4LF+u3bcfh/O9TgmX/zDwB55dUp1WZHDkJ5xu8+li65NYpOP/Yw3Pr5rw+
DednJa9P2id8Fs73zeXYKq5xDs63Z0xtmhV8Hs5n7e88dsnmApzf9VBG+stR
BF/sp6HuqqiLcP6hkGa+mqcI/u2SWr5JuZfg/N+RP0/bMF6G862aN0YwdyP4
jYWvF8UpXIHzny9O3HN1NYK/a1bDlwkmV+H8KWGKrx6cQPD7wv6t8wm+Buf3
S8ca+r5E8P8uSbk0seY6wj9FK5w+sd6A8+VY8wqez0LwL93Oz/2hehPO/1wm
1em7DsGXvu6WZO50C85Pql7PZXsGwT9dF9LmJnkbzjdp+skYkIbgAwBwmZv7

      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLfD34XSvw052U7wVtzhdfWavqX974gXTQnsYf3Xr
stTzpo1wflzjiuVS7yfC+Q8ZnSZwLZ0F5894stlw3vSFcH7lhxD2WMtlcH6Y
7I2wX92r4PzcosxJttbr4fzS0gUPA15thPMNnf6aFfFvgfO5lBObniVtg/MT
RbZxnerbAedni6/j3bd+F5w/SW8tG+v/PXC+edhcm91q++H8Px5eJkn7DsD5
2/Ons79/fBDO3ygXW7n56yE4f1e4WtpCuSNwPpNkxsdjxkfh/IiUtd9FE47B
+R0WLtZv247D+d+nBMv+mXkCzi+pTqsyOXISzjd49bF0ya1TcP6xh+fWzXl9
Gs7PSl6ftE/4LJzvm8uxVVzjHJxvz5jaNCv4PJzP2t957JLNBTi/66GM9Jej
CL7YT0PdVVEX4fxDIc18NU8R/NsltXyTci/B+b8jf562YbwM51s1b4xg7kbw
GwtfL4pTuALnP1+cuOfqagR/16yGLxNMrsL5U8IUXz04geD3hf1b5xN8Dc7v
l4419H2J4P9dknJpYs11hH+KVjh9Yr0B58ux5hU8n4XgX7qdn/tD9Sac/7lM
qtN3HYIvfd0tydzpFpyfVL2ey/YMgn+6LqTNTfI2nG/S9JMxIA3BBwD02JrD

      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Epilog->{{
     LineBox[{{0.1427065566666646, 0}, {0.1427065566666646, 
       0.7942333000000019}}], 
     LineBox[{{0.2854131133333292, 0}, {0.2854131133333292, 
       0.7942333000000019}}], 
     LineBox[{{0.4281196699999938, 0}, {0.4281196699999938, 
       0.7942333000000019}}]}},
  Method->{},
  PlotRange->{{0, 0.42811966999999385`}, {0, 0.7942333000000019}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.008562393399999877, 0.008562393399999877}, {
   0.01588466600000004, 0.01588466600000004}}]], "Output",
 CellChangeTimes->{{3.663005354005896*^9, 3.663005362230439*^9}, {
   3.6630054706061983`*^9, 3.663005528207303*^9}, {3.663005589656167*^9, 
   3.663005647796575*^9}, 3.663006056703158*^9, 3.663011739573537*^9, 
   3.663011877666686*^9, 3.6633312208184757`*^9, 3.66333227686941*^9, {
   3.663332310594852*^9, 3.6633323262034197`*^9}}]
}, Open  ]],

Cell["\<\
This is how many locations we have\
\>", "Text",
 CellChangeTimes->{{3.663006023545032*^9, 3.663006028670364*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", 
   RowBox[{"Union", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"gx", ",", "gy"}], "}"}], "]"}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6630059729932623`*^9, 3.663006036408293*^9}}],

Cell[BoxData["39"], "Output",
 CellChangeTimes->{{3.6630059817937613`*^9, 3.663006056754058*^9}, 
   3.663011739607011*^9, 3.663011877699772*^9, 3.663331220860283*^9, 
   3.6633322769277163`*^9, {3.663332310648704*^9, 3.663332326234715*^9}}]
}, Open  ]],

Cell["Some summary statistics of the data", "Text",
 CellChangeTimes->{{3.6624115004831676`*^9, 3.6624115190117893`*^9}, {
  3.662412416239183*^9, 3.662412426541686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Uspecie", "=", 
    RowBox[{"Union", "[", "sp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Nspecies", "=", 
    RowBox[{"Length", "[", "Uspecie", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TotAbundance", "=", 
    RowBox[{"Total", "[", "ab", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"total", " ", "abundance"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "species"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394155397892*^9, 3.662394208972786*^9}, {
  3.66239435484977*^9, 3.662394355553513*^9}, {3.662394932920998*^9, 
  3.662394933324882*^9}, {3.662396920669482*^9, 3.662396931205062*^9}, {
  3.662411451991355*^9, 3.662411457827334*^9}, {3.662412431854793*^9, 
  3.6624124470392838`*^9}, {3.6627569063475637`*^9, 3.662756919531727*^9}, {
  3.662757178672894*^9, 3.6627571860160637`*^9}}],

Cell["Defining the coordinate system of the area", "Text",
 CellChangeTimes->{{3.6624115301840067`*^9, 3.662411532736253*^9}, 
   3.662412483413187*^9, {3.6624127080035973`*^9, 3.6624127139072323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allpos", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Lx", "/", "Asub"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Ly", "/", "Asub"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"coordinates", ",", " ", 
    RowBox[{"in", " ", "translated", " ", "form"}], ",", " ", 
    RowBox[{"ie", ".", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyCpos", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "i"}], "+", "1"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "j"}], "+", "1"}], ")"}], "/", "2"}]}], "}"}],
          "//", " ", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Lx", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ly", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], 
         "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"halfway", " ", "points", " ", "between", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "use", " ", "later", " ", "to", " ", "derive", 
     " ", "the", " ", "distances", " ", "between", " ", "centers", " ", "of", 
     " ", "each", " ", "\"\<bin\>\"", " ", 
     RowBox[{"(", 
      RowBox[{"area", " ", "below", " ", 
       RowBox[{"(", "south", ")"}], " ", "and", " ", "to", " ", "left", " ", 
       RowBox[{"(", "west", ")"}], " ", "of", " ", "each", " ", 
       "coordinate"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allpair", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"allpos", ",", "allpos"}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pairs", " ", "of", " ", "each", " ", "translated", " ", "coordinate", 
     " ", "with", " ", "each", " ", "other"}], ",", " ", 
    RowBox[{"e", ".", "g", "."}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "allpos", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", 
    RowBox[{"coordinates", "/", "bins"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395041124155*^9, 3.662395076995739*^9}, 
   3.662396503297634*^9, {3.662397225252562*^9, 3.66239727282128*^9}, {
   3.662397305190036*^9, 3.662397317542131*^9}, {3.662402580564127*^9, 
   3.662402589155075*^9}, {3.6624125591567297`*^9, 3.662412674941476*^9}, {
   3.6624128238176327`*^9, 3.662412840042054*^9}}],

Cell["Locations of plots (the bin they are in)", "Text",
 CellChangeTimes->{{3.662411540064125*^9, 3.662411543224874*^9}, 
   3.66241271663524*^9, {3.6624129056691236`*^9, 3.662412919045101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gx", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#",
             "<", 
            RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gx", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}]}], " ", "<", "#", "\[LessEqual]",
             " ", 
            RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"which", " ", "plots", " ", 
      RowBox[{"(", 
       RowBox[{
       "their", " ", "position", " ", "in", " ", "the", " ", "data", " ", 
        "vector"}], ")"}], " ", "have", " ", "x", " ", "location", " ", 
      "between", " ", "two", " ", "coordinates"}], ",", " ", 
     RowBox[{
      RowBox[{
      "for", " ", "all", " ", "pairs", " ", "of", " ", "x", " ", 
       "coordinates"}], ";", " ", 
      RowBox[{"for", " ", "p", " ", "between", " ", "1", " ", "and", " ", 
       RowBox[{"Lx", "/", "Asub"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"gy", ",", 
         RowBox[{"x_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Asub", "*", 
              RowBox[{"(", 
               RowBox[{"q", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", 
             "#", "<", 
             RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", 
       "1"}], "]"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gy", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"q", "-", "1"}], ")"}]}], "<", "#", "\[LessEqual]", 
            RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "which", " ", "plots", " ", "have", " ", "y", " ", "location", " ", 
      "between", " ", "two", " ", "coordinates"}], ",", " ", 
     RowBox[{
      RowBox[{
      "for", " ", "all", " ", "pairs", " ", "of", " ", "y", " ", 
       "coordinates"}], ";", " ", 
      RowBox[{"for", " ", "q", " ", "between", " ", "1", " ", "and", " ", 
       RowBox[{"Ly", "/", "Asub"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rule1", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"allpos", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"nplot", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"translate", " ", "from", " ", "coordinates", " ", 
     RowBox[{"(", "tuple", ")"}], " ", "to", " ", "single", " ", 
     "identifying", " ", "number"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"rule2", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"nplot", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"allpos", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"translate", " ", "back"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"XYpos", "[", 
      RowBox[{"{", 
       RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
     RowBox[{"Intersection", "[", 
      RowBox[{
       RowBox[{"Xpos", "[", "p", "]"}], ",", 
       RowBox[{"Ypos", "[", "q", "]"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"which", " ", "plots", " ", "have", " ", "location", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "within", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{"p", "-", "1"}], ")"}]}], ",", 
       RowBox[{"x", " ", "p"}]}], ")"}], " ", "and", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", 
        RowBox[{"(", 
         RowBox[{"p", "-", "1"}], ")"}]}], ",", " ", 
       RowBox[{"y", " ", "p"}]}], ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"possub", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{"XYpos", ",", "allpos"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "which", " ", "plots", " ", "fall", " ", "in", " ", "which", " ", "bin", 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"e", ".", "g", "."}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], "=", 
        RowBox[{"(", 
         RowBox[{"321", ",", "434"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"with", " ", "Asub"}], "=", "100"}], ",", " ", 
       RowBox[{"would", " ", "fall", " ", "in", " ", 
        RowBox[{"(", 
         RowBox[{"400", ",", "500"}], ")"}]}]}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.662395292209701*^9, 3.662395537499296*^9}, {
  3.6623960553689823`*^9, 3.662396067946538*^9}, {3.662397974196926*^9, 
  3.662398051690569*^9}, {3.6623981180157757`*^9, 3.6623981500469017`*^9}, {
  3.6623982769015217`*^9, 3.662398325149023*^9}, {3.66239886727868*^9, 
  3.662398876830975*^9}, {3.6623994181640377`*^9, 3.66239950349568*^9}, {
  3.6623997780956163`*^9, 3.6623998470706177`*^9}, {3.6624129296834784`*^9, 
  3.662412931482998*^9}, {3.662833602745944*^9, 3.662833652142746*^9}}],

Cell["Which species are where", "Text",
 CellChangeTimes->{{3.66241155496421*^9, 3.66241156097239*^9}, {
  3.6624129435894413`*^9, 3.662412950140648*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYS", "[", "i_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gx", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"gy", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gives", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "location", " ", "of", " ", 
     "plots"}], ",", " ", 
    RowBox[{"and", " ", "sp", " ", "code"}], ",", " ", 
    RowBox[{"in", " ", "each", " ", "bin"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SabA", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"sp", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
      "&"}], "/@", " ", "Uspecie"}]}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "with", " ", "each", " ", 
    "species", " ", "in", " ", "each", " ", "bin"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SabA", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"[", 
            RowBox[{"possub", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
        "&"}], "/@", " ", "Uspecie"}], ")"}], "*", 
     RowBox[{"ab", "[", 
      RowBox[{"[", 
       RowBox[{"possub", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "of", " ", "each", " ", "species", 
    " ", "in", " ", "each", " ", "bin"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SabA", "[", "i_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ab", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "k", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"sp", "[", 
                 RowBox[{"[", 
                  RowBox[{"possub", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], 
               "]"}], "&"}], "/@", " ", "Uspecie"}], ")"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "Uspecie", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "*", " ", "abundance", " ", "in", 
    " ", "that", " ", "plot", " ", "of", " ", "each", " ", "species", " ", 
    "in", " ", "each", " ", "bin"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SA", "[", "i_", "]"}], ":=", 
    RowBox[{"Boole", "/@", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"[", 
            RowBox[{"possub", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
        "&"}], "/@", " ", "Uspecie"}], ")"}]}]}], " ", "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "at", " ", "least", " ", "one", " ", "plot", " ", 
     "with", " ", "a", " ", "species", " ", "in", " ", "given", " ", "bin"}], 
    ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"presence", "/", "absence"}], " ", "in", " ", "bin"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SA", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Boole", "[", 
     RowBox[{"#", ">", "0"}], "]"}], "&"}], "/@", 
   RowBox[{"SabA", "[", "i", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Spos", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SA", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "possub", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"table", " ", "with", " ", "all", " ", "bins"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395558546788*^9, 3.662395590718184*^9}, {
   3.662395637422887*^9, 3.662395855679844*^9}, {3.662396084462902*^9, 
   3.662396093135119*^9}, {3.6624000366580553`*^9, 3.6624000612422333`*^9}, {
   3.662400105056695*^9, 3.66240013763741*^9}, {3.662400198268684*^9, 
   3.662400203847021*^9}, {3.662400283268598*^9, 3.662400340107189*^9}, {
   3.662400370913103*^9, 3.662400403535512*^9}, {3.662400442030035*^9, 
   3.662400450460515*^9}, {3.662400495985153*^9, 3.662400502456811*^9}, {
   3.662401369958474*^9, 3.6624013885339117`*^9}, 3.6624017363239193`*^9, {
   3.662412958541737*^9, 3.662413003201478*^9}, {3.6627582460381603`*^9, 
   3.662758260113225*^9}, {3.6628318134295197`*^9, 3.662831849986977*^9}, {
   3.6628319319074497`*^9, 3.662831967083124*^9}, {3.662831999183221*^9, 
   3.662832084079393*^9}, {3.662835999562031*^9, 3.6628360509594927`*^9}, {
   3.662843309536722*^9, 3.662843318961556*^9}, 3.6629924525692873`*^9, {
   3.663004822820284*^9, 3.663004841797237*^9}}],

Cell["Covariance in species abundance by distances", "Text",
 CellChangeTimes->{{3.662411564012209*^9, 3.662411577084908*^9}, {
   3.662413007593816*^9, 3.6624130216361732`*^9}, {3.662413321726729*^9, 
   3.6624133250631638`*^9}, {3.662843668157742*^9, 3.662843674738571*^9}, 
   3.6629924846744556`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ")"}], "^", "2"}], "]"}], 
    "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Euclidean", " ", "distance", " ", "between", " ", "center", " ", "of", 
    " ", "two", " ", "bins", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"in", " ", "translated", " ", "space"}], ";", " ", 
       RowBox[{
       "need", " ", "to", " ", "multiply", " ", "by", " ", "Asub", " ", "to", 
        " ", "get", " ", "real", " ", "distances"}]}], ",", " ", 
      RowBox[{"which", " ", "we", " ", "do", " ", "later"}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"not", " ", "sure", " ", "what", " ", "this", " ", "does"}], ",", 
    " ", 
    RowBox[{"but", " ", "doesnt", " ", "hurt"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alldist", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"dist", ",", 
      RowBox[{"allpair", "/.", "rule1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "distance", " ", "between", " ", "center", " ", "of", " ", "all", " ", 
    "pairs", " ", "of", " ", "bins"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rvec", "=", 
    RowBox[{"Union", "[", "alldist", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "unique", " ", "distances", " ", "in", " ", "increasing", " ", 
    "order"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"indexpair", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"index", ",", 
      RowBox[{"allpair", "/.", " ", "rule1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "translate", " ", "from", " ", "tuples", " ", "of", " ", "coordinates", 
    " ", "to", " ", "pairs", " ", "of", " ", "coordinate", " ", "indices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"posdist", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"alldist", ",", "#"}], "]"}], "&"}], "/@", " ", "rvec"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "identify", " ", "coordinate", " ", "index", " ", "pairs", " ", "whose", 
    " ", "bin", " ", "centers", " ", "are", " ", "given", " ", "distance", 
    " ", "apart"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cov", "[", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"SabA", "[", "i", "]"}], "]"}], "\[NotEqual]", "0"}], "&&", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"SabA", "[", "j", "]"}], "]"}], "\[NotEqual]", "0"}]}], ",", 
      
      RowBox[{
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"SabA", "[", "i", "]"}], " ", 
          RowBox[{"SabA", "[", "j", "]"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"SabA", "[", "i", "]"}], "]"}], " ", 
          RowBox[{"Mean", "[", 
           RowBox[{"SabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}], 
      ",", "Null"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<covariance\>\"", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "bins"}], ",", " ", 
    RowBox[{
    "note", " ", "that", " ", "the", " ", "\"\<covariance\>\"", " ", "is", 
     " ", "taken", " ", "over", " ", "all", " ", "species"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "\"\<covariance\>\"", " ", "in", " ", "community", " ", 
      "composition"}], ";", " ", 
     RowBox[{
      RowBox[{
      "only", " ", "computes", " ", "if", " ", "some", " ", "data", " ", "in",
        " ", "a", " ", "bin"}], " ", "-", " ", 
      RowBox[{"to", " ", "prevent", " ", "zero", " ", "denominators"}]}]}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662396046222033*^9, 3.66239604622891*^9}, {
   3.662396115390656*^9, 3.6623964096680927`*^9}, {3.662396685632201*^9, 
   3.662396708518929*^9}, {3.662398383172187*^9, 3.662398401009489*^9}, {
   3.662400582990465*^9, 3.662400610172123*^9}, {3.662400684528366*^9, 
   3.662400698271431*^9}, {3.6624007584947987`*^9, 3.662400768955894*^9}, {
   3.662400801323835*^9, 3.662400832977763*^9}, {3.662400912708703*^9, 
   3.662400934469743*^9}, {3.662401038161566*^9, 3.662401045495079*^9}, {
   3.6624011896463223`*^9, 3.662401194686388*^9}, {3.662401315893465*^9, 
   3.6624013594664583`*^9}, {3.6624013981437902`*^9, 
   3.6624014153380213`*^9}, {3.662401683564044*^9, 3.662401732307383*^9}, {
   3.6624130293654127`*^9, 3.662413065229185*^9}, {3.662413147945756*^9, 
   3.6624131547927437`*^9}, {3.6624133583115*^9, 3.662413395382146*^9}, {
   3.662413444492093*^9, 3.6624135757417507`*^9}, {3.6627548194806147`*^9, 
   3.66275481983049*^9}, {3.662754862013492*^9, 3.6627548706385736`*^9}, {
   3.662755281695499*^9, 3.662755302757578*^9}, {3.662757002337412*^9, 
   3.662757002568337*^9}, 3.662842654035261*^9, {3.662842773639843*^9, 
   3.662842785351123*^9}, 3.662843697549049*^9, {3.662843859427684*^9, 
   3.662843859906129*^9}, {3.662843907603223*^9, 3.66284390815858*^9}, {
   3.662992279085969*^9, 3.6629922796048107`*^9}, {3.663006071855891*^9, 
   3.6630061244982862`*^9}, {3.6630061682436*^9, 3.663006184556489*^9}, 
   3.663006246683077*^9, {3.663006424359818*^9, 3.663006448663705*^9}, {
   3.6630065154490747`*^9, 3.663006545795649*^9}, {3.6630065802701063`*^9, 
   3.663006615814107*^9}, {3.663006667498393*^9, 3.663006724799355*^9}, {
   3.663006756692234*^9, 3.663006770156837*^9}, 3.663007112794978*^9, {
   3.663007143861808*^9, 3.6630071448658447`*^9}}],

Cell["\<\
 This function can take a while to run (if too long increase Asub)\
\>", "Text",
 CellChangeTimes->{{3.662992487992318*^9, 3.66299250406977*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"allcov", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ParallelMap", "[", 
       RowBox[{"Cov", ",", 
        RowBox[{"indexpair", "[", 
         RowBox[{"[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"posdist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", " ", 
    "with", " ", "species", " ", "at", " ", "each", " ", "distance"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.6630045477100477`*^9, 3.663004964934527*^9, {3.663006249683269*^9, 
   3.663006250323934*^9}, {3.663007114439294*^9, 3.663007115103169*^9}}],

Cell["Remove Nulls (no data)", "Text",
 CellChangeTimes->{{3.663008155939095*^9, 3.663008164665842*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"newallcov", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"allcov", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "Null"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "allcov", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.663007509520028*^9, 3.663007535080752*^9}, {
   3.663007568738155*^9, 3.663007627404351*^9}, {3.663007942482341*^9, 
   3.663008075918963*^9}, 3.66301139768167*^9}],

Cell["Our empirical correlation function", "Text",
 CellChangeTimes->{{3.662411583164523*^9, 3.6624115898929653`*^9}, {
  3.662413328936442*^9, 3.662413339075227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"empPCF", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvec", "*", "Asub"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", "newallcov"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"empirical", " ", "correlation", " ", "function"}], ",", " ", 
    RowBox[{"PCF", ";", " ", 
     RowBox[{
     "first", " ", "element", " ", "of", " ", "each", " ", "pair", " ", "is", 
      " ", "the", " ", 
      RowBox[{"(", "untranslated", ")"}], " ", "distance", " ", "between", 
      " ", "the", " ", "center", " ", "of", " ", "two", " ", "bins", " ", 
      RowBox[{"(", 
       RowBox[{"rvec", "*", "Asub"}], ")"}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", "mean", 
     " ", "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "all", " ", "pairs", 
     " ", "of", " ", "bins", " ", "that", " ", "distance", " ", "apart"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.662401751323216*^9, 3.662401767856126*^9}, {
   3.6624018026823177`*^9, 3.662401805136237*^9}, {3.662402598586731*^9, 
   3.662402656960024*^9}, {3.662403448724161*^9, 3.662403449356001*^9}, {
   3.662413682182837*^9, 3.662413751871039*^9}, 3.6630071606826143`*^9, 
   3.66300809872222*^9}],

Cell["Delete Nulls", "Text",
 CellChangeTimes->{{3.663009494482765*^9, 3.663009501193501*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"empPCF", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"empPCF", ",", 
     RowBox[{
      RowBox[{"NumberQ", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6630111313610973`*^9, 3.663011270235755*^9}, 
   3.663011391001768*^9}],

Cell["which looks like this", "Text",
 CellChangeTimes->{{3.662413762951601*^9, 3.662413766590012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"empPCF", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662402671244444*^9, 3.6624026938166847`*^9}, {
  3.6624027307213984`*^9, 3.6624027646607313`*^9}, {3.66284515333747*^9, 
  3.662845164270727*^9}, {3.663008279024431*^9, 3.663008279583151*^9}, {
  3.6630112748690434`*^9, 3.663011275337687*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    LineBox[{{0., 6.2681933206682166`}, {0.1427065566666646, 
     2.2429439718096194`}, {0.2854131133333292, 3.091212695632082}, {
     0.31910156154158786`, 1.1403508771929824`}, {0.4036350957551234, 
     5.603518866210405}, {0.4281196699999938, 2.920021266184884}, {
     0.5145358074065666, 2.777298012214572}, {0.5708262266666584, 
     1.6024305555555556`}, {0.6382031230831757, 1.2129186602870814`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.1403508771929824`},
  Method->{},
  PlotRange->{{0, 0.6382031230831757}, {1.1403508771929824`, 
    6.2681933206682166`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.012764062461663514`, 0.012764062461663514`}, {
   0.1025568488695047, 0.1025568488695047}}]], "Output",
 CellChangeTimes->{{3.6624026753490877`*^9, 3.662402694224242*^9}, {
   3.662402733657669*^9, 3.662402764957795*^9}, 3.662403280700993*^9, 
   3.662405717953288*^9, 3.6624062969674873`*^9, 3.662406329773899*^9, 
   3.662406416186351*^9, 3.662406804603773*^9, 3.66240683746817*^9, {
   3.662406886173161*^9, 3.66240691093393*^9}, {3.6624069838326597`*^9, 
   3.662407012312221*^9}, {3.662407083140224*^9, 3.662407106243676*^9}, {
   3.662407909118041*^9, 3.662407928023505*^9}, 3.662408841453096*^9, 
   3.662408905364181*^9, {3.6624089446938267`*^9, 3.6624089748889437`*^9}, {
   3.6624090129800463`*^9, 3.6624090870484447`*^9}, 3.662409222978368*^9, 
   3.662410582890629*^9, 3.662410645396593*^9, 3.662411257144088*^9, 
   3.662411323604559*^9, 3.662411410305233*^9, 3.6624114593953867`*^9, 
   3.662411831491273*^9, 3.6627548268499537`*^9, 3.6627551177774353`*^9, 
   3.6627551888229713`*^9, 3.662832514275855*^9, 3.6628445763722677`*^9, 
   3.662845108840994*^9, {3.662845154442807*^9, 3.662845164557125*^9}, 
   3.662992523886785*^9, 3.663004906245803*^9, 3.6630049720982924`*^9, 
   3.6630061522035093`*^9, 3.663007123149496*^9, 3.66300810316823*^9, {
   3.663008280017015*^9, 3.663008289481908*^9}, {3.66301127234011*^9, 
   3.663011275706613*^9}, 3.6630117416225758`*^9, 3.663011879882406*^9, 
   3.663331224223385*^9, 3.663332277867853*^9, {3.6633323109101353`*^9, 
   3.6633323282325497`*^9}}]
}, Open  ]],

Cell["\<\
Method assumes number of individuals grows linearly with increasing size. \
Check:\
\>", "Text",
 CellChangeTimes->{{3.663331833392468*^9, 3.663331855503418*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"j", "*", 
        SuperscriptBox["Asub", "2"]}], ",", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.66333162723367*^9, 3.663331636241304*^9}, {
   3.6633317024244328`*^9, 3.6633317869689007`*^9}, {3.6633318245198708`*^9, 
   3.663331828233143*^9}, {3.663331860393111*^9, 3.663331927485166*^9}, {
   3.6633322344945517`*^9, 3.663332235003913*^9}, 3.663333000524806*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    PointBox[{{0.020365161315655952`, 0.}, {0.040730322631311905`, 0.}, {
     0.06109548394696786, 0.}, {0.08146064526262381, 0.}, {
     0.10182580657827976`, 12327.}, {0.12219096789393571`, 12327.}, {
     0.14255612920959165`, 12327.}, {0.16292129052524762`, 12327.}, {
     0.18328645184090359`, 12327.}, {0.20365161315655952`, 12327.}, {
     0.22401677447221546`, 13101.}, {0.24438193578787143`, 16356.}, {
     0.2647470971035274, 38433.}, {0.2851122584191833, 40864.}, {
     0.3054774197348393, 44505.}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 0.3054774197348393}, {0, 44505.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.006109548394696786, 0.006109548394696786}, {890.1, 
   890.1}}]], "Output",
 CellChangeTimes->{{3.663331756628717*^9, 3.663331788446289*^9}, 
   3.663331828960569*^9, {3.663331865210162*^9, 3.663331879035187*^9}, {
   3.663331922806397*^9, 3.6633319280440283`*^9}, 3.6633322352211943`*^9, 
   3.663332279433188*^9, {3.663332311831361*^9, 3.663332329550037*^9}, 
   3.663333002073822*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fitting the function to the data\
\>", "Subsection",
 CellChangeTimes->{{3.663336730018257*^9, 3.6633367336566896`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "\[Pi]"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Rho]", "\[Lambda]"], ")"}], "2"], 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      FractionBox["r", "\[Lambda]"]}], "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "function", " ", "to", " ", "fit", " ", "to", " ", "the", " ", "empirical",
     " ", "PCF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"what", " ", "does", " ", "this", " ", 
    RowBox[{"do", "?"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fitcor", "=", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{
      RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
      RowBox[{"g", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Rho]", ",", "50"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fit", " ", "the", " ", "function"}], ",", " ", 
    RowBox[{"with", " ", "some", " ", "parameter", " ", "guesses"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624027871760187`*^9, 3.662402882159881*^9}, {
   3.662403440956188*^9, 3.662403443083897*^9}, {3.662413819411948*^9, 
   3.662413832425786*^9}, {3.6628452248990993`*^9, 3.662845233067706*^9}, {
   3.66284544825609*^9, 3.6628454777433033`*^9}, 3.662999882088624*^9}],

Cell["How good is the fit?", "Text",
 CellChangeTimes->{{3.662413841744823*^9, 3.662413844902369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
        ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "fit"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662403357573029*^9, 3.662403400917585*^9}, {
  3.662403460732779*^9, 3.662403460900476*^9}, {3.6624035271260643`*^9, 
  3.6624035294532757`*^9}, {3.662403567283935*^9, 3.662403568012061*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.7143606544701764`"},
    {"\<\"AIC\"\>", "33.44655566456108`"},
    {"\<\"BIC\"\>", "33.684880289600585`"},
    {"\<\"RSquared\"\>", "0.7857704908526323`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.662844576650337*^9, 3.662845108938904*^9, 3.66284523510108*^9, 
   3.662845480109968*^9, 3.6629925433449373`*^9, 3.662999884276883*^9, 
   3.6630112810875177`*^9, 3.6630117417054577`*^9, 3.6630118799659*^9, 
   3.6633312242953787`*^9, 3.663332277894319*^9, {3.663332311025941*^9, 
   3.663332328256618*^9}}]
}, Open  ]],

Cell["What are our parameter estimates?", "Text",
 CellChangeTimes->{{3.6624138505438223`*^9, 3.662413855414859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Rho]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662403541170051*^9, 3.662403579627411*^9}, {
  3.662413877368452*^9, 3.662413935628236*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", "14886.684637026834`", "809242.9739901279`", 
      "0.018395815738288312`", "0.9859195633868348`"},
     {"\[Rho]", "18305.117264478333`", "948636.6000395595`", 
      "0.019296237635902918`", "0.9852304642566909`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.6628445767528753`*^9, 3.662845108980483*^9, 3.662845237827681*^9, 
   3.6629925446773767`*^9, 3.662999886111066*^9, 3.6630112824384212`*^9, 
   3.663011741744553*^9, 3.663011880018422*^9, 3.66333122434562*^9, 
   3.663332277930726*^9, {3.663332311127782*^9, 3.6633323282673807`*^9}}]
}, Open  ]],

Cell["Or if you like confidence intervals better...", "Text",
 CellChangeTimes->{{3.662413938361573*^9, 3.662413946160007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"get", " ", "confidence", " ", "intervals", " ", "too"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{3.662413934755294*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", "14886.684637026834`", "809242.9739901279`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.9652595388752169`*^6"}], ",", 
        "1.9950329081492706`*^6"}], "}"}]},
     {"\[Rho]", "18305.117264478333`", "948636.6000395595`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.3029250218021893`*^6"}], ",", 
        "2.339535256331146`*^6"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.662844577101038*^9, 3.662845109007119*^9, 3.662845241317061*^9, 
   3.662992546494075*^9, 3.662999888509388*^9, 3.6630112840877028`*^9, 
   3.663011741789377*^9, 3.6630118801176987`*^9, 3.6633312243961697`*^9, 
   3.663332277966571*^9, {3.663332311211581*^9, 3.663332328292163*^9}}]
}, Open  ]],

Cell["Plot fitted curve with data points", "Text",
 CellChangeTimes->{{3.662413956438634*^9, 3.662413969480398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
      RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Prolog", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
      RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.662403769406761*^9, 3.662403992597126*^9}, {
  3.662404042064361*^9, 3.6624041243000097`*^9}, {3.662404161267418*^9, 
  3.662404199527317*^9}, {3.662405800170576*^9, 3.6624058024493113`*^9}, {
  3.66240792592798*^9, 3.662407926379305*^9}, {3.662413951485792*^9, 
  3.66241399528541*^9}, {3.662755240062652*^9, 3.662755249022591*^9}, {
  3.66301133188225*^9, 3.6630113349925623`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"g(r)\"", TraditionalForm], None}, {
     FormBox["\"Distance (m)\"", TraditionalForm], None}},
  ImageSize->800,
  LabelStyle->{FontFamily -> "Times", FontSize -> 12},
  Method->{},
  PlotLabel->FormBox["\"Pair correlation function\"", TraditionalForm],
  PlotRange->{{0, 0.6382031230831757}, {0, 3.3356345894107875`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, {Automatic, 
     Scaled[0.02]}},
  Prolog->{
    RGBColor[1, 0, 0], 
    PointSize[0.005], {
     PointBox[{0., 6.2681933206682166`}], 
     PointBox[{0.1427065566666646, 2.2429439718096194`}], 
     PointBox[{0.2854131133333292, 3.091212695632082}], 
     PointBox[{0.31910156154158786`, 1.1403508771929824`}], 
     PointBox[{0.4036350957551234, 5.603518866210405}], 
     PointBox[{0.4281196699999938, 2.920021266184884}], 
     PointBox[{0.5145358074065666, 2.777298012214572}], 
     PointBox[{0.5708262266666584, 1.6024305555555556`}], 
     PointBox[{0.6382031230831757, 1.2129186602870814`}]}}]], "Output",
 CellChangeTimes->{{3.662403931872311*^9, 3.662403961748376*^9}, 
   3.6624039930219793`*^9, {3.662404054020718*^9, 3.662404124635461*^9}, {
   3.6624041628226557`*^9, 3.662404177212069*^9}, 3.662405718219399*^9, 
   3.6624058028929377`*^9, 3.662406297284313*^9, 3.662406330073842*^9, 
   3.6624064172534*^9, 3.662406804946733*^9, 3.6624068387016277`*^9, {
   3.662406887024851*^9, 3.66240691165195*^9}, {3.662406984216867*^9, 
   3.6624070126147203`*^9}, {3.66240708340755*^9, 3.6624071065110817`*^9}, {
   3.662407909400408*^9, 3.662407928325042*^9}, 3.662408841770507*^9, 
   3.6624089062315893`*^9, {3.662408945263624*^9, 3.662408975140057*^9}, {
   3.662409013246416*^9, 3.662409087299986*^9}, 3.662409223247031*^9, 
   3.662410583174616*^9, 3.662410645662326*^9, 3.662411257398282*^9, 
   3.66241132393871*^9, 3.6624114105907393`*^9, 3.6624114596960697`*^9, 
   3.662411831774963*^9, 3.6627548277165937`*^9, 3.662755118552618*^9, 
   3.662755188969701*^9, {3.6627552441558857`*^9, 3.662755249340041*^9}, 
   3.66283266521484*^9, 3.662844577150803*^9, 3.662845109040369*^9, 
   3.662845242291156*^9, 3.66299254782378*^9, 3.66299988992479*^9, 
   3.663011285191825*^9, 3.66301133565475*^9, 3.663011741827805*^9, 
   3.663011880166368*^9, 3.663331224445139*^9, 3.663332278061378*^9, {
   3.663332311352467*^9, 3.663332328337199*^9}}]
}, Open  ]],

Cell["Plot fitted curve with confidence bands", "Text",
 CellChangeTimes->{{3.6624140170269537`*^9, 3.662414017625156*^9}, {
  3.662414059835639*^9, 3.662414068251809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bands90", "[", "x_", "]"}], ",", 
      RowBox[{"bands95", "[", "x_", "]"}], ",", 
      RowBox[{"bands99", "[", "x_", "]"}], ",", 
      RowBox[{"bands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fitcor", "[", 
       RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
        RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"cl", ",", 
        RowBox[{"{", 
         RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitcor", "[", "r", "]"}], ",", 
       RowBox[{"bands90", "[", "r", "]"}], ",", 
       RowBox[{"bands95", "[", "r", "]"}], ",", 
       RowBox[{"bands99", "[", "r", "]"}], ",", 
       RowBox[{"bands999", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"3", " ", "\[Rule]", 
         RowBox[{"{", "2", "}"}]}], ",", 
        RowBox[{"4", " ", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}], ",", 
        RowBox[{"5", " ", "\[Rule]", 
         RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662404221668598*^9, 3.662404310745612*^9}, 
   3.662414014514715*^9, {3.662755211342601*^9, 3.662755231736133*^9}, {
   3.662845540490911*^9, 3.6628455435145197`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], 
     PointBox[{{0.1427065566666646, 2.2429439718096194`}, {0.2854131133333292,
       3.091212695632082}, {0.31910156154158786`, 1.1403508771929824`}, {
      0.4036350957551234, 5.603518866210405}, {0.4281196699999938, 
      2.920021266184884}, {0.5145358074065666, 2.777298012214572}, {
      0.5708262266666584, 1.6024305555555556`}, {0.6382031230831757, 
      1.2129186602870814`}}]}, {}}, GraphicsComplexBox[CompressedData["
1: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
    
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1WW4FlUUBtB76e7ubpCW7u7ukEa6BKS7u7sbuym7C7EAi1BsUVFU7LUf
fqxv73m/6TlzpvDAsZ3GJElISEjklp9daos0CQmVk6pUkn3BXm6SjIts4gb9
+JbDfG7bt9RldOIrDlCcS+xgMO9Y7xl1Bk3IySdsZQC/+f99dS09Kcdu2f3q
CCqTPM5L9ra6nM6U4JzsWXUmTcnF77I9PKAfSRVScE32Ls/pZ9GM3Pwh28uD
+lFUJSVfyt7jef1smpOHW7J9PKQfTTVSxfXHdbCfhy2PoTqp+Vr2AQd4xPJY
7iQN38g+5CCHOMwRjnKM49wX9yOuKc4zjh3HiH3xaLCfcdQgbTwj2XkeC5bH
U5N0fCe7wAv6ObQgL3/KHg/6CdQiPd/LLvKifi4tycdfsieCfiK1ycAPso94
ST+PVuTnb9mTQT+JOmTkuuysuoIulORj2cvqfFpTgH9kTwX9PdQlEz/K3lFX
0pVSMb5kr6gLaENBPmUbA/k3noe6jl6U54TshDqZemTmIzbTn5/8f05dRbd4
phykNJfZyZC4XxyN41n/VXVhbEvbGFPsjzFPIT5jO78wKJ4NR2JM8l+MC3U9
P9M7xgqHYoxTgavs5leGxb3nGCdte1KdQn2usY8scW/Zwl2x33gn1NV0pwxX
2MXQOD//v6Yuoh2FE29PHufZQB/u4JT4lDqVBmTlRrw/6hp6UJZLstfVxbSn
CImclp9W76Uh2eKeyC7zhn4JHShKEs7Iz6jTaET2uAeyKzwd803MC/Gux/sb
Yz3Gb4zJGFcxNuLZxLXF+cQxeDPms5hjYh/2N53G5OCm7Gqso19KR4qRlAts
pC8V+Zw9DOc6xxNvz7VnbV+ZncxlK3czk410ZQj3spamdGQA97CSmjSgDX0Y
xxIqUZE7qEB5ylGWMpSmFCUpQXGKUZQiFKYQBSlAfvKRlzzkJhc5yUF2spGV
LGQmExnJQHrSkRafl4TUpCIlNahPa3ozlsWk4E7q0YpejGERyWlCB+5iEiuo
Tl1a0pPRLCQZjWlPfyaynGrUoQU9GMUCfPoSGtGOfkxgGVXpzCCmsJraNKc7
I5lPfFO7MJiprKEhw5jOetrSl/EspQrDmcEGOjGbzQxkMquoxRy2MJTtTGMd
zdjBLDbRjW2MYF7C7e/8/+GY+4o=
         "]]]}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1WVwVFcYgGGI4BoSYgSXACEJmoQgCYRgEdytwd3dXYu71N3dvVN3d/eW
tlNvKdA+Z/jxzHvOdzd7d++9s2lUNnfQnIhy5cqV53T5C93ADI4zjMOs4SSF
7GcFJ5jCUdbRmd0soYwjrGUQB1nFNNqznfmMpZgDrGQq+exlGZMYQviMG5nJ
cHqTyx6WMpHBdGAHCxhHCT2IZBOzGEEfutCRnSxkPKX0JIrNzGYkfelKJ3ax
iAkMoIBotjCHUfSjG1lUYCtzGU1/upNNRSpRmSpUpRrVqUFNalGbGOoQSxx1
iSeBRJJIph4p1KcBDWlEY5rQlGY0pwWptKQVrUmjDelkkElbtjGPMRSRRw4X
s5iLGEgv9rGcyQzlEKuZzjHWc4p24Zxu7gA3KJrePGl/hi7Wu/Q+fqat/QRd
z818SXOz7jqYRVzGOySat9KWpNIivJZmNKUJjWlEQxpQnxS6MYiFXMrbJHi/
etqVgSzgEt4i3rFkHc86buKLcC7zLuG7MZ9TvEld8yQdx1pu5PPwucxzdSt3
8j1pZqX6IL/SwX6enuQN4uwT9Qn+Idd+Z8SFB74H91r/RKb1WI3UXjxi/QdZ
1mv0HN2tb9C++lm4RtpZSzWKQh6zL9K/NEe3aLH+p/l6h/bT77S1lmiJRlDA
A/b99Rdtr3P1bLjm1if0dWKtE/Rx/qaz/Q69hx/JsB+jD/M7nexX6/V8Gu6r
fY5u5na+pZVZsYYfu+O8Rh2zeN3O3Zwm3Wy0ruI6PgnPiFm2buI2vgnPlVmR
zuYYrxJjVldHsZJr+Tg8X+ZZ4Xszi6O8Qm3zOB3JCq7ho/AsmncK15GZHOFl
apnH6giWczUfhufWvGO4b8zgMC9R07xOeGbow3QO8SI1HIsJ94DeTOMgL1Dd
sdrhfOE9wmvDjGpUpQqVqURFKhBNVHi+iKA87ShkKgd4PrxH5IUf87b0Ygr7
eS68d3iO/APKtC5gMvt4NpzTsfOODbdexlV8QIp5hvZkEnt5Jnw+83NeP8x6
KVfyPvXM07UHE9nD0+G7mJ/1+qHWS7iC90g2b6MbuZWvSTXL1zJ281S4Dmb/
+vtt1nfxA23MhuhD/EZH+8V6Oe+SZJ+mj/In2fYb9Dx51rfoV7SwzgvXVHty
f7jX/lmccb7/ASNmxAU=
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1vfflXMYB/CTJ9FUCkklVCIl7U2RtGkoGpQRmtKWoqLQ3nugRLuMjPbe
aZeRpD1oR9b7+i/8cH54P9fnus657+c+9/d7zuu+o0W7um2vSSQS4WN/KqQk
EtXTJRKr5KuM1ndOnUiUJoWB1GGv+TvqY2Slj/5ltSCX5I30kauQmZn6HmpF
0vKTvi5Pytk5JC9iDF30ZUjNPn1fXpHv47K8iVnUo6HZrfwqf8VY3qaVWSGu
yJuZTX0ameXgsPw14+Jz0NqsMH/IW5hDA54yu40j8jeMp19cN0+b5+So/C0T
6B/XRGPzXByTFzORd+P/xznj2HgPTWhKM57hWZrTgud4nhd4Md7rfLk5Li9h
Eu/RMs5hfjsn5KVM5n1einOb5+GkvIwpDKCN2f38KW9lbqxhXIfZHZySlzOV
gbQ1K8JVeRvzYl3ims3u5LS8gg8YRDuzB/hL/o75sS7x+czu4oy8kg/pqi/L
tezXD6a9XJS/5e0s4A39g6TjQKxb3Cs5L7/Jq3hLfphMfKTvppYjDd/H+qnV
yMYQ/atqMf6J+6LWZkfsO/VRsjCUeiw076k+xEjSM5gnGMvPsc5qDUZzM8Oo
zzjaxLqq+RjB77FOai3GsFrfW32EUdwQ10hdpnmtu1qe6xjE4/wQ+06tzk1x
rfoOanH+lXfGd0Kuyo18pu+lViIDB2NtY6/J+Tkrr2E6r+srcD0/6ofxmlyC
BLv0n8daxz7V3805eS0fM5yOZiVJxW79F7G2saf1BTgvr2MGI2I9Yk+b38MF
eT2fMDI+V/z/OCed6EyX2D+xznF/4prpEXsl1io+K2/Gvojvg3Pey0V5A58y
Ks5lVopr2KP/Mo6RK5ORX+K7ptbkFobTgPH0ju+P2/FHKr9znOElpnCIIjRl
JHtJIS9P8C6b+MXxF7lZfpjXWcIWs81sYiMbWM861rKG1axiJStYzjKWsoSD
XOAm56tMdxaH+N1X7+Jx+rORn83Pk02uRDe+DWap1DupQz82cMC8oNqIIezg
nFlW9SG68k0wu19twgj2pIoT+q2hNu+wnp+MX1QncZB7achgtnPW68+qY/ie
G/mAwzxIF74O3vepepqWXGBy3GsKc5npHKdxnJfh7OZfx15RZ3CS5zjP+Lg+
8nCJDzlCLX7nbdbxo+M/UU/xAhPjvnIP0zjGkwziuzjW+59RR7OfLFSkM18F
rxdSn2YYu/jHrIU6Lv4ft1OTvqzlB68XUBswkG38ZpZZrUAnFgWzv8kt16AP
a+Lemt2t1mcAWzljdoNano58Gcz+Ipdcnd6sjs9hdppMcjle44tgdpWccjXe
YhX7zE6RUS5LBz4PZn9ym/wYb7KSvWYnySCX4VU+C2Z7OEF6fWnaszCYLWA+
85jLHGYzi5mxZ2LtmBHPRExnGrs5TjrnKUU7FvCR2S6OkVZfkrbMj/1htpOj
XK8vQRvmxZ6N3wxyyFXpxQp2mB3hOrk4rZnL1NiT3Co/Sk+Ws93sMGnkYrRi
DlPMLpNdrsIbLIv9ZpZfrcf7bOFXs2vVorzCbCab3ac+xVB2csmsuTo29he3
8Ag9WBp7zOvPqxM4QL64PxylLu+xmUNxb9UTNOMco2IPkJqL8Xnjungg1j0l
+WyafDZNPpsmn02Tz6bJZ9Pks2ny2TT5bJp8Nv3/PJv+B9Kl4iY=
         "]]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{158, 2632, 818, 774, 849}}], 
         PolygonBox[{{158, 2632, 818, 840, 829, 774, 849}}], 
         PolygonBox[CompressedData["
1:eJzt1ve7j2UcB/DvOY6sJA2VkURRlDRkJHsLoSKJzJIoGYkWKkUoykj23qtQ
9t5kVRpGWmZDZev1uepP6MfvD6/zvu/3s77P89zXuZ58zTvUa5+aSCTCUH/O
pCQS1TMnEouMK6ZLJFIoZ1xQ/iBnUs74guxJCeO/5DKKkNP8SzmGztxj/odc
TANuMz8i59OHs66XQbfGuD/NKU8h3Y9yFr3iOHLpvpJj6cJDnHN8Rv1a4wG0
oAK3k1u/V46jKw9z3v6Z9OuMB9Iy7pOi5NF/LcfzAo9wwf6Z9euN36UVlbiD
i7ZlsW2D8Xu0pjLF/nugl9q2UQ6iDVW4kxRSSUca6bmEDGQkE5nJEucgK5eR
jcvJHp1zb5KDeZKq3MUVsa9tm+X7PEU17ubKOIdtW+QHtKV6vCOu138jJ9CN
hlwV19NvlUN4mhoUJ6/+WzmRF2nE1fHb9NtS/11L7ajJvdyg/05OojuPkiN+
r367HMYz1OIW3U9yNr1jjZFPt09OpgeN4x3rjsqPeYtr4h51n8vhxMJ+gFt1
P8s5vE5JbtTtl1N4Ke7J/KRcwmOxHsyPyU94m1Lmp+QKro1nY75Dfsj9xudk
h3gHxr/FfctPY63IVGoH88Lyl3iOcq4sLy/G75RvxG+Tf8dzkMtjzcg06lDK
PL88EO9NTpVl5Xn5cjxn4z/l0liHxuloEmtVHpcLqGCcoK9xaXlaruS6eH/m
O+UIno01Y/67/Iw6FDE/LOfxZhxPAd1BOY1XeJyc8W71u+RHPEdd7uMm/fdy
Oq/SlFzx7vS75Ug68iBlyB3P27Y9chTPUy+eOXli3cZajPUVayTeazyj+F1x
LW6mIIViXcVaiHt1vi/kaDpRP55j7Ks/JGfwGs0opjshF9Iv7sH8jFxFVeP0
1KWw+ZY095bePfA1T/A+O7iNhvRjA6nkpzY9WcYBx5/kauNydGIOm3Wb2MgG
1rOOtaxhNatYyQqWs4z9/MFVzlGW55nNUt0+fudK8/vpyCyW6FLkjTzAa7E/
3+l/4wrjMjzHTBbrEjIftXg1zsG3+kKyPm+yml912eV9PMsMPtMVkY/Ql/Vc
1DWR77KVGxjKbmrySlyXb+w3Qn5FUwaxnYIMYw/14rfwBqs44ZgD8kO+5NG4
N/qzicvZzwfspHRchw5M51PHH5QfsZdm7GMwn1OY4XzBw7zNOi447jE5kC3k
ZQi7qMHL8Sxi3djvcfke27iZB3mdlRy3vZF8h41koxTtmcYi22+VD/EWazmv
u15W56W4h/jtuptkXXqzgmO6y2RJnmEqC3XnyGNcjR5xjXjmuqNkNS5BO6aw
QHeW3MZV6R7niGetO8KlxvfyNJP5RHeGXMZVeDHOEc9Pd5gsxsVpyyQ+1p0m
p3FlusU54l3rfiGz8T08xUTm63bzM5nM7+ZJJjBPN5c5zGYWM5nBdKYxlSlM
ZhITmcB4xrGLn8jofHfRhvGM1e3kRzKY30lrxjFGt4MfuMS8GK3iGEbrTnGd
cSVeiHuOtaU7RHrjO2gZ52GU7m+uNa5I17hntsf/ItKMi9Iizs1I3V9cY1yB
LvEcYq3pCsg69GI5B3Xp5O00j2vFutfdIhvQhzX8qWssB7CZHJSnM3PZantN
35Qj0pLfl8nvy+T3ZfL7Mvl9mfy+TH5fJr8vk9+Xye/L//f78h9Nvpu3
          
          "]]}]}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1vf/T1UcB/CPPSKlEMlIKYkU7YySlER9KXsTEbL3VlYqiVBWZWaVyiiz
MjIKGQ0ZZe9NhZ7vv6PPD0+v9/vc6zr3nPvxOAUbt01pkzqRSITe/jhJ5cyJ
xKxUiUQjddP0iUQO9jOHPtTkEfalSyR+lh/Smqe4k5wcYC59qcWj8Qz3b5Xj
aUNFipCLg8yjH7V5LJ7h/m1yAm15mru4Ke53bbucyGs8Q1Fyc8i1HXIS7ajE
3eThsGtHOMoxjnOCk5ziNGc4yznOc4GL/OLvT6Y9z1KMm7nk2q/yIzpQmeLk
5W/XfpMf05HnuIdbYp58Rn/qUJp/3P+7/IROVKEE+WLufM4A6lKGf92/U06h
M1W5l/wcYT4DqUdZLrv/DzmVLjzPfZxmMcNoRgGO8gWvU59ynGcpb/MKVzxv
l5xGV16Id2YlIynJGb7mTV6mIMf4kjdoEPPie0bzOBdYxjukz5BIbJQtSajX
yLFkVm+WV81ht5xON9IYXydTYj35lmuNvSczyB/l9bKUPMs3ZNUPl+nkBnmd
bB7PZjXZ9GNkJrlJZpe3yuN8RRb9IJlWrpcNY21YxftkNP6TfIKLLGcErUjl
2lo5Lt6PPcygO9Vij/mOUdzPOZbwFi0oxAkWMJhGlI/nspeZ9KA6D3AbJ1nI
EBrzJKn5k0/pyYs8yO2xpvzFLHrxEg9RON451i32KdY33jXWKfaHa2JtYn1j
D2IdY21j/WMNuYF9zKY3NXiYOzjFIobShApcYgXv8mrM2dr9ID+If0u9JZ4p
b5T90xhP6z0YSS4qM5S9rmWVT9CXBfrtpFY/SCdG62fyA+e4y1gL+qn70ofe
9KInPehON7rShc50oiMdaM8oZrCWsxTxzOa0U7/HdNZwhjuNv8xr6q/YRir9
A3SM99JPYzWnucNYM9qqv2QrCf39dOBd/U4yqkvTg6n6VZyisL4pbdR7yKJ+
nD58oc8uK/I6P+uvUkrdnhHqHLISg/ld/7x8iww8RnemGE+R75At1pkn6c/3
ro2RzzGMk7Em8naa0Fo/TlaPdyEn7/MsQ9jt+lj5Am9zDaMoR2/mu14t5sr1
PMVAthivIt/kirpk7EfMUX2jfIZB/KZPLx+lG5/or5Xl47vgO/0JblM35lX1
LjKry9KLz/Wbucx9sbcxV/WvpFM/Qlc+1n/LcQrpG9FK/Rmb+Jd7Y69jjdUf
sZJj3GqsIS3V8/iJfygRe8tw9WRWcJSCxhrwinouP/I398Sax7qoJ7GcIxQw
Vj9+D+phTGQZh8lvvF580+qhTGAph8hnvG580+pmNKUJjWlEQxpQn3rUpQ61
qUVNhjCeJRzkFs+rQw31YD7kGw6Q13htXlIP4gO+Zj83G68V/z+o57CRSxSP
feON+NZYzD7yGKsZ3556Nhu4SLHYl/hNxLfHIv4id8yJaupZrOcCd8e+xHen
/oW06ofpwhj9Qv7kppg3Keo/yKQuQ08+1V8nKzCAdfrzFI09jDH1DfLpeA92
6KvGvpOGh+gcv534LpLnvuS5L33y3Jc89yXPfclzX/Lclzz3Jc99/5dz33/B
L5cj
         "]]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{849, 2634, 708, 653, 1508}}], 
         PolygonBox[{{849, 2634, 708, 763, 752, 653, 1508}}], 
         PolygonBox[CompressedData["
1:eJzt1vffjWUcB/BD9BjJyB6VjLJnJBRFkWRvslVkFaFJGRWlQlOKUJRRlJ1Z
tuxRZmYoO0rr/f03ep0f3s/nuj73c9/nnOtcz/O6Cnbq3bhX6kQiEfr7MT5N
IlEvQyKxSX6VVkdNcrKB0bThkuvfyZdpSjE+1H0kO1Gaa/hZt0y+RAMK84Nu
jnyKe8jF77oJfGzcmTKk4bBuM3ONB3Avubkcr8VE4y6UJS1HdFv42nggtcjD
lXg2k4y7Uo5rOarbGs/hE/NulCeFY7ptcQ+TzR+hAuk4rtse98Q1pjCVT/mM
aUznc75gBjOZxWy+jPWNdYh7Pe9RKpKeE7od8ZnjmeaPcTsZ+EW3k2+MB1Gb
vPwRnzle37g7lcjISd0u5hk/zX3k4894RrxX4x5U5jpO6XYz3/gZ7ic/V+MZ
8bmMH+cOMnFat4cFxs9ShwL8Fc+INTDuSRWu51fdcjmUhhThR91C+Rx1uZG/
dd/LV2hGcRbEespe3Elm1vEarfjN9RVyGI0oGnuNt3iYn1xfJJ/nAbbzDjex
kTdoyz9+b7V8lebs4n1KsIWxHKBDvPfY97HPWRjftezNXqqyjbc5SBbW8zr7
ac1uPuAQZ9y/Ug5nH43ZyXvcymbG0J49jI/Xcc9i+QL12MG73Mwm3qQd//q9
NXIkLSjJotiXsg/VyMpZ3So5gibcFu9Ft0QO5kEKkmBx7GnZl+pk45xuP98a
D6E+t5CKJbH/5RPcxQ2c1x2I34+/C/MnuZvsXNAdZGn8D4l9E99vrFG8x/j/
E3skvqv4bKxlHevZEH9jntGPGuTgou5QPM/4RR6iEKlZyyhaUoqtjKNj7Bsm
cDj2iftrpXj/6ayprCTXyMuUNn5PLuU3ipg/Kd/gG46SX9dcPsowPudHsurv
lfdQkxrcHa9DdapRlTupwh1UjtfndprxCEOZzh6yeGZF2ZRuvMQ0dpPZtQry
CUbzNUfIp28ix7GIkxTUdZUv8hm7uF5XXr7Lt/xKYV1f+TpzOUxeXWP5HRcp
YT5WLuQXbjbvIpdzllvNh8grlDH+VO4kk3E5+U98XuPVsRbyd1lKvhNrJK/K
8nJJrJE8LQvJPrGO8i9ZQa6MdZTnZTH5Wqyv/EOWlXNifeXPMo9sJP+movEq
eYHixmPkn5QzXiBPcJNxZ7mMMxQ1HyynsoPrzMvK77lESfO35WJOcYt5b7mC
c9xmPkp+xSFymzeUbzGf49yo6yRfYArbyagrI3sxki85SC59A/km8zhGAV1H
+TyT2UYGXWnZk1eZzQFy6h+SHXiOT9hKen0p+TivMIv95NDXl+15lklsIZ2+
pOzBy8xkH9n1D8qHeYaJbCZFX0LWox1P8zE/cK1rxeUDtGUQH7GJtK4Vi3WM
/RXfB0Viv8beiPWmYOzF+O5iLWM9yE8+8lKXNgxkAhtJ47l5ZB1aM4AP2cA1
ruWW99OKpxjPelK7lkt2ZwQz2MsN+vtkS/rzAetIpc8pH2M4X/AT2fS1ZQv6
8T5rSehzyPrOcdlTkme65JkueaZLnumSZ7rkmS55pkue6ZJnuv/Dme4/jaiY
Ag==
          "]]}]}, {}, {}, {}, {}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1uW3VFUYwOGhLyWKUgIC0iUp3aHS3aCAiDTSLSgKimIR0qV0d4OEgiCh
ooSAQeelG/TZ/4ZrPjz3t/d7hnNn9tzFOlnadq/fLW4kEgmK+REbJxKpnSQS
qRATiSRNHIkc0xV8xSC6UpFkrv2hKxnDYLpRicpUoSqv8CqvUY3q1KAmtahN
HepSj+Tue1xXMZYhdKc+T7l2Qlczjnd5h3Tm5/U7ZvAxDUhhflLXMJ6h9OB5
8wu6jZmMoiFPm/+pa/maYfQkvflF3c4sPqERz5j/peuYwHu8aHZdf2Q+vchg
dkl38A2f0piU5n/reibyPlnNbugeFtCbjGaXdSffkt/+kR5iNDnt7+h+llDQ
/l89TBOetf9HN1DEOi6TrPPqA/2F4tYJGW6dTW/qXl62js9C6wL6RMvr71pS
Y6hEH/sX9IqW0e+1qMajArPtX9LHWk5/0xKaiIp8Zp9L72pZPaDFNAFLrQtp
hCPWpTQxTa2f01O6kcnks3+ov/IB2e1v6U8soi+ZzK7qD8zhc3Kb3dODLKMZ
qcxO6yam8CE5zG7rPhbTj8xmsbqLuXxBc1Kbn9HNTGUE/WlBGtfO6hamMZIB
tKQVr/MGrWlDW96kHW/RnrfpQEc60Zm07ntOtzKdjxhIFvNrupt5fEkes/v6
M8spbB+Ho9alNQmV6RLOOaG/o0TOVZPqZN1DXOsu+hXbuE9V3mQU67lOTkrS
hHdZzJlwT1LyDE+TgqdITrLwu0hCYmJIREISEJ8clKAxQ1jEaeKRneI0YjAL
ORXeM1Voy8es4xrZKEZDBrGAf4hDZdrwEWuJJSsd+IzN3OZlxrGTRzRgIPP5
mwiT+DHc19l11i/5jntU4mD4rK59rT/whNb8FD6z+chwNrpGr/JiOEP7n8M5
6YRwjrpL/+XtcLb2+8K56ehwvrpJb1E0nL/9gXC+OjZ8B7pDH1KfveFMzQbo
PP4K907g/47w/ZhP1N3h81l30v3he7L+Qrdyl4qM53se8wYjWM0VstCeT9nI
TYowhu08oB79mcuf4Wy8h476OVu4QwVe50NWcZnMvMUnbOAGhalLP+ZwMrwv
9yuvrfiAlVwiE4WoQ19mcyJ8x15fTlsynBVc5AUKUps+fMvxcJ5eX1Zb8D7L
uUBGClCL3nzDH+Eze30GfYma9GIWx7jvWnrNTw16MpOj4W/Jtbvc4Ta3uMkN
rnONWK5yhctc4iLP+/f5qE4PZnAkvE/X0mleqvEO0znMedfSah5eozvT+J1z
rpXR5rzHsvB60pCbV+nGVH7jrNeX1mYMY2m4B6nJxSt0ZQqHOOP1pbQpQ1kS
7kEq2tEm+lwTfa6JiT7XRJ9ros810eea6HNN9Lnm//Nc8x+CR1jl
         "]]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{1508, 2636, 428, 361, 2111}}], 
         PolygonBox[{{1508, 2636, 428, 609, 495, 361, 2111}}], 
         PolygonBox[CompressedData["
1:eJzt1uWzVVUYwOEjDQIK0g0KSnd3gwJKSnd3d0ijoISEtIWilKCEEkqHgoDS
KN3dDT7rz3Dmfnjub613z5xz79p77uyMLbvV6hotEokEef1IEjsSqR4vEkmq
kTiRyE6dRW/epyKJzY/pYsbQgWS8ZL5LZ9OH+lTiNfPjuoSxdCQ50cx/1zn0
pQGVSUF01/7QufSjIVVISQzXdus8+tOIqqQiNWlISzrSk4GMZOJ13iAzWXiT
t8hKTJ+7R+czgMa8TTZiufanfs5AmvAO2Ynt2l79gkE0pRpJzP/RpYyjEzmI
Y75Pv2QwzcKZk9T8X13Gh3QmJ3HN9+tXDKE5NcKZm5/QH/iILuQinvlf+jVD
aRHOw+y8rmYy74Z7YHZSlzOeruTmZfO/dQHDaBnO0uyCrmEK74X7ZHZKVzAh
nKP9Ld1Et3De9ld0HdPD325/T7eRh/j2B/QbPgj3w/6G/karcO/sL+rP5LV+
rJ+G+2F9R7dQwPqZ1gzPhvVpLaw/hu/QR1pcPw73WG9rUd2s+fWpltTu4dnQ
q1pE12s+faIldEa4F3pfi+l2LajPw+9GAuuD+m04Q+uHOjw8X9Y3dSOtw7No
f0l/YWp4fuzv6lZqkcr+jP7EJ/QIz6vZNd3AZ+H3IqHZIV3ICNqQ0eyyrmUa
tUltdlZXMpGe4e/mFfPD+h0jaUudcJ686toR/Z5RtKNu+HspFM43nFE4x3AW
4XzDGYVzpBSlKUNZylGeRD7zqC5iNO2pRxrzc7qKSfQis9l1/ZWZ5LJ/oDvC
91u/CN+jFbR7XP8z/L96hdKcsI+thVltfYgX5LafoUvZw32ymA3TT1jAVq6R
1rybdqULnelERzrQnna0pQ2taUVLWjCUj/maLVwljc9srkOYwFds5gqpXWum
01nCbu6R2XywjudLNnGZVOZNdRUHeU4us2m6mD+4yxtmg3QF+3lMNrOP9Agv
WeflC+uNXCKlfRP9l1jWhVhp/bIW54D1M3JaT9UEWpJj1uU0OvlZZF9B41KU
3+3L6B19XQdqJU1IKY7bl9cYFGC5fUWNRzH22ZfVR5pVP9T4WoLD1hHNw+fW
cbQIv1lfJIV1Y/2HmNYF+cn6b56Sw/5TPUo063x8b72L22SyH6A/sJeHvGU2
TufzKxdIbtZIf+QvnpDdbIp+x05ukdGsvy7jTx7wptlYnccGzpPMrKFOZiE7
uEkG8346hrms5xxJzRvoJL5lOzdIb95XRzOHdZwliXl9ncg3bOM66cz76Chm
s5YzvGb+vvZmJLP4hdMkdq2e9mIEM/mZUyRyra7WoTa1qMl7vEsNqlONd3ib
qlShcnhO6MlwPmMNJ3nV51bUHnwQPsu+Qtyod5iod5iod5iod5iod5iod5io
d5iod5j/5zvMf6TaNQo=
          "]]}]}, {}, {}}, {{}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{1, 130, 106, 154, 86, 150, 126, 156, 70, 146, 122, 155, 102, 
        152, 128, 58, 142, 118, 98, 151, 127, 82, 148, 124, 104, 51, 137, 113,
         93, 77, 147, 123, 103, 65, 144, 120, 100, 84, 2, 131, 107, 87, 71, 
        59, 143, 119, 99, 83, 52, 138, 114, 94, 78, 66, 3, 132, 108, 88, 72, 
        60, 53, 139, 115, 95, 79, 67, 4, 133, 109, 89, 73, 61, 54, 140, 116, 
        96, 80, 68, 5, 134, 110, 90, 74, 62, 55, 6, 135, 111, 91, 75, 63, 56, 
        7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
        25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
        42, 43, 44, 45, 46, 47, 48, 49, 136, 112, 92, 76, 64, 57, 141, 117, 
        97, 81, 69, 145, 121, 101, 85, 149, 125, 105, 153, 129, 157, 50}]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1HmYTmUYB+BvDCVpQZQUpkVUqIkipaJ9QUolS0XkSkxZKkVRWrTQiorG
jDFjbVfM0ipKMSZlzFRmy15CIRTdz+WP+3ue8/vO+r7vOSn90roPTUokEr38
XF0rkUhNVjnX9m9ksIvqlDCZnfRlCzlUOX6F+hzd2UgWp1PGNO5mlf0+U0dz
OcfzC29wF7v9/6P6Mj05m3TZAvVeUqkR9yVbqT7PTTSjSPa5OoYrOIE9shm8
ox/MeRzGetkPfKF/jCtpyD+yDN7V30cbDmeDbDVf6h/nKk5kryyT9/RDaEvN
eP54Dmbyvu0Y4PM5gk2yn8jiA9tpXEAtNsvWMItscpjNHOYyj/kxHvFMcZ9x
7bhGnIsPg/PcTzuOjDmSFfNRsP0A7anNVtlavtKPjfmnEftkC4N+GBdyFL/L
SliiH8c1nMR+2cdBP5wOHM0fslK+1j/BtZzMv7JPgn4EF3EM22SF6gvczBn8
LFuqPsl1NOY/2aKgH8nFHMufslXqi/Sgeawv2TJ1PNfThF95k34ciPlQX+F2
WrJYtlh9kI7UoZQp3MF2/xepE7kl5pRZtKCc6QyI8WJOXM/+36hPxbHcEGuK
mbHmaco63uIv+sfcMDvWJAdjXaivsiPp0Lu6mexY47SiknT+5p4Ye+aS69hc
9SEuYT2Z1I2xZSp3xnnjnVAncStnUsHbDIz78/+36tN0IYUExbxGb1qTJ85T
H+ZS6rEz3h/1JW7jLMpky9Vn6MopJJEvz1dHcRnHxZjIyvlO/yzdOJVqFMgL
1EfoRP0YA1kFn8b3Jr4L8a7H+xtrPdZvrMlYV7E2Ym7i2eJ+4hp8H9+z+MbE
OZzvUTrTgF2yythHP4EbOY1k1vI6fTiHKmYwiG3MYy+Fjv8fvkLJ2Q==
        "]], 
       LineBox[CompressedData["
1:eJwV0nmYVmMYB+Azm5oZpLLOoobUaMYyQjW2GpKimRpaCLlGomRGWtGGKMuV
nWxZirKFSJu1rmyhslQqCoU2rtKGmcn9/HF/v+d5zvm+75z3fQuqaiqrU5Ik
KffRJStJ5qcmyblpSZJCB3UruUnOooO6Xt5OO/Ue+SHF5OhXy+cZzmn6v+V7
XMIJ+q3yHSbxn/9rYLZEPZkqOlJo9pt8gzvie+Sa/SBfYAQ9qfX9huafqO/n
aso4kTzzNXIaI+lFnfszzT9VP0D/eE9OIt98rZzOKHpT7/4s88/UD3IN53Ey
+13Ldu1z9UMMoBMlJBzo2hfyYa7lfE4hhVTSSCeDA2hAQzLJIjt+g4M4mEYc
QuOY+e2l8hGuozNtaBL3uvalfJSBXMCpNI3fcO0r+RiD6BJ7xNHm6+SL3Ewf
Do3/M/9aPs71dOV0mpn/KF/iFi7lsHg282VyCoO5kLY0N/9JzuBWLuPweF7z
5fIJbuAijjf7Xb7JhDhjFJitlzMZTd/YY7Ntcg53c0S8o9kK+STVdKO12R/y
Le6kPceYbZAvMybeSb9Lvs/lcR702+W73EOpfp/8mCNjbfTfyKc4W10ra2IP
1DviveWCOCsylfKgL5KbYx3lbNlR7o/nlHfFs8m9sQ7yozgzMp0KSvXHyp9j
3+Qr8hxZJ8fGOqt3yw/iHKrTuCLOqvxTzqVMnXCv+gz5j1zEUbF/+m/l09wY
Z0a/Uy6kgmL9Fvk2E+P7tDD7Rb7KOK4kJ/bW/Dv5DEPozpkcZ/6rfI3x9CM3
9s78ezmVm+jBWeTFeru2Uj7LUCpjzcmPcxtnMc5XnJHY11ijeK74L1rSisI4
V3EW4l393ir5HMO4ONYx7jXfKF/nNq6ixOwvOY/74h30/8rFdFZn0J0i/f8L
1pH3
        "]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV03egzWUYB/CfVYiUNhlXUSpNGWWvhKtco0IJiciIQrZrj0u2e69Voeyo
zEjRUBq0FO1Sktmwx+f543Of7/Pcc97z/s77npR23dO65UiSJNWfBvmTZGvO
JDnFjFxJ0jt3klQiFxk8wC7zkWp9LmOY/in1Zv6XP2aYXJdLWKIfoFYjHz/o
02ghX82v8lpm0kdfmdx8qx9OZ/kWjsnbWUpTHjK7ht/kdWQygi5m5Tguf8Iy
mvGwWRF+l9eTFc/B02a3ckL+lOU05xGzouyVN5DNqNg3Lc2v5Q/5LWYxOvZE
K/Ni/ClvZDZj4vNjzXhvvIbWPMpjtOFx2tKO9jxBB56M11qvOPvkTcxhLB1j
DfMS/CW/zVzG0SnWNi/Jfnkz8xhPV7PbOCl/xoo4w9iHWQp/y+/wIhl0M7ud
U/LnvBbnEns2K8UB+V1eYgLdze7gtLyDlXEu8Xxm13FQ3sLL9NXfQx6+00+k
h3wnZ+SdrGKgvjr5+THOLb4r+XoOyVsZKtfmYubrn1fv5QJ2x/mp93M5L+if
Ue/ibHwvamO+iHun1uNSJtGU180HqTWYxkVMpAmZ/BTnrDZkBlcymWZk0TXO
VS3NVA7HOampzOQ9fbpah+kUij2SxgL/66dW4UIm8CB74t6pDbgi9qrvqZbn
nPxl/Cbk+yjMG/rBak0K8HOcbdw1uQxH5PdZSH99VfLyvX4yveS7SfhK/2ac
ddxT/Q0clT/gFabwrFkFcvC1fnWcbdxp/Y38I3/Iq0yN84g7bV6Wf+VtLGJa
PFd8fqzJc/SmT9yfOOf4fmLPDIi7EmcVz8qQuBfxe7DmTfwnf8RipsdaZhXJ
yTf6NfEeuRYF+SV+a2ojrmIKzckm3f/OA/SZqlQ=
        "]], LineBox[CompressedData["

1:eJwV1HeAj3UcB/BHXKS0FEWlCyWUEFqywkUyMoqKJCncUVFaNCiV3SBSpCWF
NMyMhnBd7nDujBtZLUSJEvX6/PH6fT7P+3m+32d9n19q74xO6SWSJEnz07Zs
kmSVSpJPUpJkCM2oQCbj6MEh+79Rn6czl/KG7E21N5dTkh9lK9RnaE81fpAt
UIfSnIr8JZvOW/q7qUMpdsjW86n+YVpwDofjXMzQ9+EKUtgpy+Yz/SPcwLkc
ibmZqb+HupzILllOzMPbtvtSj9Lslm2IMcyyfS/1KcMe2cYYE/t4h3d5j/f5
gNl8yBw+4mPmMo/58XzjOcRY8/XjSk7iJ9mmuOeY0/Z9NKAsP8ty+Vw/jJZU
4u+45zi//n4acjK/yDbzhf5RWlGZf2KOuFZ9fxpxCr/K8liof4zWnMfRmCPu
Sz+AqyjHb7J8FukfJ43z+TfmiGegH8jVnMpe2Ur1WTpQnS2yxeoT3MgFHJN9
q46mCzVZFM9TTecaTmMtY7iNffavUkfSkYtjrTGRO9lq/xL1SdqwkdeowveM
53aOO261+gJd2czr1CKblymkV1x7rPtY5yyOd61msI1r2cCrFHE66xhLAd3J
YyrF7Df+K3UU2+lELlO4hPVMoif5TIvzGLNUHU5bNjGZC8liAnfwn+O+U1+k
G7VZEutSHcR1nMHvsq/V57iFGnEtsmXqCG4ilYSlsabVwTTmTA7ICvhS/xTt
uIgSLIv1rz7A9ZTnoKwwjo/vwvaDNOEs/pAVsTz+Q2LdxPuNZxTXGP8/sUbi
XcW9sYa1rCMzvjFzPERTzuZPWXHMp3+am6nKCazhJW7lMnJ4hbti3TCdHbFO
jP8fUte9Eg==
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0XeAj3UcwPHHPMkW2ZxRochI9t4jhUjLyMzO3sree8+ijFCiRMMoKlQa
MjJKVNa5O3e29Pr+8br38zzf7++55/k8sR37tOidIoqisv40TR9FG7VDyijq
lDaKcvA3mxnNC1TmfJoo+lWX0Yv6PEZO/uEDxtCWKuEe9h/R5fSmAcV5mH/5
kDd5karhHvb/pivoQ0NKkCvst3ZUV9KXRpQkNxesHdNV9KMxj5OHi9YucZkr
xHGVeBJI5BpJJHOdG9zkuN+/zRs04QnycsvaCX2H/jSlFPm4be13Xc0AmlGa
/OE52cJbvEQ17th/UtcwkGd4kgLh2fmIsbxMde7af0rfZRDNKUNBLrGVcbxC
De7Zf1rfYzDPUpZEdjKVzhTiMtsYz6vU5DpfMpPu/Od+Z3QtQ3guvDN7mUs5
rvEZ0+hCLFf4mAm0C8/FPhZQixvsYhZpY6LoB32dyPG3upj0jn/W+57hD13H
UFK5flBbhHnyFZlcm6cx+qNm1fKaxOdkdD5d0+j3mkW7hnvzDZmdL9IH9CfN
poU1jk/I4HyiptZD2j7Mhv0sJJ3rh7U2N9nNbHqQwtp3uiS8H3+ynmG0DN+Y
r5nPUyTzBTPoRhGusp1JdKBOuC9n2cBwWlGBosTzKZPpSF1S8hfvM4LneZpi
YaacYyMjaU1FHgnvHOYWvlOYb3jXMKfwfXgwzCbMN3yDMMcw2zD/MEOyc55N
jKINlXiUBHYwhdeoxy32MIee4ZnN7oAuDf/L8S/hnvqQ/g+XRaQk
        "]], 
       LineBox[CompressedData["
1:eJwV0necz3UcwPHfRd1RspK6Iw6HElrKLEIDZ1wRSThNcSeEEqJklCgZZe/s
bDIbor0RKpRdUTRk9Xz/8bzX5/P+Ph6/3/0+n296dm5WTlIikajkT2b+RKJY
sk1KIvGRvklP7qMhRcx36QJe5HEuJ8n8Y53AU7TmDoqa79aFDKEzxbnA/BOd
SC/acCdXkMezT3USvbmfu7iSvJ59ppPpQ1vuJpU0SlCSqyhFadIpQ1nKkUF5
KlCRq7nQ536uU3iaB2jENVzk2Rc6lWdoR2MqkezZlzqNvjxIEy4z/0EXMZQn
uJYU8690Os/SnkyKmf+oixlGFyqTz/xrnUE/OtA0ztz8J32b4XSlCvnNv9GZ
9KdjnIfZAV3FqzSLOzDbo0t4iRyqcrH5tzqLAWTHWZod1NW8RvO4J7O9upSX
4xzt/9D3yI3ztj+q6xgbv93+L/2Q67jE/judzXNxH/bHdBOd4u7sD+karrf+
T0fHfVif0A+4yfqstoh3w3qf3qLL4jv0lNbSEXHH+qfW0Pf1Rj2jdbRbvBv6
q1bX9XqDntbaOi7uQv/WmrpFq+m5+N8oYL1N58QZWv+rA+P9sj6u7/JQvIv2
h/UdXo/3x/6kbiaLVPufdTmv8GS8r2a/6QbGx//FpWbb9S0G8TDpZkd0LWO4
hzSzX3QFI+kev5uC5jt0Ls/zCPfGeVLIs+91Hi/wKC3j93JznG+cUZxjnEWc
b5xRnCO3cht1qcft1Kewz9yp8xnMY7SihPl+XckoepBh9rtu5A2q2P+jW+P7
rc/H92gD/R/w9pDr
        "]]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJwNzGWUlWUYhtFvQJAZukFCuhuUFCYA6ZIWBIfuLmmkS+nukk5FSinpLgVR
ulMBCan9Y5/rfe5vrZMxulOtjiFBEMTyUy0sCMLjBEHc0CC4oBuYSF86EEE8
3/7UjUyiHx2JJIqylKM8n1OBilSiMlWoSjWqU4OaxPe/F3UTk+lPJ2qRwLe/
9EemMIDOpLbf1p3MZxRfkND+t/7EVAbShY/sd3QXCxhNbRLZL+lmpjGIrqSx
39XdLGQMdUhsv6w/M53BZLL9owdZTjfS2u7pHhYxlroksV/RLcxgCJlt/+oh
VtCddLb7upfF5HW/1jOMI7v7Pz3GGgq43+nv1COp+6pupbB3DGZ659ZXeoqi
3rH51juLPtHDfOL9ASu98+tbLaPntLjGIZIe7vT6QEvpb1pEYxLOEnc+faOl
9awW0w+JYLw7hz7Xz/S4fqqxWOtdUAP+8C6hodT3TqbXdBuzyOP+X08zlKzu
p3qEVfTkY9tD3cdSviOn7YWeYB0NSG67rtuZzTCy2Z7pUVbTiwy2R7qfZXxP
Q1LYb+gO5jCc3nxJSt9u6i/MZQR9aERjvqIJTfmaaJrRnBa0pBWtaUNb2pHK
/97SX5nHSL4ho/2xHuAHJpDL9lJPsp5C7hDOe5fUMKJo734PnQKK/A==
        "]], 
       LineBox[CompressedData["
1:eJwNzHV4lWUcx+EzGcImSIOEwOjuEJBmGz2YdDO6higgKNKtdHeDdHd3d6OU
lKCAlAEC3n/c5/N7vu91nbCYrtGxQYFAINhPVGgg0D8kEOhGOIm9b+kWpjKA
r4ggkspUoSrVqE4NahJFLWoTzRfUoS5J/O9t3co0BvI19Ujq26+6jekMojv1
SebbHd3ODAbTg/T2J3qIxYyhAcntd3UHMxlCTzLYn+phljCWhqSw39OdzGIo
35DR/qce4SfG0YiU9vu6i9kMI7vtbz3NanoRZnumR1nKeHLb3uh51tOYVLYH
ups5DCeH7R89wxp6k8n2XI+xjELeH3DNPYE87v/0Ahso6h2X6+4mfOL+Tffw
mTs+c90FNMAV9+eagBHunPqvltezWlJDCWetdxENpiK/eJfRj4ngW+/M+kLL
6XEtoSFUYrl3YY1DBX72Lq0JmejOq2/1IqXcH7HRXUw/5Ia7KandD3Uv8yjo
HcRV90hyuV/rOdbxHVlsL/UEK5hEPts7vcQmmpHG9kj3MZ8f6ENW+ys9yUom
05y09t91Pwv4ke9pQTrf/tADLGQUfWlJDK1oTRva0o72dKAjnehMF2Lpyqf+
87EeZBGj6Uc2+196ilVMIb/tvV5mM8W943HTXVYTEcmX3v8D4CaLxw==
        "]]}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{0.1427065566666646, 1.1403508771929824`},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 0.6382031230831757}, {0, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.009909931328330223, 0.009909931328330223}, {
   0.08926335978034847, 0.08926335978034847}}]], "Output",
 CellChangeTimes->{
  3.662404459246986*^9, 3.662404598895645*^9, 3.662405222464849*^9, 
   3.662405718428056*^9, 3.662406297584968*^9, 3.662406330339636*^9, 
   3.662406417572104*^9, 3.662406805347022*^9, 3.662406839001141*^9, {
   3.66240688798071*^9, 3.6624069126876163`*^9}, {3.662406984717441*^9, 
   3.662407012861548*^9}, {3.6624070836417437`*^9, 3.662407106780003*^9}, {
   3.662407909635324*^9, 3.662407928564303*^9}, 3.6624079656102057`*^9, 
   3.6624088419917307`*^9, 3.662408907167906*^9, {3.6624089455614347`*^9, 
   3.662408976175329*^9}, {3.662409014175234*^9, 3.662409088225396*^9}, 
   3.662409224178812*^9, 3.6624105841259403`*^9, 3.662410646600896*^9, {
   3.662411258379698*^9, 3.662411325108368*^9}, 3.662411411686612*^9, 
   3.662411460658895*^9, 3.662411832776853*^9, 3.662754828152622*^9, 
   3.662755118997655*^9, 3.662755189829032*^9, {3.662755219952276*^9, 
   3.6627552330088873`*^9}, 3.662844577584013*^9, 3.662845109814867*^9, 
   3.662845252658106*^9, 3.662845545070427*^9, 3.6629925511403713`*^9, 
   3.662999894246655*^9, 3.6630112982118683`*^9, 3.66301134057516*^9, 
   3.6630117427031116`*^9, 3.663011881103751*^9, 3.663331225309614*^9, 
   3.6633322789312687`*^9, {3.6633323116670628`*^9, 3.6633323292125673`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SAD and SAR plots", "Subsection",
 CellChangeTimes->{{3.663011425258603*^9, 3.66301143154622*^9}, {
  3.663333575377449*^9, 3.663333580146984*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "total", " ", "number", " ", "of", " ", "individuals", " ", "in", " ", 
     "each", " ", "plot"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "spp"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ind", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"SabA", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9, {3.662999096685413*^9, 3.662999096784697*^9}, {
   3.663011939665545*^9, 3.6630119509250803`*^9}, {3.6630119815739107`*^9, 
   3.663012049294896*^9}, {3.66301211950314*^9, 3.6630121279501762`*^9}, {
   3.663012339612657*^9, 3.663012345883143*^9}, {3.6633332011393003`*^9, 
   3.663333234154338*^9}, {3.663333557352223*^9, 3.663333567071292*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "shape", " ", "parameters", " ", "of", " ", "the", " ", "Gamma", " ", 
     "distribution"}], ",", " ", 
    RowBox[{"\[Alpha]", " ", "and", " ", "\[Beta]"}], ",", " ", 
    RowBox[{"eqns", " ", "7", " ", "and", " ", "8"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]2p", "[", "L_", "]"}], ":=", 
     RowBox[{"\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["L", "\[Rho]"], ")"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox[
           RowBox[{"2", "\[Lambda]"}], "L"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"BesselK", "[", 
              RowBox[{"1", ",", 
               FractionBox["L", "\[Lambda]"]}], "]"}], 
             RowBox[{"BesselI", "[", 
              RowBox[{"1", ",", 
               FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"BesselK", "[", 
               RowBox[{"1", ",", 
                FractionBox["L", "\[Lambda]"]}], "]"}], 
              RowBox[{"BesselI", "[", 
               RowBox[{"0", ",", 
                FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
             RowBox[{
              RowBox[{"BesselK", "[", 
               RowBox[{"0", ",", 
                FractionBox["L", "\[Lambda]"]}], "]"}], 
              RowBox[{"BesselI", "[", 
               RowBox[{"1", ",", 
                FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], 
        ")"}], 
       RowBox[{"-", "1"}]]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Beta]2", "[", "L_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Total", "[", "ind", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"Nspecies", "*", "Lx", "*", "Ly"}], ")"}]}], ")"}], "*", 
      SuperscriptBox["\[Rho]", "2"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "\[Lambda]"}], "L"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"BesselK", "[", 
              RowBox[{"1", ",", 
               FractionBox["L", "\[Lambda]"]}], "]"}], 
             RowBox[{"BesselI", "[", 
              RowBox[{"0", ",", 
               FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
            RowBox[{
             RowBox[{"BesselK", "[", 
              RowBox[{"0", ",", 
               FractionBox["L", "\[Lambda]"]}], "]"}], 
             RowBox[{"BesselI", "[", 
              RowBox[{"1", ",", 
               FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], 
       ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9, {3.662999096685413*^9, 3.662999096784697*^9}, {
   3.663011939665545*^9, 3.6630119509250803`*^9}, {3.6630119815739107`*^9, 
   3.663012049294896*^9}, {3.66301211950314*^9, 3.6630121279501762`*^9}, {
   3.663012339612657*^9, 3.663012345883143*^9}, {3.6633332011393003`*^9, 
   3.66333324551906*^9}, {3.663333766716473*^9, 3.663333775273939*^9}, {
   3.6633342675388317`*^9, 3.663334272475065*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "q", " ", "and", " ", "the", " ", "integral", " ", "of", " ", "q", " ", 
     "over", " ", "distances", " ", "L"}], ",", " ", 
    RowBox[{
    "eqn", " ", "10", " ", "and", " ", "its", " ", "integral", " ", "over", 
     " ", "L"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rsapres2medp", "[", 
      RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"CDF", "[", 
       RowBox[{
        RowBox[{"GammaDistribution", "[", 
         RowBox[{
          RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
          RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
        SuperscriptBox["2", 
         RowBox[{"n", "+", "1"}]]}], "]"}], "-", 
      RowBox[{"CDF", "[", 
       RowBox[{
        RowBox[{"GammaDistribution", "[", 
         RowBox[{
          RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
          RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
        SuperscriptBox["2", "n"]}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"sarmedp", "[", "L_", "]"}], ":=", 
     RowBox[{"1", "-", 
      RowBox[{"CDF", "[", 
       RowBox[{
        RowBox[{"GammaDistribution", "[", 
         RowBox[{
          RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
          RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", "1"}], "]"}]}]}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9, {3.662999096685413*^9, 3.662999096784697*^9}, {
   3.663011939665545*^9, 3.6630119509250803`*^9}, {3.6630119815739107`*^9, 
   3.663012049294896*^9}, {3.66301211950314*^9, 3.6630121279501762`*^9}, {
   3.663012339612657*^9, 3.663012345883143*^9}, {3.6633332011393003`*^9, 
   3.6633332697226*^9}, {3.663333779923368*^9, 3.663333787666644*^9}, {
   3.663333851877692*^9, 3.663333884472135*^9}, {3.663334242225595*^9, 
   3.6633342633790007`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"sSAD", ",", " ", 
    RowBox[{
     RowBox[{"eqn", " ", "9"}], ";", " ", 
     RowBox[{
      RowBox[{
      "downscaled", " ", "in", " ", "sense", " ", "that", " ", "only", " ", 
       "valid", " ", "for", " ", "r"}], " ", "<", " ", 
      RowBox[{"max", " ", "radius", " ", "sampled"}]}]}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SAD", "[", 
     RowBox[{"n_", ",", "r_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Nspecies", "*", 
      FractionBox[
       RowBox[{"rsapres2medp", "[", 
        RowBox[{"n", ",", "r"}], "]"}], 
       RowBox[{"sarmedp", "[", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
         RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
     RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9, {3.662999096685413*^9, 3.662999096784697*^9}, {
   3.663011939665545*^9, 3.6630119509250803`*^9}, {3.6630119815739107`*^9, 
   3.663012049294896*^9}, {3.66301211950314*^9, 3.6630121279501762`*^9}, {
   3.663012339612657*^9, 3.663012345883143*^9}, {3.6633332011393003`*^9, 
   3.6633332697226*^9}, {3.66333373398069*^9, 3.663333750459564*^9}, {
   3.663334234521531*^9, 3.663334237937579*^9}, {3.66333470045748*^9, 
   3.6633347204675627`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "beginning", " ", "to", " ", "think", " ", "about", " ", "preston", " ", 
    "classes"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"prest", "[", "1", "]"}], "=", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"SA", "[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}], "]"}], "//", 
     "N"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "mean", " ", "number", " ", "of", " ", "species", " ", "in", " ", "one", 
     " ", "bin"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"prest", "[", "2", "]"}], "=", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Mean", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Boole", "[", 
               RowBox[{"#", ">", "0"}], "]"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"SA", "[", "i", "]"}], "+", 
               RowBox[{"SA", "[", "j", "]"}]}], ")"}]}], "-", 
            RowBox[{"SA", "[", "i", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Max", "[", "nplot", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}]}], "]"}], 
      "]"}], "//", "N"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "mean", " ", "number", " ", "of", " ", "species", " ", "gained", " ", 
     "by", " ", "sampling", " ", "two", " ", "bins", " ", "instead", " ", 
     "of", " ", "one"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Mean", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Boole", "[", 
                 RowBox[{"#", ">", "0"}], "]"}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"SA", "[", "i", "]"}], "+", 
                 RowBox[{"SA", "[", "j", "]"}], "+", 
                 RowBox[{"SA", "[", "k", "]"}]}], ")"}]}], "-", 
              RowBox[{"Boole", "[", 
               RowBox[{"#", ">", "0"}], "]"}]}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"SA", "[", "i", "]"}], "+", 
              RowBox[{"SA", "[", "j", "]"}]}], ")"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Max", "[", "nplot", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Max", "[", "nplot", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}]}], "]"}], 
      "]"}], "//", "N"}], " ", "*)"}], 
   RowBox[{"(*", 
    RowBox[{
    "mean", " ", "number", " ", "of", " ", "species", " ", "gained", " ", 
     "by", " ", "sampling", " ", "three", " ", "bins", " ", "instead", " ", 
     "of", " ", "two"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.663338460756271*^9, 3.663338527693771*^9}, {
  3.663338687528215*^9, 3.663338707766415*^9}, {3.663338773652945*^9, 
  3.6633387737478857`*^9}, {3.6633388248066607`*^9, 3.663338988333918*^9}}],

Cell[BoxData["6.733333333333333`"], "Output",
 CellChangeTimes->{3.663338854316596*^9, 3.663338916090876*^9, 
  3.663338990541024*^9}],

Cell[BoxData["4.986666666666666`"], "Output",
 CellChangeTimes->{3.663338854316596*^9, 3.663338916090876*^9, 
  3.663338993448164*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SAD", "[", 
       RowBox[{"n", ",", "r"}], "]"}], "/.", 
      RowBox[{"n", "\[Rule]", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", 
       RowBox[{"Max", "[", "rvec", "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Max", "[", "rvec", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["Asub", "2"], "*", "i"}], ",", 
        RowBox[{"prest", "[", "i", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", "rvec", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Reef data\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Radius (lat/long) of sampled area\>\"", ",", " ", 
      "\"\<Number of species\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.663337103718054*^9, 3.6633371067342997`*^9}, {
  3.6633373127606907`*^9, 3.663337335841921*^9}, {3.663337390475956*^9, 
  3.6633374569601917`*^9}, {3.663339003015457*^9, 3.663339050082156*^9}, {
  3.6633390862523003`*^9, 3.663339138013578*^9}, {3.663339168408388*^9, 
  3.66333919820093*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw9lnc0FQD7x12brFu4N0KhpFRGyn6ehIxSsko0jHay3RCSJKKUQkWiZES2
7JQ9c+1b9roo0bAu+vmd877vc85znvP57znffz7fLbbXjzswMzEx9a7t/9+V
DCO+UT+KFtN/5m0hV6n2DQv4LwvEQinxxvn/cWW4leYixeN/PDRdcFWB5AN9
HaGX6AcXNPzfcjfn0vzh8/n3mfw845oPLAtHv6TcBkmXpCr3z25acRwXV75T
gmCgQfqK3CBVK71AWIhL/x6QjjvceqghCCUXquS2ku7D787Dg1+kdKCB5KZz
YCwcZB3HPNzJF+GHHTEjg/YQKujqMd4GgfCnmF6oof0ISE7cdyoinsHyho9V
9SmPwdGl+oXo5DtgvRrVeoL4BBp+/lQItSqGdZWOvWOUp1A66bfXRKUG1m/S
m3AbiAK2fNinKUIFETexv8z6MdC0pWXM4DQNJBv/MEW8fwai3LVzQXJDsEO6
kUeC9ALS79oruv4aB0WfRHK6byz8PU/b1+gwDartXtLqY3Hglv4x9kjOL5D+
JBiXRouHPEZ/4hG9JdjuyPTaJfwVJJw1S1NRXQU5ke8pqtoJ4Gk/O28rQkAl
l895NSmJMCvqlc/Fw4b7xN8Xh9u8Bp/euzMFc+yoVv+swpz4Bg7ICNsYtnGi
tqRL0zAlCWYSDKpiT/CgXrNNW6rcW+glPUjdtcqLhl4GPc4Db8FCfNN54gN+
NN6m3K8SmQwKX2dir98RQBPq5tF/h1LgYBvFvVCFiGa+PFPVjBQYi79m7T1I
xBM7FmbC3qfCsrhXSb/fejwb0LIsSnoHSsZuHIlxG9B+dzHzcP07aJe/w5ws
IYgXaUmcqb7p0GgwtSk2ShCvBj3ic1bMgPJWp+ExdiG8rugrqDKWAelhRlvp
14TQpe+SyL+Y9xD1w46woUkI1at2CAxvy4Q6r48SDdLCCM7Cwqm0TNijefsx
pVwY8RBPTNjeLLB4PvVCkYWE2mLMm5zDs4BKUKKxHCChzu/5ODN6FpgQuhsP
3iChXt2PLSra2XA74Giy4TsS6r8cfi36IhuSKirzHWgkNHTvkfn3Nxu4X5m8
p7OQ8bBRS+rQ0Ryg521KEZYlo/GWql3VKTlgV8PEpWpIxmPzRZkpLLlw+Ex9
R8gFMh5vylQKs8mFr7/EVE1ukdEsMSnfqSAXllQvCVRGkdHixgtVM2IeSIha
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
bwo=
      "]]}}, {{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], 
     PointBox[{{0.06397904117843578, 6.733333333333333}, {
      0.12795808235687156`, 4.986666666666666}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Frame->{True, True, False, False},
  FrameLabel->{
    FormBox["\"Radius (lat/long) of sampled area\"", TraditionalForm], 
    FormBox["\"Number of species\"", TraditionalForm]},
  ImageSize->500,
  Method->{},
  PlotLabel->FormBox["\"Reef data\"", TraditionalForm],
  PlotRange->{{0, 4.47213595499958}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.66333731786626*^9, 3.663337336466913*^9}, {
   3.6633373913201714`*^9, 3.663337457744381*^9}, 3.6633390512147703`*^9, {
   3.663339091758369*^9, 3.663339109069229*^9}, 3.6633391391461573`*^9, {
   3.66333917445919*^9, 3.663339199644562*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"SAR", ",", " ", 
    RowBox[{
     RowBox[{"eqn", " ", "11"}], ";", " ", 
     RowBox[{
      RowBox[{
      "downscaled", " ", "in", " ", "sense", " ", "that", " ", "only", " ", 
       "valid", " ", "for", " ", "r"}], " ", "<", " ", 
      RowBox[{"max", " ", "radius", " ", "sampled"}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SAR", "[", "r_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Nspecies", "*", 
      FractionBox[
       RowBox[{"sarmedp", "[", "r", "]"}], 
       RowBox[{"sarmedp", "[", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
         RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
     RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9, {3.662999096685413*^9, 3.662999096784697*^9}, {
   3.663011939665545*^9, 3.6630119509250803`*^9}, {3.6630119815739107`*^9, 
   3.663012049294896*^9}, {3.66301211950314*^9, 3.6630121279501762`*^9}, {
   3.663012339612657*^9, 3.663012345883143*^9}, {3.6633332011393003`*^9, 
   3.6633332697226*^9}, {3.66333373398069*^9, 3.663333750459564*^9}, {
   3.66333421578601*^9, 3.663334223577743*^9}, {3.6633342961767693`*^9, 
   3.663334298983612*^9}, 3.663334729798552*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SAR", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"rvec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"Max", "[", "rvec", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", "rvec", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Reef data\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Radius (lat/long) of sampled area\>\"", ",", " ", 
      "\"\<Mean number of species\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.662845323905514*^9, 3.6628453352031307`*^9}, {
  3.663011447325644*^9, 3.6630114651633997`*^9}, {3.66333657189133*^9, 
  3.6633366069240713`*^9}, {3.663336903088537*^9, 3.663336967655809*^9}, {
  3.663337000824403*^9, 3.663337029476574*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0ntUzGkYB/CZaWq6qjeG7Fq7KaZW2ZSwOfl9Q/PG5nKqLXaTJtIkp0gJ
k1zSxS2XpdhatiZs2k23RWM1y25kdDMqpKvowsQ0oi2l/fnjOc/5nO95nnOe
cx7rkCifUB6Hw1nO1qfeFKM/nsPRMqKmLbHWOWKocL04kK9lVuiubchkfcM0
wqfMUMssaZUKhXIxsnLrTkQTLeNtebpckCvG2vpMixfTtAx/cpLTywtitLs4
j1N5snmErESeJ0a3Lsjo1GEt81W8sexloRgDW66PiSb1Mw4D9U515WKExRLh
fU8dIzxt/i/TJIb53D794OC3zLb6fatGtWLIrXma8NgB5kThiSKOPsVx4c3h
19nvmB7hWpJqRVFSMfw8VPGemRAlvvjRjuKbhNbBgJeDDCeu5qTjtxQZkg9j
5ROGmNxD3nGZlGION7Nz0sxhxkVVtKzPl+LrvPY3r1Z/YF6VygxmB1P4m+U9
KooeYbhHvToUmygisy6XapJHGfsjUb3eMRRtLj6KnOKPzPsrGgPNboqklPjM
Zaox5oaN6TWPZIrbWy+qr8Zz0O3d75aXRjHfdaZ6P+GCJ504xT+dotJ/q5Jm
cSE9U3lA8As7H2/soXLmofn6aNdDOcVaTmihp5IHuxcy5m4ehSTVsjQhQA+T
a3aGNFyheHoh0Fmn0cNTFdw3/UmxxVp6LmgHHz16BUM+CorZ2XfOpZrr41rf
Qss1SgqzPV1H8rP0YbXe6Ke7/1Cs0+W8MxQZIPDvBP+uuxSt4cU6m5sGsDjv
OTStiiKOSWyZt1QAhSjGsbOWwn3ypUCjDgGuRIqp8iHFztQwf+F2Q+zs7m0N
eERR932v+2dcIzx8IAo52EThKyova84wwnf2hywaWyj6/f1sztga4/EKSWVF
O4X+lBRBWoExXI/ZhiV3Uni+MN3rscQEi9MkZpIuil9N/br6ak2Qrz7VqOmh
sJv/uj0gzBSOJm6Vx19RqG4tvacYMMWArLtT00fxrN3DYfUeM3i0ipnpWgoR
/6hNiXAcsiWL98ToKFKSzhoKcsYhx6z7ddIAxXiToX1WbuYgmue5v7+nEM54
F7uh1hyuixxWlfxHcXblk3w/RwsI7OceOzDM3p/W0dWwwwKbtg02hI9QvJGp
zvgqLbBob8H9Lz5SBJZyUyP5BOovC4fKxtj/iAzxkK4kcLF0HZFyvRD1WL41
6DSBmcnVMg3PC5vl8xvT0wkEo9FBb1lLI6vdajMIqnk2vGHWwfxBPfxMcLhs
o1ig54VVTsvSrc8TmHyeeduatVOqVvH8NwLJAtVBf9baee78iL/Y/SPNfkrW
Gp5aKr9JEO/14XEF657qjdVPywk2VwgDq1i3rz+e7n2LoOaeeN0T1nXHOu1m
3SGYoTy/5i3rou6Dy/trCRaqQ6eK+F4oKJ5abP+AwLYq8aQj68u7SyaGqAl2
/HhRfw7rnPEtbep6AkdzXQ9Yn2ScokufECQr8+U/sE4zrmjUNBH4Xmoyl7A+
1LBmwfRmglLXibIw1vsjEvnprQTGthkrYlgnzLUKr2kjmJXYdnUX613cP6oN
OgiyHeym7mO9vcrDmXlG0NIUdyCFdXRGY3pcJ8HeyOreo6z/B2JoHaw=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->{True, True, False, False},
  FrameLabel->{{
     FormBox["\"Mean number of species\"", TraditionalForm], None}, {
     FormBox["\"Radius (lat/long) of sampled area\"", TraditionalForm], None}},
  ImageSize->500,
  Method->{},
  PlotLabel->FormBox["\"Reef data\"", TraditionalForm],
  PlotRange->{{0, 4.47213595499958}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.662845336136422*^9, {3.662992555597104*^9, 3.6629925673089657`*^9}, 
   3.66299990242492*^9, 3.663011413085125*^9, {3.663011453853804*^9, 
   3.663011465825302*^9}, 3.6630117431016293`*^9, 3.663011881517213*^9, 
   3.6633312257093573`*^9, 3.663332279366137*^9, {3.6633323117967987`*^9, 
   3.6633323295355453`*^9}, 3.663334571248248*^9, {3.663336583304384*^9, 
   3.663336607339878*^9}, {3.663336962679144*^9, 3.663336968251821*^9}, 
   3.6633370306198397`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "extrapolate", " ", "to", " ", "get", " ", "number", " ", "of", " ", "spp",
     " ", "if", " ", "we", " ", "sampled", " ", "more", " ", "area"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"upRichness", "=", 
    RowBox[{"Nspecies", "*", 
     FractionBox[
      RowBox[{"sarmedp", " ", "[", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}], 
      RowBox[{"sarmedp", " ", "[", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"samp", "*", "Asp"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}]}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["S", "up"], 
      RowBox[{"(", 
       SubscriptBox["R", "0"], ")"}]}], ",", " ", 
     RowBox[{
      RowBox[{"p", ".", " ", "328"}], ";", " ", 
      RowBox[{"samp", " ", "is", " ", "number", " ", "of", " ", "samples"}]}],
      ",", " ", 
     RowBox[{
     "and", " ", "Asp", " ", "is", " ", "area", " ", "of", " ", "each", " ", 
      "sample"}]}], " ", "*)"}], "\n", 
   RowBox[{"dens", "=", 
    RowBox[{
     RowBox[{"Total", "[", "ind", "]"}], "/", "Nspecies"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "avg", " ", "density", " ", "per", " ", "species", " ", "in", " ", 
     "sampled", " ", "area"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"UPdens", "=", 
    RowBox[{"Nspecies", "*", 
     RowBox[{"dens", "/", "upRichness"}]}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"mean", " ", "density", " ", "per", " ", "species"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9, {3.662999096685413*^9, 3.662999096784697*^9}, {
   3.663011939665545*^9, 3.6630119509250803`*^9}, {3.6630119815739107`*^9, 
   3.663012049294896*^9}, {3.66301211950314*^9, 3.6630121279501762`*^9}, {
   3.663012339612657*^9, 3.663012345883143*^9}, {3.6633332011393003`*^9, 
   3.6633332697226*^9}, {3.66333373398069*^9, 3.663333750459564*^9}, {
   3.66333421578601*^9, 3.663334223577743*^9}, {3.6633342961767693`*^9, 
   3.663334298983612*^9}, {3.6633346902755957`*^9, 3.663334694530813*^9}, {
   3.663334742438098*^9, 3.663334781893489*^9}, 3.663334867187467*^9, {
   3.663334912261726*^9, 3.663334912420676*^9}, {3.66333498628887*^9, 
   3.663335016306458*^9}, {3.663335071500392*^9, 3.66333510081566*^9}, {
   3.663335313732637*^9, 3.66333532623359*^9}, {3.663335710023465*^9, 
   3.663335711461068*^9}, {3.663335752569254*^9, 3.663335775397972*^9}, {
   3.663336193727682*^9, 3.6633362076519737`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"disconnected", " ", "SAR"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"downSAR", "[", "r_", "]"}], ":=", 
    RowBox[{"upRichness", "*", 
     FractionBox[
      RowBox[{"sarmedp", "[", "r", "]"}], 
      RowBox[{"sarmedp", "[", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}, 
   3.662992563091392*^9, {3.662999096685413*^9, 3.662999096784697*^9}, {
   3.663011939665545*^9, 3.6630119509250803`*^9}, {3.6630119815739107`*^9, 
   3.663012049294896*^9}, {3.66301211950314*^9, 3.6630121279501762`*^9}, {
   3.663012339612657*^9, 3.663012345883143*^9}, {3.6633332011393003`*^9, 
   3.6633332697226*^9}, {3.66333373398069*^9, 3.663333750459564*^9}, {
   3.66333421578601*^9, 3.663334223577743*^9}, {3.6633342961767693`*^9, 
   3.663334298983612*^9}, {3.6633346902755957`*^9, 3.663334694530813*^9}, 
   3.663335002545569*^9, 3.663335887855961*^9, {3.663336258859536*^9, 
   3.6633362624662046`*^9}, {3.663336402001206*^9, 3.663336405368558*^9}, {
   3.6633364505871363`*^9, 3.663336454458967*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"downSAR", "[", "r", "]"}], "/.", 
      RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}], "/.", 
     RowBox[{"Asp", "\[Rule]", 
      RowBox[{"Lx", "*", "Ly", "*", "0.012"}]}]}], "/.", 
    RowBox[{"samp", "\[Rule]", "60"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.01", ",", 
     RowBox[{"10", "*", 
      RowBox[{"Max", "[", "rvec", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "All"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Upscaled SAR of reef data\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Radius (lat/long) of sampled area (Log scale)\>\"", ",", " ", 
      "\"\<Mean number of species (Log scale)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.66333622905059*^9, 3.663336249706564*^9}, {
  3.663336290301879*^9, 3.663336389096035*^9}, {3.663336520360395*^9, 
  3.663336558737894*^9}, {3.66333661286027*^9, 3.663336614799089*^9}, {
  3.663336757451212*^9, 3.663336873401341*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-4.605170185988091, -6.907755278982137},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  Frame->{True, True, False, False},
  FrameLabel->{{
     FormBox["\"Mean number of species (Log scale)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"Radius (lat/long) of sampled area (Log scale)\"", TraditionalForm], 
     None}},
  FrameTicks->{{{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {2.302585092994046, 
       FormBox["10", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {{{-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {2.302585092994046, 
       FormBox["10", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  ImageSize->500,
  Method->{},
  PlotLabel->FormBox["\"Upscaled SAR of reef data\"", TraditionalForm],
  PlotRange->{{-4.605170185988091, 3.800451229771041}, {-6.907755278982137, 
   3.9194933985799962`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {None, 
     Scaled[0.02]}},
  Ticks->{{{-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {2.302585092994046, 
      FormBox["10", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.659260036932778, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.407945608651872, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659905, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782616`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.9459101490553132`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.4011973816621555`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.248495242049359, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.382026634673881, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.499809670330265, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, {{-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {2.302585092994046, 
      FormBox["10", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.298317366548036, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.659260036932778, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.407945608651872, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659905, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782616`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.9459101490553132`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.4011973816621555`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.248495242049359, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.382026634673881, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.499809670330265, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.663336240235743*^9, 3.663336390242591*^9}, 
   3.663336560030095*^9, 3.663336616354837*^9, {3.663336777377914*^9, 
   3.663336874808775*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1267, 980},
WindowMargins->{{2, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 210, 4, 92, "Title"],
Cell[792, 28, 314, 6, 51, "Subtitle"],
Cell[1109, 36, 182, 5, 49, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1316, 45, 147, 2, 80, "Section"],
Cell[1466, 49, 222, 5, 30, "Text"],
Cell[1691, 56, 1455, 37, 63, "Input"],
Cell[3149, 95, 231, 4, 30, "Text"],
Cell[3383, 101, 1975, 49, 97, "Input"],
Cell[5361, 152, 185, 4, 30, "Text"],
Cell[5549, 158, 1908, 55, 97, "Input"],
Cell[7460, 215, 178, 4, 30, "Text"],
Cell[7641, 221, 984, 27, 80, "Input"],
Cell[8628, 250, 210, 4, 30, "Text"],
Cell[8841, 256, 3542, 99, 114, "Input"],
Cell[12386, 357, 203, 4, 30, "Text"],
Cell[12592, 363, 5334, 154, 165, "Input"],
Cell[17929, 519, 154, 2, 30, "Text"],
Cell[18086, 523, 3146, 88, 97, "Input"],
Cell[21235, 613, 236, 5, 30, "Text"],
Cell[21474, 620, 4891, 145, 199, "Input"],
Cell[26368, 767, 175, 4, 30, "Text"],
Cell[26546, 773, 1360, 30, 63, "Input"],
Cell[27909, 805, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[28037, 810, 248, 5, 28, "Input"],
Cell[28288, 817, 2282, 40, 230, "Output"]
}, Open  ]],
Cell[30585, 860, 148, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[30758, 868, 1545, 48, 126, "Input"],
Cell[32306, 918, 1891, 30, 74, "Message"]
}, Open  ]],
Cell[34212, 951, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[34339, 956, 770, 19, 28, "Input"],
Cell[35112, 977, 1373, 26, 81, "Output"]
}, Open  ]],
Cell[36500, 1006, 125, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[36650, 1013, 1060, 29, 80, "Input"],
Cell[37713, 1044, 1545, 33, 67, "Output"]
}, Open  ]],
Cell[39273, 1080, 135, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[39433, 1087, 252, 6, 28, "Input"],
Cell[39688, 1095, 1759, 41, 77, "Output"]
}, Open  ]],
Cell[41462, 1139, 124, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[41611, 1146, 2299, 56, 233, "Input"],
Cell[43913, 1204, 4580, 85, 533, "Output"]
}, Open  ]],
Cell[48508, 1292, 180, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[48713, 1300, 2712, 74, 165, "Input"],
Cell[51428, 1376, 3312, 59, 503, "Output"]
}, Open  ]],
Cell[54755, 1438, 122, 3, 30, "Text"],
Cell[54880, 1443, 6762, 209, 483, "Input"],
Cell[61645, 1654, 667, 18, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[62349, 1677, 151, 2, 50, "Section"],
Cell[62503, 1681, 141, 3, 30, "Text"],
Cell[62647, 1686, 580, 13, 46, "Input"],
Cell[63230, 1701, 209, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[63464, 1708, 202, 4, 28, "Input"],
Cell[63669, 1714, 572, 9, 28, "Output"]
}, Open  ]],
Cell[64256, 1726, 376, 6, 49, "Text"],
Cell[64635, 1734, 112, 1, 30, "Text"],
Cell[64750, 1737, 228, 6, 28, "Input"],
Cell[64981, 1745, 132, 3, 30, "Text"],
Cell[65116, 1750, 622, 20, 46, "Input"],
Cell[65741, 1772, 205, 2, 30, "Text"],
Cell[65949, 1776, 1691, 40, 63, "Input"],
Cell[67643, 1818, 177, 2, 30, "Text"],
Cell[67823, 1822, 1611, 45, 165, "Input"],
Cell[69437, 1869, 170, 2, 30, "Text"],
Cell[69610, 1873, 1705, 45, 131, "Input"],
Cell[71318, 1920, 202, 2, 30, "Text"],
Cell[71523, 1924, 3542, 99, 114, "Input"],
Cell[75068, 2025, 195, 2, 30, "Text"],
Cell[75266, 2029, 8151, 227, 267, "Input"],
Cell[83420, 2258, 154, 2, 30, "Text"],
Cell[83577, 2262, 8190, 229, 267, "Input"],
Cell[91770, 2493, 304, 4, 30, "Text"],
Cell[92077, 2499, 5695, 152, 182, "Input"],
Cell[97775, 2653, 155, 3, 30, "Text"],
Cell[97933, 2658, 1400, 41, 63, "Input"],
Cell[99336, 2701, 167, 2, 30, "Text"],
Cell[99506, 2705, 1682, 40, 80, "Input"],
Cell[101191, 2747, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[101319, 2752, 637, 14, 80, "Input"],
Cell[101959, 2768, 2466, 40, 243, "Output"]
}, Open  ]],
Cell[104440, 2811, 140, 2, 30, "Text"],
Cell[104583, 2815, 2139, 59, 120, "Input"],
Cell[106725, 2876, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[106852, 2881, 770, 19, 28, "Input"],
Cell[107625, 2902, 691, 15, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108353, 2922, 529, 14, 28, "Input"],
Cell[108885, 2938, 508, 12, 81, "Output"]
}, Open  ]],
Cell[109408, 2953, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[109550, 2958, 1060, 29, 80, "Input"],
Cell[110613, 2989, 1128, 23, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111778, 3017, 916, 25, 80, "Input"],
Cell[112697, 3044, 967, 21, 65, "Output"]
}, Open  ]],
Cell[113679, 3068, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[113831, 3073, 252, 6, 28, "Input"],
Cell[114086, 3081, 1213, 27, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115336, 3113, 169, 3, 28, "Input"],
Cell[115508, 3118, 1019, 23, 65, "Output"]
}, Open  ]],
Cell[116542, 3144, 116, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[116683, 3149, 5142, 123, 505, "Input"],
Cell[121828, 3274, 13182, 231, 534, "Output"]
}, Open  ]],
Cell[135025, 3508, 172, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[135222, 3514, 2817, 77, 165, "Input"],
Cell[138042, 3593, 58176, 977, 515, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196255, 4575, 2728, 73, 165, "Input"],
Cell[198986, 4650, 62183, 1044, 515, "Output"]
}, Open  ]],
Cell[261184, 5697, 122, 3, 30, "Text"],
Cell[261309, 5702, 6762, 209, 483, "Input"],
Cell[268074, 5913, 4991, 152, 325, "Input"],
Cell[CellGroupData[{
Cell[273090, 6069, 1060, 30, 97, "Input"],
Cell[274153, 6101, 19137, 322, 247, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[293339, 6429, 147, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[293511, 6435, 137, 3, 44, "Subsection"],
Cell[293651, 6440, 203, 3, 30, "Text"],
Cell[293857, 6445, 619, 13, 46, "Input"],
Cell[294479, 6460, 268, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[294772, 6469, 252, 5, 28, "Input"],
Cell[295027, 6476, 971, 15, 28, "Output"]
}, Open  ]],
Cell[296013, 6494, 149, 3, 30, "Text"],
Cell[296165, 6499, 1276, 33, 114, "Input"],
Cell[CellGroupData[{
Cell[297466, 6536, 150, 3, 28, "Input"],
Cell[297619, 6541, 458, 8, 28, "Output"]
}, Open  ]],
Cell[298092, 6552, 109, 1, 30, "Text"],
Cell[298204, 6555, 204, 5, 28, "Input"],
Cell[298411, 6562, 177, 2, 30, "Text"],
Cell[298591, 6566, 888, 23, 80, "Input"],
Cell[299482, 6591, 205, 2, 30, "Text"],
Cell[299690, 6595, 1838, 45, 114, "Input"],
Cell[301531, 6642, 139, 3, 30, "Text"],
Cell[301673, 6647, 321, 9, 46, "Input"],
Cell[301997, 6658, 176, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[302198, 6666, 1414, 40, 131, "Input"],
Cell[303615, 6708, 5709, 109, 243, "Output"]
}, Open  ]],
Cell[309339, 6820, 124, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[309488, 6827, 308, 8, 28, "Input"],
Cell[309799, 6837, 241, 3, 28, "Output"]
}, Open  ]],
Cell[310055, 6843, 170, 2, 30, "Text"],
Cell[310228, 6847, 1083, 28, 80, "Input"],
Cell[311314, 6877, 202, 2, 30, "Text"],
Cell[311519, 6881, 3542, 99, 114, "Input"],
Cell[315064, 6982, 195, 2, 30, "Text"],
Cell[315262, 6986, 6615, 183, 216, "Input"],
Cell[321880, 7171, 154, 2, 30, "Text"],
Cell[322037, 7175, 5886, 161, 182, "Input"],
Cell[327926, 7338, 304, 4, 30, "Text"],
Cell[328233, 7344, 6162, 156, 199, "Input"],
Cell[334398, 7502, 155, 3, 30, "Text"],
Cell[334556, 7507, 911, 25, 46, "Input"],
Cell[335470, 7534, 104, 1, 30, "Text"],
Cell[335577, 7537, 631, 16, 28, "Input"],
Cell[336211, 7555, 167, 2, 30, "Text"],
Cell[336381, 7559, 1415, 31, 63, "Input"],
Cell[337799, 7592, 94, 1, 30, "Text"],
Cell[337896, 7595, 354, 11, 28, "Input"],
Cell[338253, 7608, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[338381, 7613, 393, 7, 28, "Input"],
Cell[338777, 7622, 2300, 38, 246, "Output"]
}, Open  ]],
Cell[341092, 7663, 172, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[341289, 7671, 1011, 25, 96, "Input"],
Cell[342303, 7698, 1232, 24, 233, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343584, 7728, 130, 3, 44, "Subsection"],
Cell[343717, 7733, 1601, 47, 120, "Input"],
Cell[345321, 7782, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[345448, 7787, 770, 19, 28, "Input"],
Cell[346221, 7808, 727, 16, 81, "Output"]
}, Open  ]],
Cell[346963, 7827, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[347105, 7832, 1060, 29, 80, "Input"],
Cell[348168, 7863, 1161, 24, 63, "Output"]
}, Open  ]],
Cell[349344, 7890, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[349496, 7895, 252, 6, 28, "Input"],
Cell[349751, 7903, 1292, 30, 77, "Output"]
}, Open  ]],
Cell[351058, 7936, 116, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[351199, 7941, 2402, 59, 233, "Input"],
Cell[353604, 8002, 5041, 88, 533, "Output"]
}, Open  ]],
Cell[358660, 8093, 172, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[358857, 8099, 2817, 77, 165, "Input"],
Cell[361677, 8178, 62010, 1035, 515, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[423736, 9219, 153, 2, 36, "Subsection"],
Cell[423892, 9223, 1015, 24, 46, "Input"],
Cell[424910, 9249, 3646, 97, 127, "Input"],
Cell[428559, 9348, 1962, 49, 69, "Input"],
Cell[430524, 9399, 1441, 35, 81, "Input"],
Cell[CellGroupData[{
Cell[431990, 9438, 3653, 97, 114, "Input"],
Cell[435646, 9537, 134, 2, 28, "Output"],
Cell[435783, 9541, 134, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435954, 9548, 2154, 58, 181, "Input"],
Cell[438111, 9608, 5703, 101, 351, "Output"]
}, Open  ]],
Cell[443829, 9712, 1422, 34, 81, "Input"],
Cell[CellGroupData[{
Cell[445276, 9750, 1387, 34, 148, "Input"],
Cell[446666, 9786, 2749, 51, 348, "Output"]
}, Open  ]],
Cell[449430, 9840, 2711, 62, 150, "Input"],
Cell[452144, 9904, 1288, 26, 81, "Input"],
Cell[CellGroupData[{
Cell[453457, 9934, 1490, 36, 131, "Input"],
Cell[454950, 9972, 33770, 621, 344, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
