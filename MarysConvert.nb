(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    253466,       5427]
NotebookOptionsPosition[    248660,       5277]
NotebookOutlinePosition[    249039,       5294]
CellTagsIndexPosition[    248996,       5291]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Deriving the empirical correlation function and fitting a curve to it\
\>", "Title",
 CellChangeTimes->{{3.662411661666781*^9, 3.662411661991362*^9}, {
  3.66241207575276*^9, 3.6624121230880127`*^9}}],

Cell[TextData[{
 "Translating from \[OpenCurlyDoubleQuote]Towards a unified descriptive \
theory for spatial ecology\[CloseCurlyDoubleQuote] (who only provide a PDF of \
their ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook!)"
}], "Subtitle",
 CellChangeTimes->{{3.662412134962429*^9, 3.662412156210373*^9}, {
  3.662412505400652*^9, 3.662412516577264*^9}}],

Cell["\<\
M Scott & M Osmond
2016 January 21\
\>", "Subsubtitle",
 CellChangeTimes->{{3.662412158914653*^9, 3.662412165506485*^9}, {
  3.662412525465302*^9, 3.6624125326489677`*^9}}],

Cell[CellGroupData[{

Cell["Method with random data", "Section",
 CellChangeTimes->{{3.66275569694698*^9, 3.662755710058949*^9}}],

Cell["\<\
Define the spatial extent of the area of interest (e.g., Barro Colorado \
Island)\
\>", "Text",
 CellChangeTimes->{{3.662411468482938*^9, 3.6624114723466263`*^9}, {
  3.662412173377927*^9, 3.662412192666273*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Lx", ",", "Ly"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "500"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "total", " ", "x", " ", "and", " ", "y", " ", "distance", " ", "of", " ", 
     "area", " ", "of", " ", "interest"}], ",", " ", 
    RowBox[{
    "ie", " ", "a", " ", "grid", " ", "with", " ", "length", " ", "Lx", " ", 
     "and", " ", "width", " ", "Ly"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Asub", "=", "100"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"space", " ", "between", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "we", " ", "chop", " ", "up", " ", "the", " ", "total", " ", 
      "area", " ", "into", " ", "squares", " ", "with", " ", "length", " ", 
      "Asub"}], ";", " ", 
     RowBox[{
     "best", " ", "if", " ", "this", " ", "divides", " ", "the", " ", "total",
       " ", "space", " ", "nicely"}]}], ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"Lx", "/", "Asub"}], " ", "and", " ", 
     RowBox[{"Ly", "/", "Asub"}], " ", "are", " ", "integers"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624105632177896`*^9, 3.662410563388131*^9}, {
   3.662410642111521*^9, 3.6624106433361464`*^9}, {3.6624113185715933`*^9, 
   3.6624113205874157`*^9}, 3.6624118299636374`*^9, {3.662412200746975*^9, 
   3.66241233394919*^9}}],

Cell["\<\
Make up the data (because the authors suck at making it available)\
\>", "Text",
 CellChangeTimes->{{3.6623967906428547`*^9, 3.66239684459477*^9}, 
   3.662396960068564*^9, {3.6624123100515614`*^9, 3.662412361372697*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numplots", "=", "10000"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", 
    RowBox[{"plots", "/", "datapoints"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Lx"}], "}"}], "]"}], "]"}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Ly"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", "10", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "locations", " ", "of", " ", 
     "each", " ", "plot"}], ",", " ", 
    RowBox[{"species", " ", "code", " ", "of", " ", "each", " ", "plot"}], 
    ",", 
    RowBox[{
    "abundance", " ", "of", " ", "that", " ", "species", " ", "in", " ", 
     "each", " ", "plot"}]}], "*)"}], " "}]}], "Input",
 CellChangeTimes->{{3.662406789653805*^9, 3.662406801493565*^9}, 
   3.6624068355453568`*^9, {3.6624068840528297`*^9, 3.662406909245325*^9}, {
   3.662407072563799*^9, 3.662407104474935*^9}, 3.662408757424716*^9, {
   3.662408793027438*^9, 3.662408836844111*^9}, 3.6624105559804363`*^9, {
   3.662411250826935*^9, 3.6624112514645576`*^9}, {3.6624113858900433`*^9, 
   3.662411406665563*^9}, {3.6624123720937433`*^9, 3.662412388150242*^9}, {
   3.6624124634782267`*^9, 3.662412473070211*^9}, {3.662755105226478*^9, 
   3.662755177567297*^9}}],

Cell["\<\
Get each variable of interest from data table\
\>", "Text",
 CellChangeTimes->{{3.662411487805341*^9, 3.6624115162679358`*^9}, {
  3.66241239544563*^9, 3.662412400485498*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gx", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"x", " ", "coordinates", " ", "of", " ", "all", " ", "plots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gy", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"y", " ", "coordinates", " ", "of", " ", "all", " ", "plots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sp", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "data", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"species", " ", "code", " ", "for", " ", "each", " ", "plot"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ab", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "data", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"species", " ", "abundance", " ", "at", " ", "each", " ", "plot"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394854259613*^9, 3.6623948971517143`*^9}, {
   3.6623949767533827`*^9, 3.662394977232485*^9}, 3.662395418640141*^9, {
   3.662395615527067*^9, 3.6623956156540813`*^9}, {3.662396523289652*^9, 
   3.662396541418125*^9}, {3.662396815443509*^9, 3.662396912669395*^9}, {
   3.662412409630423*^9, 3.662412412742033*^9}}],

Cell["\<\
Some summary statistics of the data\
\>", "Text",
 CellChangeTimes->{{3.6624115004831676`*^9, 3.6624115190117893`*^9}, {
  3.662412416239183*^9, 3.662412426541686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Uspecie", "=", 
    RowBox[{"Union", "[", "sp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Nspecies", "=", 
    RowBox[{"Length", "[", "Uspecie", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TotAbundance", "=", 
    RowBox[{"Total", "[", "ab", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"total", " ", "abundance"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "species"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394155397892*^9, 3.662394208972786*^9}, {
  3.66239435484977*^9, 3.662394355553513*^9}, {3.662394932920998*^9, 
  3.662394933324882*^9}, {3.662396920669482*^9, 3.662396931205062*^9}, {
  3.662411451991355*^9, 3.662411457827334*^9}, {3.662412431854793*^9, 
  3.6624124470392838`*^9}}],

Cell["\<\
Defining the coordinate system of the area\
\>", "Text",
 CellChangeTimes->{{3.6624115301840067`*^9, 3.662411532736253*^9}, 
   3.662412483413187*^9, {3.6624127080035973`*^9, 3.6624127139072323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allpos", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Lx", "/", "Asub"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Ly", "/", "Asub"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"coordinates", ",", " ", 
    RowBox[{"in", " ", "translated", " ", "form"}], ",", " ", 
    RowBox[{"ie", ".", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyCpos", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "i"}], "+", "1"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "j"}], "+", "1"}], ")"}], "/", "2"}]}], "}"}],
          "//", " ", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Lx", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ly", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], 
         "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"halfway", " ", "points", " ", "between", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "use", " ", "later", " ", "to", " ", "derive", 
     " ", "the", " ", "distances", " ", "between", " ", "centers", " ", "of", 
     " ", "each", " ", "\"\<bin\>\"", " ", 
     RowBox[{"(", 
      RowBox[{"area", " ", "below", " ", 
       RowBox[{"(", "south", ")"}], " ", "and", " ", "to", " ", "left", " ", 
       RowBox[{"(", "west", ")"}], " ", "of", " ", "each", " ", 
       "coordinate"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allpair", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"allpos", ",", "allpos"}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pairs", " ", "of", " ", "each", " ", "translated", " ", "coordinate", 
     " ", "with", " ", "each", " ", "other"}], ",", " ", 
    RowBox[{"e", ".", "g", "."}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "allpos", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", 
    RowBox[{"coordinates", "/", "bins"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395041124155*^9, 3.662395076995739*^9}, 
   3.662396503297634*^9, {3.662397225252562*^9, 3.66239727282128*^9}, {
   3.662397305190036*^9, 3.662397317542131*^9}, {3.662402580564127*^9, 
   3.662402589155075*^9}, {3.6624125591567297`*^9, 3.662412674941476*^9}, {
   3.6624128238176327`*^9, 3.662412840042054*^9}}],

Cell["\<\
Locations of plots (the bin they are in)\
\>", "Text",
 CellChangeTimes->{{3.662411540064125*^9, 3.662411543224874*^9}, 
   3.66241271663524*^9, {3.6624129056691236`*^9, 3.662412919045101*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gx", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"p", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"which", " ", "plots", " ", 
     RowBox[{"(", 
      RowBox[{
      "their", " ", "position", " ", "in", " ", "the", " ", "data", " ", 
       "vector"}], ")"}], " ", "have", " ", "x", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "x", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "p", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Lx", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gy", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"q", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "which", " ", "plots", " ", "have", " ", "y", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "y", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "q", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Ly", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule1", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "from", " ", "coordinates", " ", 
    RowBox[{"(", "tuple", ")"}], " ", "to", " ", "single", " ", "identifying",
     " ", "number"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule2", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "back"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYpos", "[", 
     RowBox[{"{", 
      RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
    RowBox[{"Intersection", "[", 
     RowBox[{
      RowBox[{"Xpos", "[", "p", "]"}], ",", 
      RowBox[{"Ypos", "[", "q", "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"which", " ", "plots", " ", "have", " ", "location", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}], " ", "within", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", 
      RowBox[{"x", " ", "p"}]}], ")"}], " ", "and", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"y", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", " ", 
      RowBox[{"y", " ", "p"}]}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"possub", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{"XYpos", ",", "allpos"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "which", " ", "plots", " ", "fall", " ", "in", " ", "which", " ", "bin", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"e", ".", "g", "."}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", ",", "y"}], ")"}], "=", 
       RowBox[{"(", 
        RowBox[{"321", ",", "434"}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"with", " ", "Asub"}], "=", "100"}], ",", " ", 
      RowBox[{"would", " ", "fall", " ", "in", " ", 
       RowBox[{"(", 
        RowBox[{"400", ",", "500"}], ")"}]}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395292209701*^9, 3.662395537499296*^9}, {
  3.6623960553689823`*^9, 3.662396067946538*^9}, {3.662397974196926*^9, 
  3.662398051690569*^9}, {3.6623981180157757`*^9, 3.6623981500469017`*^9}, {
  3.6623982769015217`*^9, 3.662398325149023*^9}, {3.66239886727868*^9, 
  3.662398876830975*^9}, {3.6623994181640377`*^9, 3.66239950349568*^9}, {
  3.6623997780956163`*^9, 3.6623998470706177`*^9}, {3.6624129296834784`*^9, 
  3.662412931482998*^9}}],

Cell["Which species are where", "Text",
 CellChangeTimes->{{3.66241155496421*^9, 3.66241156097239*^9}, {
  3.6624129435894413`*^9, 3.662412950140648*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYS", "[", "i_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gx", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"gy", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gives", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "location", " ", "of", " ", 
     "plots"}], ",", " ", 
    RowBox[{"and", " ", "sp", " ", "code"}], ",", " ", 
    RowBox[{"in", " ", "each", " ", "bin"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SabA", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
     "&"}], "/@", " ", "Uspecie"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "with", " ", "each", " ", 
    "species", " ", "in", " ", "each", " ", "bin"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SA", "[", "i_", "]"}], ":=", 
   RowBox[{"Boole", "/@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"sp", "[", 
          RowBox[{"[", 
           RowBox[{"possub", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", " ", "Uspecie"}], ")"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "at", " ", "least", " ", "one", " ", "plot", " ", 
     "with", " ", "a", " ", "species", " ", "in", " ", "given", " ", "bin"}], 
    ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"presence", "/", "absence"}], " ", "in", " ", "bin"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Spos", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SA", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "possub", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"table", " ", "with", " ", "all", " ", "bins"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395558546788*^9, 3.662395590718184*^9}, {
   3.662395637422887*^9, 3.662395855679844*^9}, {3.662396084462902*^9, 
   3.662396093135119*^9}, {3.6624000366580553`*^9, 3.6624000612422333`*^9}, {
   3.662400105056695*^9, 3.66240013763741*^9}, {3.662400198268684*^9, 
   3.662400203847021*^9}, {3.662400283268598*^9, 3.662400340107189*^9}, {
   3.662400370913103*^9, 3.662400403535512*^9}, {3.662400442030035*^9, 
   3.662400450460515*^9}, {3.662400495985153*^9, 3.662400502456811*^9}, {
   3.662401369958474*^9, 3.6624013885339117`*^9}, 3.6624017363239193`*^9, {
   3.662412958541737*^9, 3.662413003201478*^9}}],

Cell["\<\
Covariance in species abundance by distances\
\>", "Text",
 CellChangeTimes->{{3.662411564012209*^9, 3.662411577084908*^9}, {
  3.662413007593816*^9, 3.6624130216361732`*^9}, {3.662413321726729*^9, 
  3.6624133250631638`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ")"}], "^", "2"}], "]"}], 
    "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Euclidean", " ", "distance", " ", "between", " ", "center", " ", "of", 
    " ", "two", " ", "bins", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"in", " ", "translated", " ", "space"}], ";", " ", 
       RowBox[{
       "need", " ", "to", " ", "multiply", " ", "by", " ", "Asub", " ", "to", 
        " ", "get", " ", "real", " ", "distances"}]}], ",", " ", 
      RowBox[{"which", " ", "we", " ", "do", " ", "later"}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"not", " ", "sure", " ", "what", " ", "this", " ", "does"}], ",", 
    " ", 
    RowBox[{"but", " ", "doesnt", " ", "hurt"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alldist", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"dist", ",", 
      RowBox[{"allpair", "/.", "rule1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "distance", " ", "between", " ", "center", " ", "of", " ", "all", " ", 
    "pairs", " ", "of", " ", "bins"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rvec", "=", 
    RowBox[{"Union", "[", "alldist", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "unique", " ", "distances", " ", "in", " ", "increasing", " ", 
    "order"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"indexpair", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"index", ",", 
      RowBox[{"allpair", "/.", " ", "rule1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "translate", " ", "from", " ", "tuples", " ", "of", " ", "coordinates", 
    " ", "to", " ", "pairs", " ", "of", " ", "coordinate", " ", "indices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"posdist", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"alldist", ",", "#"}], "]"}], "&"}], "/@", " ", "rvec"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "identify", " ", "coordinate", " ", "index", " ", "pairs", " ", "whose", 
    " ", "bin", " ", "centers", " ", "are", " ", "given", " ", "distance", 
    " ", "apart"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cov", "[", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"SabA", "[", "i", "]"}], " ", 
        RowBox[{"SabA", "[", "j", "]"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "i", "]"}], "]"}], " ", 
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<covariance\>\"", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "bins"}], ",", " ", 
    RowBox[{
    "note", " ", "that", " ", "the", " ", "\"\<covariance\>\"", " ", "is", 
     " ", "taken", " ", "over", " ", "all", " ", "species"}], ",", " ", 
    RowBox[{
    "ie", " ", "\"\<covariance\>\"", " ", "in", " ", "community", " ", 
     "composition"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allcov", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"Cov", ",", 
        RowBox[{"indexpair", "[", 
         RowBox[{"[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"posdist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "covaraiance", " ", "in", " ", "number", " ", "of", " ", "plots", " ", 
    "with", " ", "species", " ", "at", " ", "each", " ", "distance"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/VTqeGC552tH62AI7diQEwWiWRJN60H0P6stC0G0
4OwJS0B0X9PT0gogvcdXoQJEP9l4v6MSSHM0ufaA6IQXE6aC6AnrPaaD6JSr
5+eB6PXT5BaA6NsxWktA9DVP+RUgetNasU0gWonj/BYQ3aN99CCI3nB9/SEQ
vWbdlisg+sm30Ksg2mV6zRMQbfX23UsQ/W7mkXcgWujiqw8gehlPkVAVkBa9
1ikBoss2rp5TD6RrQtUXguhFznWrQbRGXOQaEH3++8mjILrLKucUiLba338B
ROfs+f4ARBsl5jeoeQH9NbkKTLfnHWgF0Ub5V9rAfEezXSBaxO7GHhANAJPY
q7k=
  "]],

Cell["\<\
Our empirical correlation function\
\>", "Text",
 CellChangeTimes->{{3.662411583164523*^9, 3.6624115898929653`*^9}, {
  3.662413328936442*^9, 3.662413339075227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"empPCF", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvec", "*", "Asub"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", "allcov"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"empirical", " ", "correlation", " ", "function"}], ",", " ", 
    RowBox[{"PCF", ";", " ", 
     RowBox[{
     "first", " ", "element", " ", "of", " ", "each", " ", "pair", " ", "is", 
      " ", "the", " ", 
      RowBox[{"(", "untranslated", ")"}], " ", "distance", " ", "between", 
      " ", "the", " ", "center", " ", "of", " ", "two", " ", "bins", " ", 
      RowBox[{"(", 
       RowBox[{"rvec", "*", "Asub"}], ")"}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", "mean", 
     " ", "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "all", " ", "pairs", 
     " ", "of", " ", "bins", " ", "that", " ", "distance", " ", "apart"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.662401751323216*^9, 3.662401767856126*^9}, {
  3.6624018026823177`*^9, 3.662401805136237*^9}, {3.662402598586731*^9, 
  3.662402656960024*^9}, {3.662403448724161*^9, 3.662403449356001*^9}, {
  3.662413682182837*^9, 3.662413751871039*^9}}],

Cell["which looks like this", "Text",
 CellChangeTimes->{{3.662413762951601*^9, 3.662413766590012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"empPCF", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662402671244444*^9, 3.6624026938166847`*^9}, {
  3.6624027307213984`*^9, 3.6624027646607313`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQMRL7gZTTQ/2EN4kQ7vFzTf/MT8wX5HmvCB6rWJ
DmceN+3LZIXJZzp4ifbYzgDy3fJkH2d9znZ4/3dRRMz391D1hQ5XH8i+vAjk
g5UfKHJoP7PzlC3bB/vI6b/eLjlc7LCxo2DqFiagfr6csw87yhzef3Z+9xNu
fqXDJsakb7uB9kc/KhL4caTSgWnqs+/9X97bC0vJLrBsqXJYL67lv4cbZn+1
g+e0ByuqYfY51Du0LFizMInlg/2HrJ6UvHv1DtG5j2cyMgDVv1p8QPFKg4OR
SfLSU3D3Njpsz325q5Djg/318C2fDlk0OfDr3ZtdzAR1z4Emh6bfmwUqfr63
52VRO2LK1Owg/6jlJycTzD/NDg88fzr3fHhvb/Gf5UY9U4vDzikdRaeB5m0V
CtOa8K3FweLEJGZWDqh5D1odNhZI1SYyfrBPc5DYcEuizcHAeHdE7tf30PBo
cwjZEcVXDTT/3JeYRrEDbQ4lKfvVHgPDr8KROXTemXYHXWlrQefXUP8ydDpk
1XlE9AD9+3QzR/I5w06HKxtX8L9mhIVfp8POTRsnzQG6z55hwnfjzV0OBl6n
Hl1hhIVft8Pc1MwjH35CzVPocbDosclleg8Mn8khD/x8ehw4SgUOt35+b3/R
o3DLovM9DpEZK+YyvXtvz/r4e0r50l6HG/e4Pu14+d7+p9lrYbHjfQ7vd8++
v0Hggz0A6Z8WOg==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9972805716888287},
  Method->{},
  PlotRange->{{0, 984.8857801796104}, {0.9972805716888287, 
    1.0064883774923237`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.00018415611606990013`, 0.00018415611606990013`}}]], "Output",
 CellChangeTimes->{{3.6624026753490877`*^9, 3.662402694224242*^9}, {
   3.662402733657669*^9, 3.662402764957795*^9}, 3.662403280700993*^9, 
   3.662405717953288*^9, 3.6624062969674873`*^9, 3.662406329773899*^9, 
   3.662406416186351*^9, 3.662406804603773*^9, 3.66240683746817*^9, {
   3.662406886173161*^9, 3.66240691093393*^9}, {3.6624069838326597`*^9, 
   3.662407012312221*^9}, {3.662407083140224*^9, 3.662407106243676*^9}, {
   3.662407909118041*^9, 3.662407928023505*^9}, 3.662408841453096*^9, 
   3.662408905364181*^9, {3.6624089446938267`*^9, 3.6624089748889437`*^9}, {
   3.6624090129800463`*^9, 3.6624090870484447`*^9}, 3.662409222978368*^9, 
   3.662410582890629*^9, 3.662410645396593*^9, 3.662411257144088*^9, 
   3.662411323604559*^9, 3.662411410305233*^9, 3.6624114593953867`*^9, 
   3.662411831491273*^9, 3.6627548268499537`*^9, 3.6627551177774353`*^9, 
   3.6627551888229713`*^9, 3.662831740702335*^9, {3.662836389181806*^9, 
   3.662836411845252*^9}, 3.662842910757452*^9}]
}, Open  ]],

Cell["\<\
Fitting the function to the data\
\>", "Text",
 CellChangeTimes->{{3.6624116006129713`*^9, 3.662411617797512*^9}, 
   3.6624137709835*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Rho]", "\[Lambda]"], ")"}], "2"], 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       FractionBox["r", "\[Lambda]"]}], "]"}]}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "function", " ", "to", " ", "fit", " ", "to", " ", "the", " ", "empirical",
     " ", "PCF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"what", " ", "does", " ", "this", " ", 
    RowBox[{"do", "?"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fitcor", "=", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{
      RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
      RowBox[{"g", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", 
          SuperscriptBox["10", "9"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Rho]", ",", "0.1"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fit", " ", "the", " ", "function"}], ",", " ", 
    RowBox[{"with", " ", "some", " ", "parameter", " ", "guesses"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624027871760187`*^9, 3.662402882159881*^9}, {
  3.662403440956188*^9, 3.662403443083897*^9}, {3.662413819411948*^9, 
  3.662413832425786*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "nrlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\({\\(\\(\\(\\(-0.0009640213630139893`\\)\\) - \
\\(\\(9.123021487450879`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.0013215486380770969`\\)\\) - \\(\\(9.123021487450946`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.0013658909022802312`\\)\\) - \
\\(\\(9.123021487451074`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.0010545986952498199` \[VeryThinSpace]\\)\\) - \
\\(\\(9.123021487451138`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.0009985396327228946` \[VeryThinSpace]\\)\\) - \
\\(\\(9.123021487451333`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\), \\(\\(\
\[LeftSkeleton] 27 \[RightSkeleton]\\)\\), \\(\\(\\(\\(0.002074038169319614` \
\[VeryThinSpace]\\)\\) - \\(\\(9.123021487456067`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(0.0015231313849133343` \
\[VeryThinSpace]\\)\\) - \\(\\(9.123021487456131`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(0.0021960182900685465` \
\[VeryThinSpace]\\)\\) - \\(\\(9.123021487456326`*^-20\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(0.0027194283111713347` \
\[VeryThinSpace]\\)\\) - \\(\\(9.12302148745665`*^-20\\\\ \[ImaginaryI]\\)\\)\
\\)\\), \\(\\(\\(\\(-0.004074929685653705`\\)\\) - \
\\(\\(9.123021487457105`*^-20\\\\ \[ImaginaryI]\\)\\)\\)\\)}\\)\[NoBreak] is \
not a list of real numbers with dimensions \[NoBreak]\\!\\({37}\\)\[NoBreak] \
at \[NoBreak]\\!\\({\[Lambda], \[Rho]}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(\\(-5.930925601728451`*^8\\)\\), 0.2533417831048677`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", ButtonNote -> \
\\\"NonlinearModelFit::nrlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6628429108482513`*^9}]
}, Open  ]],

Cell["How good is the fit?", "Text",
 CellChangeTimes->{{3.662413841744823*^9, 3.662413844902369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
        ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "fit"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662403357573029*^9, 3.662403400917585*^9}, {
  3.662403460732779*^9, 3.662403460900476*^9}, {3.6624035271260643`*^9, 
  3.6624035294532757`*^9}, {3.662403567283935*^9, 3.662403568012061*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.9999972634287999`"},
    {"\<\"AIC\"\>", 
     RowBox[{"-", "364.9703077644494`"}]},
    {"\<\"BIC\"\>", 
     RowBox[{"-", "360.13755402651674`"}]},
    {"\<\"RSquared\"\>", "0.9999974113515676`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.662403402411786*^9, 3.662405718090724*^9, 3.662406297155188*^9, 
   3.662406329946666*^9, {3.662406416486521*^9, 3.662406429860981*^9}, 
   3.66240680481929*^9, 3.662406837703083*^9, {3.662406886374895*^9, 
   3.662406911136054*^9}, {3.662406983975531*^9, 3.662407012481901*^9}, {
   3.66240708327638*^9, 3.662407106382594*^9}, {3.6624079092705507`*^9, 
   3.662407928171085*^9}, 3.662408841597978*^9, 3.662408905666217*^9, {
   3.662408944842497*^9, 3.6624089750086527`*^9}, {3.662409013114809*^9, 
   3.662409087167595*^9}, 3.6624092231154623`*^9, 3.6624105830350018`*^9, 
   3.662410645530094*^9, 3.662411257241982*^9, 3.6624113237579403`*^9, 
   3.662411410461595*^9, 3.662411459544739*^9, 3.662411831637423*^9, 
   3.662754827083612*^9, 3.662755117964517*^9, 3.6627551888890533`*^9, 
   3.6628317407846193`*^9, {3.662836389282175*^9, 3.662836411928933*^9}, 
   3.6628429109027643`*^9}]
}, Open  ]],

Cell["\<\
What are our parameter estimates?\
\>", "Text",
 CellChangeTimes->{{3.6624138505438223`*^9, 3.662413855414859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Rho]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662403541170051*^9, 3.662403579627411*^9}, {
  3.662413877368452*^9, 3.662413935628236*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", 
      RowBox[{"-", "5.930925601728451`*^8"}], 
      RowBox[{"1.4762935980453694`*^26", "+", 
       RowBox[{"6.193882237991507`*^17", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "4.0174431492360794`*^-18"}], "+", 
       RowBox[{"1.6855434310045212`*^-26", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.0614994499602783`*^-22", " ", "\[ImaginaryI]"}]}]},
     {"\[Rho]", "0.2533417831048677`", 
      RowBox[{"6.092637885328453`*^16", "-", 
       RowBox[{"4.7716512190577025`*^14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"4.157907452462406`*^-18", "+", 
       RowBox[{"3.2564029797417994`*^-20", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "-", 
       RowBox[{"2.915042296661365`*^-19", " ", "\[ImaginaryI]"}]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.6624139079167*^9}, 
   3.662754827139021*^9, 3.66275511801717*^9, 3.662755188904523*^9, 
   3.662831740829299*^9, {3.66283638933211*^9, 3.662836411974605*^9}, 
   3.6628429109433813`*^9}]
}, Open  ]],

Cell["\<\
Or if you like confidence intervals better...\
\>", "Text",
 CellChangeTimes->{{3.662413938361573*^9, 3.662413946160007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"get", " ", "confidence", " ", "intervals", " ", "too"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{3.662413934755294*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", 
      RowBox[{"-", "5.930925601728451`*^8"}], 
      RowBox[{"1.4762935980453694`*^26", "+", 
       RowBox[{"6.193882237991507`*^17", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2.9970353378171248`*^26"}], "-", 
         RowBox[{"1.2574249437995517`*^18", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"2.9970353378171248`*^26", "+", 
         RowBox[{"1.2574249437995517`*^18", " ", "\[ImaginaryI]"}]}]}], "}"}]},
     {"\[Rho]", "0.2533417831048677`", 
      RowBox[{"6.092637885328453`*^16", "-", 
       RowBox[{"4.7716512190577025`*^14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.2368712474963677`*^17"}], "+", 
         RowBox[{"9.686966970654441`*^14", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"1.2368712474963677`*^17", "-", 
         RowBox[{"9.686966970654441`*^14", " ", "\[ImaginaryI]"}]}]}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.66241392002323*^9}, 
   3.662754827573681*^9, 3.6627551183942013`*^9, 3.6627551889387608`*^9, 
   3.662831740870338*^9, {3.662836389367111*^9, 3.662836412025456*^9}, 
   3.662842910985961*^9}]
}, Open  ]],

Cell["\<\
Plot fitted curve with data points\
\>", "Text",
 CellChangeTimes->{{3.662413956438634*^9, 3.662413969480398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
      RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Prolog", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
      RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.662403769406761*^9, 3.662403992597126*^9}, {
  3.662404042064361*^9, 3.6624041243000097`*^9}, {3.662404161267418*^9, 
  3.662404199527317*^9}, {3.662405800170576*^9, 3.6624058024493113`*^9}, {
  3.66240792592798*^9, 3.662407926379305*^9}, {3.662413951485792*^9, 
  3.66241399528541*^9}, {3.662755240062652*^9, 3.662755249022591*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbvSuqtS+KsdAxh8sD/ckj/xX4iyA4wv/8bc4W+I
MZzf0X1qhYKqC5zv93bDqj9vfeF8lxUTGG8fCobz9/InbDv5LQLOj4s9nX71
Yiycn/fh2YTKrkQ4v3NT1+H98ilw/o70mpIpHWlw/rXtOzWLVDPhfPbfLrH3
pmbD+VP3FT1j/JWLMI/vm6W4ZwGcH7j95v4vdYVw/gTdx8evnSuC8/893ls1
RaIEzv86eX+OpE8pnJ8i+PzBopllcH5Mh+mUzxfK4fwzZ1ae9FCqhPOzAt+v
rMytgvMnnY8+WbioGs43lH6XlfexBs6PSljubaRVB+dvfGp4/WJMPZzvIFP4
aVdIA5yfe+jOjA/vEfxQ/+gGjRmNCH6Nk62fbROcL6m2d2b4dQR/5jYv8+S6
Zjj/3uHskiCpFjjfqvBrm/5mBD+IddItvshWOF9f7NDZi58R/OO8rEzTZ7fB
+SpNt6/aW7TD+TOmSdVfu4jgn5iYk5lf0QHn7+UM+vxauBPOz8vw2pe1B8E3
S18ddz2xC84//Gj+PPU/CD6363L5qsXdcL6EipPDBvseON9msavZlRsIvgxn
TO6vul44/+BrVhcWqT44/9emzWq9BQi+SVUip9hxBB8AZ6kESw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"g(r)\"", TraditionalForm], None}, {
     FormBox["\"Distance (m)\"", TraditionalForm], None}},
  ImageSize->800,
  LabelStyle->{FontFamily -> "Times", FontSize -> 12},
  Method->{},
  PlotLabel->FormBox["\"Pair correlation function\"", TraditionalForm],
  PlotRange->{{0, 984.8857801796104}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, 
    Scaled[0.02]},
  Prolog->{
    RGBColor[1, 0, 0], 
    PointSize[0.005], {
     PointBox[{0., 1.0100593605880217`}], 
     PointBox[{100., 1.000964021363014}], 
     PointBox[{141.4213562373095, 1.001321548638077}], 
     PointBox[{200., 1.0013658909022802`}], 
     PointBox[{223.60679774997897`, 0.9989454013047502}], 
     PointBox[{282.842712474619, 0.9990014603672771}], 
     PointBox[{300., 1.0015237730956714`}], 
     PointBox[{316.22776601683796`, 1.000660499332792}], 
     PointBox[{360.5551275463989, 1.0014590556377205`}], 
     PointBox[{400., 1.0009116768197655`}], 
     PointBox[{412.31056256176606`, 0.9986038057146802}], 
     PointBox[{424.2640687119285, 1.0028651325569446`}], 
     PointBox[{447.21359549995793`, 0.9989603327164299}], 
     PointBox[{500., 1.0010706248667995`}], 
     PointBox[{509.9019513592784, 1.000001526953233}], 
     PointBox[{538.5164807134504, 0.9989979963517099}], 
     PointBox[{565.685424949238, 1.0020615864985822`}], 
     PointBox[{583.0951894845301, 1.0005985344495263`}], 
     PointBox[{600., 0.9992027593833515}], 
     PointBox[{608.276253029822, 1.0004977938498383`}], 
     PointBox[{632.4555320336759, 0.9981137588131865}], 
     PointBox[{640.3124237432849, 1.0021471475568389`}], 
     PointBox[{670.820393249937, 1.0019579066834137`}], 
     PointBox[{700., 1.0003371130797343`}], 
     PointBox[{707.1067811865476, 0.9987093670875762}], 
     PointBox[{721.1102550927978, 1.0006056366651324`}], 
     PointBox[{728.0109889280518, 1.0016814721659815`}], 
     PointBox[{761.5773105863909, 0.997468503622121}], 
     PointBox[{800., 1.0011104057847668`}], 
     PointBox[{806.2257748298549, 1.00046831242354}], 
     PointBox[{824.6211251235321, 0.9981215348357956}], 
     PointBox[{854.4003745317531, 1.0004471644393895`}], 
     PointBox[{894.4271909999159, 0.9992603145757816}], 
     PointBox[{900., 0.9979259618306804}], 
     PointBox[{905.5385138137417, 0.9984768686150867}], 
     PointBox[{921.9544457292888, 0.9978039817099315}], 
     PointBox[{948.6832980505138, 0.9972805716888287}], 
     PointBox[{984.8857801796104, 1.0040749296856537`}]}}]], "Output",
 CellChangeTimes->{{3.662403931872311*^9, 3.662403961748376*^9}, 
   3.6624039930219793`*^9, {3.662404054020718*^9, 3.662404124635461*^9}, {
   3.6624041628226557`*^9, 3.662404177212069*^9}, 3.662405718219399*^9, 
   3.6624058028929377`*^9, 3.662406297284313*^9, 3.662406330073842*^9, 
   3.6624064172534*^9, 3.662406804946733*^9, 3.6624068387016277`*^9, {
   3.662406887024851*^9, 3.66240691165195*^9}, {3.662406984216867*^9, 
   3.6624070126147203`*^9}, {3.66240708340755*^9, 3.6624071065110817`*^9}, {
   3.662407909400408*^9, 3.662407928325042*^9}, 3.662408841770507*^9, 
   3.6624089062315893`*^9, {3.662408945263624*^9, 3.662408975140057*^9}, {
   3.662409013246416*^9, 3.662409087299986*^9}, 3.662409223247031*^9, 
   3.662410583174616*^9, 3.662410645662326*^9, 3.662411257398282*^9, 
   3.66241132393871*^9, 3.6624114105907393`*^9, 3.6624114596960697`*^9, 
   3.662411831774963*^9, 3.6627548277165937`*^9, 3.662755118552618*^9, 
   3.662755188969701*^9, {3.6627552441558857`*^9, 3.662755249340041*^9}, 
   3.662831740935713*^9, {3.6628363894164143`*^9, 3.66283641207456*^9}, 
   3.6628429110308247`*^9}]
}, Open  ]],

Cell["\<\
Plot fitted curve with confidence bands\
\>", "Text",
 CellChangeTimes->{{3.6624140170269537`*^9, 3.662414017625156*^9}, {
  3.662414059835639*^9, 3.662414068251809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bands90", "[", "x_", "]"}], ",", 
      RowBox[{"bands95", "[", "x_", "]"}], ",", 
      RowBox[{"bands99", "[", "x_", "]"}], ",", 
      RowBox[{"bands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fitcor", "[", 
       RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
        RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"cl", ",", 
        RowBox[{"{", 
         RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitcor", "[", "r", "]"}], ",", 
       RowBox[{"bands90", "[", "r", "]"}], ",", 
       RowBox[{"bands95", "[", "r", "]"}], ",", 
       RowBox[{"bands99", "[", "r", "]"}], ",", 
       RowBox[{"bands999", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"3", " ", "\[Rule]", 
         RowBox[{"{", "2", "}"}]}], ",", 
        RowBox[{"4", " ", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}], ",", 
        RowBox[{"5", " ", "\[Rule]", 
         RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662404221668598*^9, 3.662404310745612*^9}, 
   3.662414014514715*^9, {3.662755211342601*^9, 3.662755231736133*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQGRDu8XNN/8xPzBfkea8IHqtYkOZx437ctk/WAP
kc908BLtsZ0B5LvlyT7O+pzt8P7vooiY7++h6gsdrj6QfXkRyAcrP1Dk0H5m
5ylbtg/2kdN/vV1yuNhhY0fB1C1MQP18OWcfdpQ5vP/s/O4n3PxKh02MSd92
A+2PflQk8ONIpQPT1Gff+7+8txeWkl1g2VLlsF5cy38PN8z+agfPaQ9WVMPs
c6h3aFmwZmESywf7D1k9KXn36h2icx/PZGQAqn+1+IDilQYHI5Pkpafg7m10
2J77clchxwf76+FbPh2yaHLg17s3u5gJ6p4DTQ5NvzcLVPx8b8/LonbElKnZ
Qf5Ry09OJph/mh0eeP507vnw3t7iP8uNeqYWh51TOopOA83bKhSmNeFbi4PF
iUnMrBxQ8x60OmwskKpNZPxgn+YgseGWRJuDgfHuiNyv76Hh0eYQsiOKrxpo
/rkvMY1iB9ocSlL2qz0Ghl+FI3PovDPtDrrS1oLOr6H+Zeh0yKrziOgB+vfp
Zo7kc4adDlc2ruB/zQgLv06HnZs2TpoDdJ89w4Tvxpu7HAy8Tj26wggLv26H
uamZRz78hJqn0ONg0WOTy/QeGD6TQx74+fQ4cJQKHG79/N7+okfhlkXnexwi
M1bMZXr33p718feU8qW9DjfucX3a8fK9/U+z18Jix/sc3u+efX+DwAd7AClk
E2E=
      "]]}, {}}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQbbvSuqtS+KsdAxh8sJd/Y+7wN8TYAcbv6D61QkHV
Bc73e7th1Z+3vnC+y4oJjLcPBcP5e/kTtp38FgHnx8WeTr96MRbOz/vwbEJl
VyKc37mp6/B++RQ4f0d6TcmUjjQ4/9r2nZpFqplwPvtvl9h7U7Ph/Kn7ip4x
/spFmMf3zVLcswDOD9x+c/+XukI4f4Lu4+PXzhXB+f8e762aIlEC53+dvD9H
0qcUzk8RfP5g0cwyOD+mw3TK5wvlcP6ZMytPeihVwvlZge9XVuZWwfmTzkef
LFxUDecbSr/LyvtYA+dHJSz3NtKqg/M3PjW8fjGmHs53kCn8tCukAc7PPXRn
xof3CH6of3SDxoxGBL/GydbPtgnOl1TbOzP8OoI/c5uXeXJdM5x/73B2SZBU
C5xvVfi1TX8zgh/EOukWX2QrnK8vdujsxc8I/nFeVqbps9vgfJWm21ftLdrh
/BnTpOqvXUTwT0zMycyv6IDz93IGfX4t3Ann52V47cvag+Cbpa+Ou57YBecf
fjR/nvofBJ/bdbl81eJuOF9Cxclhg30PnG+z2NXsyg0EX4YzJvdXXS+cf/A1
qwuLVB+cb1KVyCl2HME/3JI/8V+IMpz/a9Nmtd4ChHzv1KatHt2I9LRV0ryp
6APCPQDxdQ49
    "], {{}, {}, 
     {Hue[0.67, 0.6, 0.6], 
      LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 53, 16, 
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 46, 47, 48, 49, 52, 
       50}]}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9972805716888287},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 984.8857801796104}, Automatic},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.0001358871599365008, 0.0001358871599365008}}]], "Output",
 CellChangeTimes->{
  3.662404459246986*^9, 3.662404598895645*^9, 3.662405222464849*^9, 
   3.662405718428056*^9, 3.662406297584968*^9, 3.662406330339636*^9, 
   3.662406417572104*^9, 3.662406805347022*^9, 3.662406839001141*^9, {
   3.66240688798071*^9, 3.6624069126876163`*^9}, {3.662406984717441*^9, 
   3.662407012861548*^9}, {3.6624070836417437`*^9, 3.662407106780003*^9}, {
   3.662407909635324*^9, 3.662407928564303*^9}, 3.6624079656102057`*^9, 
   3.6624088419917307`*^9, 3.662408907167906*^9, {3.6624089455614347`*^9, 
   3.662408976175329*^9}, {3.662409014175234*^9, 3.662409088225396*^9}, 
   3.662409224178812*^9, 3.6624105841259403`*^9, 3.662410646600896*^9, {
   3.662411258379698*^9, 3.662411325108368*^9}, 3.662411411686612*^9, 
   3.662411460658895*^9, 3.662411832776853*^9, 3.662754828152622*^9, 
   3.662755118997655*^9, 3.662755189829032*^9, {3.662755219952276*^9, 
   3.6627552330088873`*^9}, 3.6628317418369913`*^9, {3.662836389762106*^9, 
   3.6628364129365463`*^9}, 3.6628429113277187`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulated Data", "Section",
 CellChangeTimes->{{3.6627556877501717`*^9, 3.66275569128279*^9}}],

Cell["\<\
Load data from Patrick\[CloseCurlyQuote]s simulation\
\>", "Text",
 CellChangeTimes->{{3.662756272519383*^9, 3.66275628084601*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datadir", "=", "\"\</Users/mmosmond/Documents/PHD/PCFinR/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "datadir", "<>", "\"\<SimulatedAbundances\>\"", "<>", "\"\<.csv\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.66275556963586*^9, 3.662755648268983*^9}, {
  3.662755792232341*^9, 3.662755820742881*^9}, {3.662756234703286*^9, 
  3.662756236070477*^9}, {3.662831741309568*^9, 3.662831743309153*^9}, {
  3.662832232549533*^9, 3.6628322513403387`*^9}}],

Cell["The data comes with 5 columns", "Text",
 CellChangeTimes->{{3.662756378289138*^9, 3.662756385175745*^9}, {
  3.662756559277006*^9, 3.662756575755829*^9}, {3.662756815034315*^9, 
  3.662756817745803*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simdata", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6627566279933243`*^9, 3.662756642669874*^9}, {
  3.6627566958390627`*^9, 3.662756697638322*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"Species\"\>", 
   ",", "\<\"Abundance\"\>", ",", "\<\"Stress_abund\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.662756630411153*^9, 3.662756698041078*^9, 
  3.662831748833181*^9, 3.6628324741263437`*^9, 3.662836177113246*^9, 
  3.6628419035938063`*^9, 3.6628422887068853`*^9, 3.6628429710841227`*^9, 
  3.6628444274198914`*^9, 3.66284466732751*^9}]
}, Open  ]],

Cell["\<\
 x is the x location (1:20) y is the y location (1:20), species is species ID \
(1:80), abundance is number of individuals of that species in plot, and \
stress abundance is abundance under some stressor (we will eventually want to \
compare model results with and without stressor). \
\>", "Text",
 CellChangeTimes->{{3.6627568213512087`*^9, 3.662756822760435*^9}}],

Cell["We first drop the column names", "Text",
 CellChangeTimes->{{3.662756792985317*^9, 3.662756798263606*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"simdata", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662756785772848*^9, 3.662756802048545*^9}}],

Cell["Define the spatial extent of the area of interest", "Text",
 CellChangeTimes->{{3.662411468482938*^9, 3.6624114723466263`*^9}, {
   3.662412173377927*^9, 3.662412192666273*^9}, 3.662756289862062*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Lx", ",", "Ly"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"20", ",", "20"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "total", " ", "x", " ", "and", " ", "y", " ", "distance", " ", "of", " ", 
     "area", " ", "of", " ", "interest"}], ",", " ", 
    RowBox[{
    "ie", " ", "a", " ", "grid", " ", "with", " ", "length", " ", "Lx", " ", 
     "and", " ", "width", " ", "Ly"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Asub", "=", "5"}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"space", " ", "between", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "we", " ", "chop", " ", "up", " ", "the", " ", "total", " ", 
      "area", " ", "into", " ", "squares", " ", "with", " ", "length", " ", 
      "Asub"}], ";", " ", 
     RowBox[{
     "best", " ", "if", " ", "this", " ", "divides", " ", "the", " ", "total",
       " ", "space", " ", "nicely"}]}], ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"Lx", "/", "Asub"}], " ", "and", " ", 
     RowBox[{"Ly", "/", "Asub"}], " ", "are", " ", "integers"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624105632177896`*^9, 3.662410563388131*^9}, {
   3.662410642111521*^9, 3.6624106433361464`*^9}, {3.6624113185715933`*^9, 
   3.6624113205874157`*^9}, 3.6624118299636374`*^9, {3.662412200746975*^9, 
   3.66241233394919*^9}, {3.662756316915345*^9, 3.662756321631939*^9}, {
   3.6627579622476397`*^9, 3.662757962359758*^9}, 3.66283617268756*^9, {
   3.662841894166457*^9, 3.662841894243311*^9}, {3.662844419228006*^9, 
   3.662844420098653*^9}, 3.662844664200747*^9}],

Cell["Get each variable of interest from data table", "Text",
 CellChangeTimes->{{3.662411487805341*^9, 3.6624115162679358`*^9}, {
  3.66241239544563*^9, 3.662412400485498*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gx", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gy", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ab", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stab", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6627564818879433`*^9, 3.662756506084942*^9}, {
  3.6627568388114223`*^9, 3.66275689858679*^9}, {3.6627571596583757`*^9, 
  3.662757175800811*^9}}],

Cell["Some summary statistics of the data", "Text",
 CellChangeTimes->{{3.6624115004831676`*^9, 3.6624115190117893`*^9}, {
  3.662412416239183*^9, 3.662412426541686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Uspecie", "=", 
    RowBox[{"Union", "[", "sp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Nspecies", "=", 
    RowBox[{"Length", "[", "Uspecie", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TotAbundance", "=", 
    RowBox[{"Total", "[", "ab", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"total", " ", "abundance"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "species"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394155397892*^9, 3.662394208972786*^9}, {
  3.66239435484977*^9, 3.662394355553513*^9}, {3.662394932920998*^9, 
  3.662394933324882*^9}, {3.662396920669482*^9, 3.662396931205062*^9}, {
  3.662411451991355*^9, 3.662411457827334*^9}, {3.662412431854793*^9, 
  3.6624124470392838`*^9}, {3.6627569063475637`*^9, 3.662756919531727*^9}, {
  3.662757178672894*^9, 3.6627571860160637`*^9}}],

Cell["Defining the coordinate system of the area", "Text",
 CellChangeTimes->{{3.6624115301840067`*^9, 3.662411532736253*^9}, 
   3.662412483413187*^9, {3.6624127080035973`*^9, 3.6624127139072323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allpos", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Lx", "/", "Asub"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Ly", "/", "Asub"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"coordinates", ",", " ", 
    RowBox[{"in", " ", "translated", " ", "form"}], ",", " ", 
    RowBox[{"ie", ".", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyCpos", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "i"}], "+", "1"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "j"}], "+", "1"}], ")"}], "/", "2"}]}], "}"}],
          "//", " ", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Lx", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ly", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], 
         "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"halfway", " ", "points", " ", "between", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "use", " ", "later", " ", "to", " ", "derive", 
     " ", "the", " ", "distances", " ", "between", " ", "centers", " ", "of", 
     " ", "each", " ", "\"\<bin\>\"", " ", 
     RowBox[{"(", 
      RowBox[{"area", " ", "below", " ", 
       RowBox[{"(", "south", ")"}], " ", "and", " ", "to", " ", "left", " ", 
       RowBox[{"(", "west", ")"}], " ", "of", " ", "each", " ", 
       "coordinate"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allpair", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"allpos", ",", "allpos"}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pairs", " ", "of", " ", "each", " ", "translated", " ", "coordinate", 
     " ", "with", " ", "each", " ", "other"}], ",", " ", 
    RowBox[{"e", ".", "g", "."}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "allpos", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", 
    RowBox[{"coordinates", "/", "bins"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395041124155*^9, 3.662395076995739*^9}, 
   3.662396503297634*^9, {3.662397225252562*^9, 3.66239727282128*^9}, {
   3.662397305190036*^9, 3.662397317542131*^9}, {3.662402580564127*^9, 
   3.662402589155075*^9}, {3.6624125591567297`*^9, 3.662412674941476*^9}, {
   3.6624128238176327`*^9, 3.662412840042054*^9}}],

Cell["Locations of plots (the bin they are in)", "Text",
 CellChangeTimes->{{3.662411540064125*^9, 3.662411543224874*^9}, 
   3.66241271663524*^9, {3.6624129056691236`*^9, 3.662412919045101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gx", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#",
             "<", 
            RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gx", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}]}], " ", "<", "#", "\[LessEqual]",
             " ", 
            RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"which", " ", "plots", " ", 
      RowBox[{"(", 
       RowBox[{
       "their", " ", "position", " ", "in", " ", "the", " ", "data", " ", 
        "vector"}], ")"}], " ", "have", " ", "x", " ", "location", " ", 
      "between", " ", "two", " ", "coordinates"}], ",", " ", 
     RowBox[{
      RowBox[{
      "for", " ", "all", " ", "pairs", " ", "of", " ", "x", " ", 
       "coordinates"}], ";", " ", 
      RowBox[{"for", " ", "p", " ", "between", " ", "1", " ", "and", " ", 
       RowBox[{"Lx", "/", "Asub"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"gy", ",", 
         RowBox[{"x_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Asub", "*", 
              RowBox[{"(", 
               RowBox[{"q", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", 
             "#", "<", 
             RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", 
       "1"}], "]"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"gy", ",", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Asub", "*", 
             RowBox[{"(", 
              RowBox[{"q", "-", "1"}], ")"}]}], "<", "#", "\[LessEqual]", 
            RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "which", " ", "plots", " ", "have", " ", "y", " ", "location", " ", 
      "between", " ", "two", " ", "coordinates"}], ",", " ", 
     RowBox[{
      RowBox[{
      "for", " ", "all", " ", "pairs", " ", "of", " ", "y", " ", 
       "coordinates"}], ";", " ", 
      RowBox[{"for", " ", "q", " ", "between", " ", "1", " ", "and", " ", 
       RowBox[{"Ly", "/", "Asub"}]}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"rule1", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"allpos", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"nplot", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"translate", " ", "from", " ", "coordinates", " ", 
     RowBox[{"(", "tuple", ")"}], " ", "to", " ", "single", " ", 
     "identifying", " ", "number"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"rule2", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"nplot", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"allpos", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"translate", " ", "back"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"XYpos", "[", 
      RowBox[{"{", 
       RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
     RowBox[{"Intersection", "[", 
      RowBox[{
       RowBox[{"Xpos", "[", "p", "]"}], ",", 
       RowBox[{"Ypos", "[", "q", "]"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"which", " ", "plots", " ", "have", " ", "location", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "within", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{"p", "-", "1"}], ")"}]}], ",", 
       RowBox[{"x", " ", "p"}]}], ")"}], " ", "and", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", 
        RowBox[{"(", 
         RowBox[{"p", "-", "1"}], ")"}]}], ",", " ", 
       RowBox[{"y", " ", "p"}]}], ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"possub", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{"XYpos", ",", "allpos"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "which", " ", "plots", " ", "fall", " ", "in", " ", "which", " ", "bin", 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"e", ".", "g", "."}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", ",", "y"}], ")"}], "=", 
        RowBox[{"(", 
         RowBox[{"321", ",", "434"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"with", " ", "Asub"}], "=", "100"}], ",", " ", 
       RowBox[{"would", " ", "fall", " ", "in", " ", 
        RowBox[{"(", 
         RowBox[{"400", ",", "500"}], ")"}]}]}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.662395292209701*^9, 3.662395537499296*^9}, {
  3.6623960553689823`*^9, 3.662396067946538*^9}, {3.662397974196926*^9, 
  3.662398051690569*^9}, {3.6623981180157757`*^9, 3.6623981500469017`*^9}, {
  3.6623982769015217`*^9, 3.662398325149023*^9}, {3.66239886727868*^9, 
  3.662398876830975*^9}, {3.6623994181640377`*^9, 3.66239950349568*^9}, {
  3.6623997780956163`*^9, 3.6623998470706177`*^9}, {3.6624129296834784`*^9, 
  3.662412931482998*^9}, {3.662833602745944*^9, 3.662833652142746*^9}}],

Cell["Which species are where", "Text",
 CellChangeTimes->{{3.66241155496421*^9, 3.66241156097239*^9}, {
  3.6624129435894413`*^9, 3.662412950140648*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYS", "[", "i_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gx", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"gy", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gives", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "location", " ", "of", " ", 
     "plots"}], ",", " ", 
    RowBox[{"and", " ", "sp", " ", "code"}], ",", " ", 
    RowBox[{"in", " ", "each", " ", "bin"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SabA", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"sp", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
      "&"}], "/@", " ", "Uspecie"}]}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "with", " ", "each", " ", 
    "species", " ", "in", " ", "each", " ", "bin"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SabA", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"[", 
            RowBox[{"possub", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
        "&"}], "/@", " ", "Uspecie"}], ")"}], "*", 
     RowBox[{"ab", "[", 
      RowBox[{"[", 
       RowBox[{"possub", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "of", " ", "each", " ", "species", 
    " ", "in", " ", "each", " ", "bin"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SabA", "[", "i_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ab", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "k", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"sp", "[", 
                 RowBox[{"[", 
                  RowBox[{"possub", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "#"}], 
               "]"}], "&"}], "/@", " ", "Uspecie"}], ")"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "Uspecie", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "*", " ", "abundance", " ", "in", 
    " ", "that", " ", "plot", " ", "of", " ", "each", " ", "species", " ", 
    "in", " ", "each", " ", "bin"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SA", "[", "i_", "]"}], ":=", 
    RowBox[{"Boole", "/@", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"sp", "[", 
           RowBox[{"[", 
            RowBox[{"possub", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
        "&"}], "/@", " ", "Uspecie"}], ")"}]}]}], " ", "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "at", " ", "least", " ", "one", " ", "plot", " ", 
     "with", " ", "a", " ", "species", " ", "in", " ", "given", " ", "bin"}], 
    ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"presence", "/", "absence"}], " ", "in", " ", "bin"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SA", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Boole", "[", 
     RowBox[{"#", ">", "0"}], "]"}], "&"}], "/@", 
   RowBox[{"SabA", "[", "1", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Spos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SA", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "possub", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"table", " ", "with", " ", "all", " ", "bins"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395558546788*^9, 3.662395590718184*^9}, {
   3.662395637422887*^9, 3.662395855679844*^9}, {3.662396084462902*^9, 
   3.662396093135119*^9}, {3.6624000366580553`*^9, 3.6624000612422333`*^9}, {
   3.662400105056695*^9, 3.66240013763741*^9}, {3.662400198268684*^9, 
   3.662400203847021*^9}, {3.662400283268598*^9, 3.662400340107189*^9}, {
   3.662400370913103*^9, 3.662400403535512*^9}, {3.662400442030035*^9, 
   3.662400450460515*^9}, {3.662400495985153*^9, 3.662400502456811*^9}, {
   3.662401369958474*^9, 3.6624013885339117`*^9}, 3.6624017363239193`*^9, {
   3.662412958541737*^9, 3.662413003201478*^9}, {3.6627582460381603`*^9, 
   3.662758260113225*^9}, {3.6628318134295197`*^9, 3.662831849986977*^9}, {
   3.6628319319074497`*^9, 3.662831967083124*^9}, {3.662831999183221*^9, 
   3.662832084079393*^9}, {3.662835999562031*^9, 3.6628360509594927`*^9}, {
   3.662843309536722*^9, 3.662843318961556*^9}}],

Cell["\<\
Covariance in species abundance by distances (allcov takes a while to run)\
\>", "Text",
 CellChangeTimes->{{3.662411564012209*^9, 3.662411577084908*^9}, {
  3.662413007593816*^9, 3.6624130216361732`*^9}, {3.662413321726729*^9, 
  3.6624133250631638`*^9}, {3.662843668157742*^9, 3.662843674738571*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ")"}], "^", "2"}], "]"}], 
    "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Euclidean", " ", "distance", " ", "between", " ", "center", " ", "of", 
    " ", "two", " ", "bins", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"in", " ", "translated", " ", "space"}], ";", " ", 
       RowBox[{
       "need", " ", "to", " ", "multiply", " ", "by", " ", "Asub", " ", "to", 
        " ", "get", " ", "real", " ", "distances"}]}], ",", " ", 
      RowBox[{"which", " ", "we", " ", "do", " ", "later"}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"not", " ", "sure", " ", "what", " ", "this", " ", "does"}], ",", 
    " ", 
    RowBox[{"but", " ", "doesnt", " ", "hurt"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alldist", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"dist", ",", 
      RowBox[{"allpair", "/.", "rule1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "distance", " ", "between", " ", "center", " ", "of", " ", "all", " ", 
    "pairs", " ", "of", " ", "bins"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rvec", "=", 
    RowBox[{"Union", "[", "alldist", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "unique", " ", "distances", " ", "in", " ", "increasing", " ", 
    "order"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"indexpair", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"index", ",", 
      RowBox[{"allpair", "/.", " ", "rule1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "translate", " ", "from", " ", "tuples", " ", "of", " ", "coordinates", 
    " ", "to", " ", "pairs", " ", "of", " ", "coordinate", " ", "indices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"posdist", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"alldist", ",", "#"}], "]"}], "&"}], "/@", " ", "rvec"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "identify", " ", "coordinate", " ", "index", " ", "pairs", " ", "whose", 
    " ", "bin", " ", "centers", " ", "are", " ", "given", " ", "distance", 
    " ", "apart"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cov", "[", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"SabA", "[", "i", "]"}], " ", 
        RowBox[{"SabA", "[", "j", "]"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "i", "]"}], "]"}], " ", 
        RowBox[{"Mean", "[", 
         RowBox[{"SabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<covariance\>\"", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "bins"}], ",", " ", 
    RowBox[{
    "note", " ", "that", " ", "the", " ", "\"\<covariance\>\"", " ", "is", 
     " ", "taken", " ", "over", " ", "all", " ", "species"}], ",", " ", 
    RowBox[{
    "ie", " ", "\"\<covariance\>\"", " ", "in", " ", "community", " ", 
     "composition"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"allcov", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ParallelMap", "[", 
      RowBox[{"Cov", ",", 
       RowBox[{"indexpair", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"posdist", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], "]"}]}],
       "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", " ", 
    "with", " ", "species", " ", "at", " ", "each", " ", "distance"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662396046222033*^9, 3.66239604622891*^9}, {
   3.662396115390656*^9, 3.6623964096680927`*^9}, {3.662396685632201*^9, 
   3.662396708518929*^9}, {3.662398383172187*^9, 3.662398401009489*^9}, {
   3.662400582990465*^9, 3.662400610172123*^9}, {3.662400684528366*^9, 
   3.662400698271431*^9}, {3.6624007584947987`*^9, 3.662400768955894*^9}, {
   3.662400801323835*^9, 3.662400832977763*^9}, {3.662400912708703*^9, 
   3.662400934469743*^9}, {3.662401038161566*^9, 3.662401045495079*^9}, {
   3.6624011896463223`*^9, 3.662401194686388*^9}, {3.662401315893465*^9, 
   3.6624013594664583`*^9}, {3.6624013981437902`*^9, 
   3.6624014153380213`*^9}, {3.662401683564044*^9, 3.662401732307383*^9}, {
   3.6624130293654127`*^9, 3.662413065229185*^9}, {3.662413147945756*^9, 
   3.6624131547927437`*^9}, {3.6624133583115*^9, 3.662413395382146*^9}, {
   3.662413444492093*^9, 3.6624135757417507`*^9}, {3.6627548194806147`*^9, 
   3.66275481983049*^9}, {3.662754862013492*^9, 3.6627548706385736`*^9}, {
   3.662755281695499*^9, 3.662755302757578*^9}, {3.662757002337412*^9, 
   3.662757002568337*^9}, 3.662842654035261*^9, {3.662842773639843*^9, 
   3.662842785351123*^9}, 3.662843697549049*^9, {3.662843859427684*^9, 
   3.662843859906129*^9}, {3.662843907603223*^9, 3.66284390815858*^9}}],

Cell["Our empirical correlation function", "Text",
 CellChangeTimes->{{3.662411583164523*^9, 3.6624115898929653`*^9}, {
  3.662413328936442*^9, 3.662413339075227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"empPCF", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvec", "*", "Asub"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", "allcov"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"empirical", " ", "correlation", " ", "function"}], ",", " ", 
    RowBox[{"PCF", ";", " ", 
     RowBox[{
     "first", " ", "element", " ", "of", " ", "each", " ", "pair", " ", "is", 
      " ", "the", " ", 
      RowBox[{"(", "untranslated", ")"}], " ", "distance", " ", "between", 
      " ", "the", " ", "center", " ", "of", " ", "two", " ", "bins", " ", 
      RowBox[{"(", 
       RowBox[{"rvec", "*", "Asub"}], ")"}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", "mean", 
     " ", "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "all", " ", "pairs", 
     " ", "of", " ", "bins", " ", "that", " ", "distance", " ", "apart"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.662401751323216*^9, 3.662401767856126*^9}, {
  3.6624018026823177`*^9, 3.662401805136237*^9}, {3.662402598586731*^9, 
  3.662402656960024*^9}, {3.662403448724161*^9, 3.662403449356001*^9}, {
  3.662413682182837*^9, 3.662413751871039*^9}}],

Cell["which looks like this", "Text",
 CellChangeTimes->{{3.662413762951601*^9, 3.662413766590012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"empPCF", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662402671244444*^9, 3.6624026938166847`*^9}, {
  3.6624027307213984`*^9, 3.6624027646607313`*^9}, {3.66284515333747*^9, 
  3.662845164270727*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    LineBox[{{0., 12.74829211792292}, {5., 7.390109460570154}, {
     7.0710678118654755`, 4.399194507332922}, {10., 1.271184109070407}, {
     11.180339887498949`, 0.7659037298702716}, {14.142135623730951`, 
     0.13111721801339873`}, {15., 0.043516858422093505`}, {
     15.811388300841898`, 0.029198233526909412`}, {18.027756377319946`, 
     0.008588635307493984}, {21.213203435596423`, 
     0.0013036219965267477`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 21.213203435596423`}, {0, 12.74829211792292}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.42426406871192845`, 0.42426406871192845`}, {
   0.2549658423584584, 0.2549658423584584}}]], "Output",
 CellChangeTimes->{{3.6624026753490877`*^9, 3.662402694224242*^9}, {
   3.662402733657669*^9, 3.662402764957795*^9}, 3.662403280700993*^9, 
   3.662405717953288*^9, 3.6624062969674873`*^9, 3.662406329773899*^9, 
   3.662406416186351*^9, 3.662406804603773*^9, 3.66240683746817*^9, {
   3.662406886173161*^9, 3.66240691093393*^9}, {3.6624069838326597`*^9, 
   3.662407012312221*^9}, {3.662407083140224*^9, 3.662407106243676*^9}, {
   3.662407909118041*^9, 3.662407928023505*^9}, 3.662408841453096*^9, 
   3.662408905364181*^9, {3.6624089446938267`*^9, 3.6624089748889437`*^9}, {
   3.6624090129800463`*^9, 3.6624090870484447`*^9}, 3.662409222978368*^9, 
   3.662410582890629*^9, 3.662410645396593*^9, 3.662411257144088*^9, 
   3.662411323604559*^9, 3.662411410305233*^9, 3.6624114593953867`*^9, 
   3.662411831491273*^9, 3.6627548268499537`*^9, 3.6627551177774353`*^9, 
   3.6627551888229713`*^9, 3.662832514275855*^9, 3.6628445763722677`*^9, 
   3.662845108840994*^9, {3.662845154442807*^9, 3.662845164557125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"empPCFNoZero", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"empPCF", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662845412361611*^9, 3.662845453751668*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.`", ",", "7.390109460570154`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.0710678118654755`", ",", "4.399194507332922`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.271184109070407`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.180339887498949`", ",", "0.7659037298702716`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.142135623730951`", ",", "0.13111721801339873`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"15.`", ",", "0.043516858422093505`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15.811388300841898`", ",", "0.029198233526909412`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18.027756377319946`", ",", "0.008588635307493984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21.213203435596423`", ",", "0.0013036219965267477`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.662845454066854*^9}]
}, Open  ]],

Cell["Fitting the function to the data", "Text",
 CellChangeTimes->{{3.6624116006129713`*^9, 3.662411617797512*^9}, 
   3.6624137709835*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Rho]", "\[Lambda]"], ")"}], "2"], 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       FractionBox["r", "\[Lambda]"]}], "]"}]}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "function", " ", "to", " ", "fit", " ", "to", " ", "the", " ", "empirical",
     " ", "PCF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"what", " ", "does", " ", "this", " ", 
    RowBox[{"do", "?"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fitcor", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"g", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "50"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
  ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fit", " ", "the", " ", "function"}], ",", " ", 
    RowBox[{"with", " ", "some", " ", "parameter", " ", "guesses"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624027871760187`*^9, 3.662402882159881*^9}, {
  3.662403440956188*^9, 3.662403443083897*^9}, {3.662413819411948*^9, 
  3.662413832425786*^9}, {3.6628452248990993`*^9, 3.662845233067706*^9}, {
  3.66284544825609*^9, 3.6628454777433033`*^9}}],

Cell["How good is the fit?", "Text",
 CellChangeTimes->{{3.662413841744823*^9, 3.662413844902369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
        ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "fit"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662403357573029*^9, 3.662403400917585*^9}, {
  3.662403460732779*^9, 3.662403460900476*^9}, {3.6624035271260643`*^9, 
  3.6624035294532757`*^9}, {3.662403567283935*^9, 3.662403568012061*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.8898301630617954`"},
    {"\<\"AIC\"\>", "28.65142625659138`"},
    {"\<\"BIC\"\>", "29.24309998860004`"},
    {"\<\"RSquared\"\>", "0.9143123490480631`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.662844576650337*^9, 3.662845108938904*^9, 
  3.66284523510108*^9, 3.662845480109968*^9}]
}, Open  ]],

Cell["What are our parameter estimates?", "Text",
 CellChangeTimes->{{3.6624138505438223`*^9, 3.662413855414859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Rho]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662403541170051*^9, 3.662403579627411*^9}, {
  3.662413877368452*^9, 3.662413935628236*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", "2.4563116460792513`", "0.9421775406557791`", 
      "2.6070581605772487`", "0.03506310758492205`"},
     {"\[Rho]", "48.05219116662634`", "6.550598271349281`", 
      "7.335542369739708`", "0.00015787238792153627`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.6628445767528753`*^9, 3.662845108980483*^9, 
  3.662845237827681*^9}]
}, Open  ]],

Cell["Or if you like confidence intervals better...", "Text",
 CellChangeTimes->{{3.662413938361573*^9, 3.662413946160007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"get", " ", "confidence", " ", "intervals", " ", "too"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{3.662413934755294*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", "2.4563116460792513`", "0.9421775406557791`", 
      RowBox[{"{", 
       RowBox[{"0.22841578413854968`", ",", "4.684207508019953`"}], "}"}]},
     {"\[Rho]", "48.05219116662634`", "6.550598271349281`", 
      RowBox[{"{", 
       RowBox[{"32.56248763175206`", ",", "63.541894701500624`"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.662844577101038*^9, 3.662845109007119*^9, 
  3.662845241317061*^9}]
}, Open  ]],

Cell["Plot fitted curve with data points", "Text",
 CellChangeTimes->{{3.662413956438634*^9, 3.662413969480398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
      RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Prolog", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
      RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.662403769406761*^9, 3.662403992597126*^9}, {
  3.662404042064361*^9, 3.6624041243000097`*^9}, {3.662404161267418*^9, 
  3.662404199527317*^9}, {3.662405800170576*^9, 3.6624058024493113`*^9}, {
  3.66240792592798*^9, 3.662407926379305*^9}, {3.662413951485792*^9, 
  3.66241399528541*^9}, {3.662755240062652*^9, 3.662755249022591*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1:eJwV13k4Vd/XAHDzPGXK7OLimu9EotqLUkiR1BdFSPoVmaJQRJShRIaQeYgI
ITMhKZIhGikqUaJ0Lq45vef96zyfs9d61tr7rP3HUXLzsT3FxsLC4sDKwvL/
T14h7QdNGSxg8PheU3EGwCOeW/Iv6KxQ6xD+h9mCYNLjIFHblBWkr7rmLGch
kHwmpJVgzQpDTguhimEIQiISDI+cZYWHM+HvvgACk7XEw19z8XipwV0qPbtg
cDY5dpWPDa5FnNA+P7YTZgcymBpf2aBud/3XZqUdIKfjuHFzjg2ARCoX494B
B2/IsGPrbNDq7Tp445cx1OzLFKmXZIdPfdJuIw3GENyRpWVqxQ5N/vsyJ62N
gbsm19WxgR2mnWsKk68ZgUrqvf64eA5YJL3WJ3FtB+86j3aBLA7Y3PC5oPHb
EJrfqlffKuMAS1k5a4s3hmArWZaS1M0B+cfe808WGEJ4WuWxu6ycYKJqkhNu
YgjjGQ0/SwM5IfoUT41u1DZIz3nB+cKJCyyNyjvpCgYw2Ra3bOnFBW6GEtRa
HgMgf97/sy+EC0YEGlatFvShW3Gg71UaF0zp6m2+6NGHpbzh5A9DXIAxxid+
B+jD4cKPStNm3JDygqDXNkQHofu/d3Lr8kCq2R+/O1k0SHkOAWY7cO+Sm7WL
o4HsVHJZpCUPUA97vlMPogFJ2Wgry2ke+BYTlsJnRwPTrOvYSi4PNPfYVXUI
0OBComLhzBZeUPFTFvoQQYXxoEM8A0xeSM0NLGENoYB7WtEuAQ4+mOBkbMqe
pcBs3XKApSgfUFgd7u1zpMDKfPbX57p8QNwme23YiAKi52aa20/zwQXBdJXa
DTLsdY08Vz3CBwWd7jPJkWSotKgbTnnMD91rZitnjPQgnOPk2lgvPwx7fCsI
JeiBbbuIsvoHfugjoo0yLj1g0r38mub54VZUwW7b17qwg6AiMq4uANKpCT8H
z+lC71LiAfUkAXhgREPeJTrwo9Crp8lDEPYxd9QFaGtDo7MMxhYgCJYqyXbR
EtoQJ92z1SpCENJ3jVGrNrVAN0Hl9HimIPT9lTbfM6QFF0JGOdmHBKG2xVrx
/EUt4DhkvtvKWAjG6orQu25NIGyqtI0LC8O5Qu2PQkEaIHBp+NVeBWHQOeiq
zummASvL4d8qtYVh0LaYJmqlAYOMMZ4rFsJwHiUSfAkaEDaVdlgxUhhMQm65
GvaS8Lnl/3liSRh+7k+7/02JBH39q7G+3iIg7Krxm/lFDaKzvtYy7LaAvB/H
5lo6EZQ1vhs8OLYFNqbOaXPGEqGtbqbR3W0LmLuk6isEE4E5sND63mcLDPD8
zLjsQISTrFzPHsdtgeIWx/VpGSIgD823sR1bYGdS7qR/ngos651nKmmLQnRk
uOJUnTKcfsphYMsuBgevcqyYcysBwdp29CevGJR6lWuPrhHgw2huWISIGNi8
nfK8MEcAy3mj7ip5MQgn3B0ffEsAXSU/e2FDMVj/nnya8x4BlsLGQvq8xABG
+p/6mREgyqi+fe87MdiSoPteWE4R8qtPWxiXioP1qt4xQpAceOTon3SrEocw
FPgq2E0OtG+wh8Y2iMPEg56yH1Zy0OieW/X+mTjIlcUZsSjLwaut77cGTODx
E55XlPtlYTN07/dyWQmYImvVSavLwnFL1UiFWxIQukfWyvynNEh9m2hlPS8J
saBbkVGwFTgUnK0rgyVhPf6k/d2krfDHfuSrY7gknLd7+OL+1a3wfGCQqzZe
EogSRi/n3LZCQHOrjcd9fD3tzZQ8cSu8un1nsndMEuK0ZiL+4u9jwFIgxXwr
lFeKbT/XKgEr2dXH1BSkoP/ceYjnFgdse8VJN1UpaPtJFI9fFYOfb+975mhL
QVfRRkfGrBiMCuZdkjSWgoaWW+dHBsWgNfRWJpe9FIwe2j+GpePn7OT58ftt
KShWHloO0BEDbnnVYyWc0sBT6JMddkIUJLPSHUm/pYHUKtCvPCUC2tvGokwX
pWFU+1coZVQETIeVHh5fl4Z+MYNvFoMi4M3zgP02rwxYffUsTmsSgWcBj8tX
VWWgVpawpfiWCAQcmNjsdZaBcVbJoutGIjC8qVV47pUM6IRTVmlUYbjl2j5b
80gW3DtPV4Z9FoBey+pbts2yIDix75rioABw0gsp8x2y8LCksbG/TQAuc0Vf
pAzIgijdgNs2RwDOPjjIXjUtC9T+E2yrTgKwlzkmUyEvB17Wkkn1n/lhM2bD
oiRaDh5d5TUq/MUHPlXb72cek4emHbN/1zV4oXHtQUevmzxYbLepD5PlBRYz
hZHVM/IgTLGRFxLkhcQRNj77IHkgyQf32GI8UMPW5ymeKg/Lso7W/g08sGTn
rBc/IA8JJp9UWMx5IGz1an2YiQLY8+635vXnhnjTvi5XdUUoznY+EP2DEzZG
Z49I6ipCYWINR8knTjh7nv9HL10REjsLrw8OccLeIkteuqkiuA8X9Rm1csIm
54sDXE6KULUQnRR8mxO8Xzx7V5akCKJmJcW3d3KCjU379MJfRTAM5LJYy+QA
Pj0Hrt1nCQDnCR50X3bo0SrlnTpHgOer8YeSPNjhGmlVINqPALsG3DNWjrMD
i3KG2MsgAhAOiBPGLdhhSXyEcDiaADOKQdsEiOwwsWZvfLKIAFYt2RJzI2zQ
8tzeN3KcABwHfAzu7GcDL2f70ae2SmB+0ZC5tocVGkf75uyOKsG8CXP0+E5W
4PjPhP27gxLMbAqSn+mzQra1pjaPqxKEvOjaUqrGCgOwEWrlowTKDVGSj3lY
gaySp/T2hhKc8OSz2TLAAos/fvzve5cS0K8xP+9xYoFLfheXebYpg42EDP8F
6X9oNMW057iRMoCT9rV5wX/IqFEwo2qnMjzmv8oSxPYPrWwWGtnvUQYtwrux
7NlNFHDzVWjJIWXwb0z4n13bJvIq0eDY66UMtyqaQj1ObaLjYx9FIvOVYfux
Ix9/N/1FuyxA8y+/CrQlxT2RuLSBiNkv69KFVfD9AueQ7wbiZRw1oYupwICD
5p8Ujw30Jv2cvaeMChSox6cZ2G6gs9N3r4+QVCCMWXXmi8YGuhPNnKgzU4HA
sBsF3aPr6M+zskzvKyrwT2FqW43pOsozlRD8Mo/btUzgksYaSt+5bLdrSQUM
XLpG6pTW0G3DkaysVRUw9bRuWpJeQ1d1s7UdWIjg8ZKaFce3hk7KqFoNCxJB
o/HMmbXZVaQ2T7/RRSJCZVIJxny4isrz7XhLnYlgvzm2arxjFTWwpHD69xKB
zUnsLt+pFbTr0l3n9n4iyAwXyzx3XkHPmXkNAkNEIJ4pd71uv4LezFScKXlP
hB4+BbqE1QrC3nT3f5okArW59qonbQWRStdT9/0jwlKI1e1lthWUceikmjxd
FRos37kF3FtGlwqo+3qyVWFhRTHaZHkJxRxYdXTKVwUzzXsPChhL6M5Ku/d8
kSqc9zziw/NrCdUcPHBHrlwVPE8WdX39soSm105P+Tarwp+MeqOXvUvI7nB2
pPR7VeiwC/kbmLuEtDl4Os6KqIELvXdQxGoJjZ0aMxSMVIMhn38RqdVMtNmw
xnPquhp0ucgvWVcwkQKf1EhrrBq8vr6vQrCUiZwrbYO9EtUgSSlxNCmPib4s
dTe9zFYDfi6xmacJTDQRXWMU16gGLLqx5W3eTDRdGr2De04Nzm0+KeLUY6LF
3xRgdVCHhPVnr442LqJMX+GXecfVgcf4Y2pk7SIyXfh1BFzUwcL7acSjqkWU
uFLieeW0OrQO+T2VK11EWuwKaX8D1aG4Na5I/O4icpPim1tNUofrujvT0i4v
okHTicz5PnXwEAy/8mH3IipLS1r+BiRoIfo6tI8uoC8ZKcn+e0hQTe5/X/V+
AUlk3dFjNSdB7djpvqI3Cyg87+5pBWsSdGmCSMrAAjpaWvDe3okEj01NexM6
FxB7S01DfzAJ9JzR/rWyBXR8fPhiQw0JKlJpzPjQBSSoKrYSR9SAhvahRnMN
PH/A0+aTugbs+SHzaUFtAeVc7Lqvo6UBawYCbXnEBaTbG+jwiqIB6ix3Gv8p
LiAbnw/NEgiPl913clhyASU1ZYfmOWhA/cGosy84FpDUQRJ7/S0NKNjubsP8
Oo+IF3cKfV3RgFnh22os+fNoweaoUsiGBkxuNXH6kTOPOjV96GIsmkCKYd/7
KmseuYznOZpxa4Lccy1SSfo8yjTjKCmV0ITeA8BzJnEeiYq/RP5UTdjwXufY
ET6P/lXZ+7F7aeL/Dw7pEq7zaHTm/BvVz5rQ//st01p9HrV6fiuMmNAE1pLZ
2HrVeZT9y/b82JQmzAtz2ioQ8XpzFNHUX5ogfig1hEGYRz8Yf6w51jThgV2K
WLHMPFpc8Xw5Ia4FfHeL7+4TmkfC3O6duZZa0CITNHBqiYH2qNhVSddrQcJW
vbjPLxioVmU60b1JC7wJHutJPQykSrzs97BVC0rfKbvu62YgLtUiqtlTLdji
epj7URcDdast1vq+0oL7401lqe0MZKmZ0tQ9g+e3F1dF1zGQDeVNZ6CiNtTN
Lf2SLmCg48ju7VCMNpTrq/gNhzLQYd/7vu43taHyuNS24st4fv4G/3KCNgxN
T8yGXGIgQ/Z7pnJp2jCZwFRQD2YgsW7mQ4972uBmqXQnLoCBeg+mxa0/0QZ9
SwmVUE8G2uY8ilTXteHiG2YZvyMDiYa6lAWd04F3ioOMku0MJHeEn23AVwf4
CvbadRoykJpOvYNKgA7cmK5xGdvGQNvH+HkHQvD4Wc9ACQMGctnZcFolRgd0
daLC46kMVPFXUHWgQAfuW5U/zNJiIPOwllyVDzpgEqAtRVdgoNArkqkDproQ
VtfrrcPJQEIxESWee3XBcd0tw5mDgXISfzXxWOrCiEPEmUR2BmrL7xw3PaQL
xvPbVpisDLT51JvUcEIXjj1Y7ejZxFA4T3dL7mVdoFFzbt5cwdDV2xcnfOt1
oTpnKCb2F4auF37QE9PUgx3GQha73mFI4/DdTX8dPeARuKeR9xZDfWzH+4fJ
enAwUiacDbeo2+ezSdv0IHBoZ3zPawzlEL7f22KmB4QnLQqOQxiqz16QFXHR
g7YownBSH4am0oR4BO/oQbLaRaL9Uwwp71X2ZWclg32+XxqhBkMtThJfytjI
gD1Vn8utxpBdII+NLQcZosgPCxRxXy+a08vnJsPR7fJEQhWGfrK1/NklRIaf
yVi4aiWGqtoP+4TIkmF3PeZhUoahnduveTP0yTB6Ilq0tQBD9trTXp/PkiGt
NWalMgVD9OPGzWVeZOioHakywi1y8xb3BW8ybH8w1/U8GUM9s/QCAX8y7B9D
/z4nYcjwQcT77cFkWLW4USt5G0PSmrKmKdFkOPZ8aiIlHkOj6ge3WhSRIXPK
4+TwdQw5qdQ+qRnD+3ly6ODuEAx1FlPPnfhMhqvDKgYzwRgiaVZLCXwlg8sl
/xO3cc+TK31OTZJhC+Fp4JcgDMXsui8vNUuGwuvTDyIuYqjWISs4dIUMbzZ9
xV8FYEggMYpiLkaBC0aaCZk+GGrdsMsfM6dAgrOY67dTGDqVTtOstKTAE/pn
wWTcQnTRR2FWFLiRG7VmivuE52CXog0FTPclJBW6Y4ht1GLa9T8KcF4TbTx9
EkPmDbv0vp+igPNYX/m6C4Ze+5Eez12lQFyfwZTNcQzNfF//8K+VAs0bFNvi
wxhy7PSa6W6jgMrfrIpTuHuzx9YTOijgH+xqrIq7zK5dgdBFgcEC+99Fthg6
23nVHV5S4HtnTXHxIQzNZvNi4SMUEL8jfuCRNYZ+2W3lZluiQGR8pzO2H0N/
Oqn6HHpUUDYtLWHswdA0Y6CogkyFTkFNrg7cEwRP8f+oVJDeWxZzC/ebsMKF
Un0qvCpFq1q4m43Ea6x3UOGR4ddr/9uNz1MNUzfTggrcsUcNpk0wpFDQSKK6
U+EDT5EpK8LQwYhdci4ZVEgTCWtK2Y6hGz1GZ3Qy8Xpvt304jbtHeFv9WhYV
XkfoyBjjNsnRs0nNo8JuLifuCUN8vloIUb0lVHg22RVJwS3DZPtFr6eCnN+T
X+8MMPT9f90tvK+pUOtL6jKiYyjUxubYIwEa2MQ2z7voYWjP7EUuNyEahMTo
R+3CzXc9t1pEhAaHnk/oyuG+0zLH7S1Gg6zy2MH3uhiqVIuvJcnQoOoP+w4b
3F82XgjmqNPgeVZFtZkOhkxLd3fEmNIgqqs6yVQLQ1xs21Sdg2jQEjntFa6O
oZRPmD1HCA022wQPueNWaii7WXYJd+IRC3PcO7wUFpfCaGD/UfSCCG7/d5xP
E67RIDrmYVu+GobGy964PEmiwb/MP/+6VfH7f9g/i1hBg9LkjC/KRHwe71WI
zX6lwfWKfC1hJQwZpHcT677R4Eq8TiWTgPdz46v+lSm8nmjEnk+47/tK2Iv9
pAFxh0l5Ke4Z49AsY4wGaX8uepjh9h22Ur25SYOk0sCgcEUMXf43a6AjSwf+
M2/LOBTw/ThoOvrY4U5O1DOVxdBcrs8LmaN02CdzOV0Xt/n3WsPn/9HhP4Ek
YVncG/5oq/wxOkwxxEiLMni/N+3e9LrS4W2VDWsJboP2sINqPnSI5xjYL4z7
A/G16VgsHbDbjus/pTAkj13S2t9Oh2pNuapnkhjCrKttSE/oYOTA5fcId+fD
74GcT+kwff4e5OP28DnU0f6cDvINw/yhuKvm1I7QB+jgkp5to497z++hMPkx
OgxF1cXel8Dvy4z68J81OiSoT57JEMe/h6XTct8GHcwfss/G4BYuS5Ir26TD
zAWv4CDctWf+eriz6cOj2rnH/+H+Oz28/oFXH0ac4iYlcSf+CFXtlNIHx9jx
nDQxDLnte2SZK6MPryTT/0Tj1i+Z9rkspw/j8fNWQbhHPQ43GxD0ofiAq44D
buJ3kvUDdX1wC+aNksW9ZOYcEKOhD+JhFYYCuF/cS844paUPyDt/dUMUQ96n
Nr8p6unDZd1DeeO44RmN9y9ZH+4rrV4bxC2qekZ3lKoP/ntfXOzAPRmVc7iB
jq93NgRW426YfB2UYqAPCl3NVwpw/x8DqK7j
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"g(r)\"", TraditionalForm], None}, {
     FormBox["\"Distance (m)\"", TraditionalForm], None}},
  ImageSize->800,
  LabelStyle->{FontFamily -> "Times", FontSize -> 12},
  Method->{},
  PlotLabel->FormBox["\"Pair correlation function\"", TraditionalForm],
  PlotRange->{{0, 21.213203435596423`}, {0., 33.2004005488656}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, 
    Scaled[0.02]},
  Prolog->{
    RGBColor[1, 0, 0], 
    PointSize[0.005], {
     PointBox[{0., 12.74829211792292}], 
     PointBox[{5., 7.390109460570154}], 
     PointBox[{7.0710678118654755`, 4.399194507332922}], 
     PointBox[{10., 1.271184109070407}], 
     PointBox[{11.180339887498949`, 0.7659037298702716}], 
     PointBox[{14.142135623730951`, 0.13111721801339873`}], 
     PointBox[{15., 0.043516858422093505`}], 
     PointBox[{15.811388300841898`, 0.029198233526909412`}], 
     PointBox[{18.027756377319946`, 0.008588635307493984}], 
     PointBox[{21.213203435596423`, 0.0013036219965267477`}]}}]], "Output",
 CellChangeTimes->{{3.662403931872311*^9, 3.662403961748376*^9}, 
   3.6624039930219793`*^9, {3.662404054020718*^9, 3.662404124635461*^9}, {
   3.6624041628226557`*^9, 3.662404177212069*^9}, 3.662405718219399*^9, 
   3.6624058028929377`*^9, 3.662406297284313*^9, 3.662406330073842*^9, 
   3.6624064172534*^9, 3.662406804946733*^9, 3.6624068387016277`*^9, {
   3.662406887024851*^9, 3.66240691165195*^9}, {3.662406984216867*^9, 
   3.6624070126147203`*^9}, {3.66240708340755*^9, 3.6624071065110817`*^9}, {
   3.662407909400408*^9, 3.662407928325042*^9}, 3.662408841770507*^9, 
   3.6624089062315893`*^9, {3.662408945263624*^9, 3.662408975140057*^9}, {
   3.662409013246416*^9, 3.662409087299986*^9}, 3.662409223247031*^9, 
   3.662410583174616*^9, 3.662410645662326*^9, 3.662411257398282*^9, 
   3.66241132393871*^9, 3.6624114105907393`*^9, 3.6624114596960697`*^9, 
   3.662411831774963*^9, 3.6627548277165937`*^9, 3.662755118552618*^9, 
   3.662755188969701*^9, {3.6627552441558857`*^9, 3.662755249340041*^9}, 
   3.66283266521484*^9, 3.662844577150803*^9, 3.662845109040369*^9, 
   3.662845242291156*^9}]
}, Open  ]],

Cell["Plot fitted curve with confidence bands", "Text",
 CellChangeTimes->{{3.6624140170269537`*^9, 3.662414017625156*^9}, {
  3.662414059835639*^9, 3.662414068251809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bands90", "[", "x_", "]"}], ",", 
      RowBox[{"bands95", "[", "x_", "]"}], ",", 
      RowBox[{"bands99", "[", "x_", "]"}], ",", 
      RowBox[{"bands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fitcor", "[", 
       RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
        RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"cl", ",", 
        RowBox[{"{", 
         RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitcor", "[", "r", "]"}], ",", 
       RowBox[{"bands90", "[", "r", "]"}], ",", 
       RowBox[{"bands95", "[", "r", "]"}], ",", 
       RowBox[{"bands99", "[", "r", "]"}], ",", 
       RowBox[{"bands999", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"3", " ", "\[Rule]", 
         RowBox[{"{", "2", "}"}]}], ",", 
        RowBox[{"4", " ", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}], ",", 
        RowBox[{"5", " ", "\[Rule]", 
         RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662404221668598*^9, 3.662404310745612*^9}, 
   3.662414014514715*^9, {3.662755211342601*^9, 3.662755231736133*^9}, {
   3.662845540490911*^9, 3.6628455435145197`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], 
     PointBox[{{5., 7.390109460570154}, {7.0710678118654755`, 
      4.399194507332922}, {10., 1.271184109070407}, {11.180339887498949`, 
      0.7659037298702716}, {14.142135623730951`, 0.13111721801339873`}, {15., 
      0.043516858422093505`}, {15.811388300841898`, 0.029198233526909412`}, {
      18.027756377319946`, 0.008588635307493984}, {21.213203435596423`, 
      0.0013036219965267477`}}]}, {}}, GraphicsComplexBox[CompressedData["
1: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
xEdP+TUNb0LZetdMgC8kHX7uMaygD3xh5eey8NFyHfBrWv2lT694qwm84by6
fuJjLzXgDZKf31W/zFABvybdoW82PXnKr1musJe5RsIQ+vbGKrXpuwp0wa/p
+5Y6R1yHDn7N4zB15ZgRdfBrhmsd38fETfk1/i47Nth/nvJr2AmyG66fmvJr
ns9OfO2gYQr964mfq8ZT9+hD/1roYfDr0uiUX/OwOMkuT0EL+tj7/i7NYxfV
oI8teFN12blGBfyapUH1ZjWXp/ya2pHOreKHDaGPfFbjfrlveMqvWdpqxCxz
ooNfM/vWGpfPphrg1+xtX/Za8syUX3Mi7It3mJIO+DV/n/HaFKOm/Jof9vb1
FhFTfk2d431jL3dT6G9eRCi2zL+kD/3NjVO3YnRUGODXPLch7M/P1YI+xzJ1
huDwfTXocwqWl9Yt/KACfo1U9Tbv9JQpv+aZuYnsmzuG0Gc4h/SL7VbVA78m
3qQhXNebDn5NUkeJWNQqDfBrsh6IbXtzZsqv6SweeLjUXAf8mrrczdoNUVN+
jal9q1xfxJRf45gmHnP85JRf82tPXHh+qCnsP96fmscX3NWH/Yfzt8nysj4D
/JqmA5lziuy0YB9qnU/xXvVYDfYhr7SG4QVfVcCvuaPaESCWOuXXnB8Y1xmo
NoR9QHfj9ZXrjPXAr9nwxrnq30E6+DXU0bHDRzZrgF8TvkHztEX8lF+zh5c2
+nqJDvg1SyWE9cyip/yaFYNi8itOTfk1GYcvnG49OeXXUJ4dr6Sf/F+/Bvsz
Bpuzi8OvK3OwP+NsMrNhvf5PAvszBZSs0/Xt/5g4z/cv4sroUKUhz+U/Vy03
VKdBnif2lz64VSgHef402UNN0U8S8nxs474NV+SpkOe5iSoGUb1/mDjPq/d9
PZZ9gwv+TFeQqr1VSRf4Mw1nbooHib8Cf4YTZy/j0JMF/gyn8YzvulP3CZzn
ngnJv2Qi2QTOc7TP78O1tkIC5zlFpE/ym/NVAuc55/rSnmVxGeDPFKxyulU9
+yH4M9Y/T9hcTH0O/syuJdf3MUUbwJ+JXuqSvUC0BfL8t//0K5sfvIc8X1bu
+/5u9UfIc8mz+XZb+rsgz63YV4u+5nyBPNeyLhh8aNUDed6UvnLiB/sr5LmB
n01K4eg3yHN53b2Ovma9kOdcr+wtdaZ9kOcPX257sEbyB+R5YWFgj2vnD8hz
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
C7ho
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl12W0VtUWBuAjJt3d3SYiDdLdXdKdSreCdLd0t4KiV1Hp7u6W7u66zxr8
eMY73zXPGHzf3vtsIHWj9pXbRYqIiHiHhO9GRBQwLIkcEZFDz0lbfbMfaERM
dukzKMjPemmemH9nICf1bqTnP70dW8yNicVufSaF+EUvw1PzHwzilN6dDFzQ
27PV3ITY7NFn8TXL9bI8M/+PwZzWe5CRi3oHtpmbEoe9+myumAfwGbf1wqww
l+O5+U+GcEbvSSYu6R3Zbm5GXPbpD+UYCjBHvyp/5HPu6EX41VyeF+a/uGse
QR6G6mdlLzLznvswW152/kxOpAjf6jtkc+IRyc/NlPudP5Jjie+soIwqF8m5
dtfkwPD9nX0hP5TzZBJ51/6VeUqkt/e/hIwul8jksqj9b+YK4f7pL8ODIqfr
ieUq/Z55ZPhMel4ZWS6Qw+zOyd5k4X3nc+QV58/lJIrynb5TtgifnwP6YzmO
QszTr8tB5OCeXoyV5oq8Mv/NcM7rfcjKVb0Tu8wtScBBfT7FwzOrV+K1+R9G
0JkS4Xl0Xpk35n8ZSRdKUio8b3ZVwi8Oq/VRdGW33ipcSw7pCygdnie9Ku+w
Rh9NN/borUnEYX0hZcIzolcL95i1+hi6s1dvE649R/RFlGWVXp13WaePpQf7
9LbhXnNUX0y5cL30GuFZY70+jp7s18MLISnHwruA8uH66DXDPWSDPp5eHNDb
k4zj+lIqhGum1+IDNuoT6M1BvUN4tjihL6Miq/Xa4dlkkz6R/8x9ycY1vQ+H
zB1JwcnwDqISa/Q6fMRmfRIXzP3IznW9L4fD7xEpORXeQdwwD+ZL7uuVWWuu
G55ltuiTuWj+no+5offjSHh+ScVp/Ykcz9cs12/KIeTkgV6FdeZ6RGGrfl+O
Ih8/6ZfkD3wSrp/fmbnypvMXcjLFwufQj8pOpA733c/NkmecP5UTwvPurLCM
JheHeyRX2N8yDyWu/lW4ZnJ+uOfyof1r89TwTOolZQy5NFxzWdV+vbk+sfWo
4ZmWM+Q2uwdyNPnD93O+UE5xfln251Nu6S/Dd6V4+K76MdmZNJwN70tum4eR
i0d6NTaYvwnfie36VPpzXO9CWs6FdxbV2ag3IDo79GkMoAY1qUVt6lCXetTn
GxrQkEY0pglNaUZzWtCSVrRmkz+jYbhe7NSn8yMn9K6k47y+kjvm4eTmsf5G
TqMUMV23ZeEZlW3sPveayS9jki/8XugxZN7wHjKfJ7o5D0PNf3COaHru8F3M
g1nJGaI4+4rPzPUZxG+cJrLznHxqrsdAfuUUHzn/kk/MdfmRFZzkQ+c5+Nhc
hwEs5wQfOP+C7Oba9OcXjvN++H5kM9fiB37mGO+Fz0hWc02+ZxlHw19B4TOS
xVyDfizlSHglh89IZnN1+rKEw+HfOeEzkslcjT4s5lDE238EZSejsSq9WcRB
3pDNLoOsQi8WcoDXZLVLLyvTkwXs5xVZ7NLJSvRgPvt4SWa7tLIi3ZnHXl6Q
yS6NrEA35rKH52S0Sy3L05U57OYZGexSyXJ0YTa7eEp6u5SyLJ2ZxU6ekM4u
hSxDJ2ayg8ektUsuS/MdM9jOI9LYJZOl+JbpbOMhqe2SypJ0ZBpbeUAquySy
BB2Yyhbuk9IusSxOe6awmXuksEski9GOn9jEXZLbJZRFactkNnKHZHYJZBHa
MIkN3CapXXxZmNZMZD23SGIXT35NKyawjpsktosrC9GS8azlBons4siCtGAc
a7hOQrvYsgDNGctqrpHALpbMTzPG8C9XiR/eAzIfTRnNP1whnl0MmZcmjOJv
LhPXLrrMQ2NGsopLxLGLJnPTiBH8xUVi20WVuWjIcP7kArHsosgh/M5ZojrL
Fd4v5gYMY3Hkt/+/+D8Zl4aA
         "]]]}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1VV41nUYBuAPUOkQW1QYo5sRY0UOGA2jG0bXRnc3oxsEBVtEsbu7A+xu
7AK77/fi4L6e9/s9O3hO/teS8gpy84smEokiHClyKg+VTCTWyxGk0sJjaT50
38E6SlHB26fybjYwMv6W0pyp+0zew0bySKMMFXWfy3vZxCjSKctZuuPyPjYz
mgzKcbbuC3k/WxhDJuU5R/elfICtjCUrNnKu7iv5INsYR8vYyHm6r+VDbGc8
rWIj5+u+kQ+zgwm0jo1coPtWPsJOJtImNnKh7jv5KLuYRNvYSCXd9/IxdjOZ
drGRi3Q/yMfZwxSyYyMX636UT7CXfNrHRi7R/SSf5FIK6BAbqaw7IZ9iH1Pp
GBupojspn2Y/08iJjSTpfpbPcBnT6RQbqar7RT7L5cygc2wkWferfI4DzKRL
bKSa7jf5PAeZRdfYSHXd7/IFrmA23WIjNXR/yBe5kjl0j43U1P0pX+Iq5tIj
NlJL95d8mauZR8/YSG3d3/IVrmE+vWIjdXT/yKNcywJyYyN1df/KY1zHQnrH
Rurp/pOvcj2L6BMbqR8fFq+JQyymb2ykQXx3vO6+gSX0i4009F6UN9yHWUr/
2Egj78V4030jyxgQG2ns/TTect/EcgbGRlK8n87b7iOsYFBspIn3M3jHfTMr
GRwbaeq9OO+6b2EVQ2IjzbyX4D33raxmaGykufeSvO++jTUMi42kei/FB+7b
Wctw0ryV4SP3nRSS7ndZPnbfRYa7HJ+4M2V5skjxO6eYb4F17GUea9nDROay
ht0MYTyzWcVOetCPUUxjKVvoSAfak0072tKG1rSiJVlkkkE6abQgleY0oylN
SKExjWhIA+pTj7rUoTa1qEl3+pLHVJawmRp0ow8jKWAxm6jOYMYxi5XsoCu9
GUE+i9hINQYxlpmsYDtdmMAcVrOLXIYzhYVsIJmBjGEGy9lGZ3oxjMksYD1V
GcBoprOMrXSiJ0OZxHwKSaI/h/2vqiL/BzzjuA4=
         
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1+WblHUbBuBZYOluQRFRsUVQsEBC0kABERSUxgJbsRODxlZAuru7Uxql
u6QRpBve8z78H95P8+E8rvu659lhd+Y3uzzXNX2t9qtpEolE6JM2kSgth2dK
JDJIkehhdyhdItGFymRku91iUlITiQH6sxThlN3vHDZ3pQqZ2GGX17WTza0p
yRK7NHYDzQ24ltN2PfnH/B1VycxOu3yunWJ+lVIstUtrN8jckKKcsevFEfP3
VCMLu+zyu3aq+TXuZpldOrvB5ue4jrN2Re3mm9+nHL3tjsofqE5WbnLNUvkZ
uz1eQJ9mfp17KKGvlt+y3OOp+hDz89xn3iKLcZt5pWzLOdddpy8wf8BD5l2R
8f2a18uasmO8D3K/rJv633v2r/nH+Hn1GrKM3CSflNnkzXKZfFR+LivIv2Wd
SF9fUE7Xa8g3ZFm5Q5bmLvMa2Y5K5r1yha9Jbx5qbsT95q3yem43r5Jfcd51
xfSF5g8pT1+7Y/InHiE7e+yuct0M85vx/bPSLoPdMHNjbuCCXT+Om3+On4cc
7LVbRX8GcMLuFx4jJ/vs/iSj5xuuN+FGLtoN5KT5Vx4nF/vt/iKT60foTSnO
JbtBnDL/Fu8HuTlgt5rMrh+pN4szwmW7wZw2d+MJ8nDQbg1ZXD9Kbx7vEVfs
hnDG3D3eP/JyyG4tWV0/Wm/BLSQYan9W9qAW+ThsV8i1M81vcS/r7LLZjTG3
5FZSGGZ/Tv5ObfLzj11h184yvx1nlvV22e3Gml+Is0sahtuflz3jPFGAI3ZX
u3a2+Z04H2ywy2E3zvxinBPSxpmxWyQ/inPJCNddkL14ioLxs7pmufyCox6/
Rp9jfpcHKKmvle3Z6PGc+njzS/G4eZu8I5j/lF+TLs6U/of8OM6mebesyD3m
DfF+yU6yijwgR3rui7I31e3qxmsrN8drL6+K11WuiLMnv4znk3viZ5H/+voi
cm6cfdlGlpM747WXD8pScl2cRdlBPiz3yU2+Npd5gvllHjRvl3cG81/yG1Lj
bOuL5SdUYpSvvST78DSFOGZ3revmmd+jLJvtcttNNL9CCdIz2v6y7Es9CnPc
bgtjuKL3oz5Xc8JuK2MZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSR8
j/39O89wDSfttpHHfpLeirvIQHG7JfLTeC0prW+UnalqPhivSZwDX98qxWsi
h/tjmEPWkD24wmmP3S87cpRx+k5uMLdhE1/pv7OU7HoT5vOK/jIv8SIv0JIW
NKcZTWlCYxrxPM/RkAY8yzPUpx5t6cESsvk3GjOPp/Wx7OB6/V028qXencVk
1Rsxl7r6Ke4zd+AIY/TtFDO/wwa+0KvK37jIP/pd8bzspZs+SGb2upWTXTnB
H/Y9ZUr8vpO55PNyDk95rIg+zJxdVpcFZXd5mZMeLxy/080Z5b0yj2wf/z6j
PX51/M40Z5WVZH75kzzLNo/3lmnjb6t8m/V8bl9F/soFDuv9ZHrXlYiflT3x
s9qXlV04ziI9s3yO2dTRT1DG3C6eh1F6RfkjZ9iqF5VvsY7P9EPcGd8Hf8f3
oS8kk7khs6itH6e0+VsOMVLfEmfU/CZr+VQ/yB3x3OzmF30BGc0NmEktfQSb
4zXX32ANn+gHuD2ei138rM8ng/lZZvCkPpxNXKO/zmo+1n9iHun1Z5jOE/ow
NsZ7pL/GX3yk/8hcUvX6TKOmPpQN8Z7r8Z/SP/lQ/4E5pNPrMZXH9SGsp5De
mlV8oH/PbNLG54EpPKYPZh1X6a1Yyfv6d8wiTXwemMyjcZ5ZS8H4DLOC9/Su
zCQlzjCTeEQfyBoK6C+znDZ6F2ak/Pef7DpMpIZenXfpzHSuUNtjE6hmfodO
TOMytezHU9U8gNXk119iWZxvfT+3xfvKTjrqU7nEk/o4qpiPcY/5Gw7SX68g
f+B0vFd6PvkiS+P86pXjbHGefXpfmeozc2ucA3bQIV4Hmcn+QZlXdpbH4n2I
1z7uEcyJ+Fuq55RP6GOpHGdLH2rOJqvJArKbvMS/8V7H//PMGeTdMrf8Wh6g
X7zHMotdeZlPfi9PxVnyWC+ZJu5F5Assic+R/cNx5jnHXr2PTOe6W+K8sp32
9g/ITvF9xBnRL1DTPIaHzUcpZf6K/fTVH5LfcTLOp55HtmRxfAb1Pdwc55xt
tNMncZ7H9dFUMh+hpLltvPb00VeS29yCP+Izqf/NTfE5YCvf6hM5x2P6KCrG
70VWkEtvzqL4jOq7KR6fC7bE+dAncJZH9ZFUiNeS5fH+6c1YGJ9ZfRc3xueE
zXytj+cMj+gjKG/uyTJy6E1ZQGu9TCJ5D5q8B03egybvQZP3oMl70OQ9aPIe
NHkPmrwHTd6DJu9Bk/egyXvQ/9896P8Awy7ITA==
         "]]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{318, 2474, 52, 51, 923}}], 
         PolygonBox[{{318, 2474, 52, 54, 53, 51, 923}}], 
         PolygonBox[CompressedData["
1:eJzt08VWlgEUhtFv6WLgXYjd3d2dWICCSndIK6B0N0rY3d3dnXfj1P3fhovB
Xmd63sETHpcdkTUoCIKQvwwdHATXhwTBLjecRg6STgxbWEsHFRwggUiG0cQh
MohlK+vopJI8EoliOM2UksleIjhGLUWksp4uqsgniWhG0EIZWexjGxvoppoC
ktnNSFopJ5v9bGcjo2jjMDnEsYNNjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxm
DnOZx3wWsJBFLGYJS1nGclawklWspp0j5BLPTjZzlBoKSWEPPdRRTBq91FNC
Hw30sya0NywI/vCa39zmFb84wy1e8pNOTnGD53ynlhb6uMwjPlFOGaUc4iAl
FFNEIQXkk8cBcskhmywyySCdNFJJIZkkEkkgnjj2s4+9xFJDM71c4iEfiaGa
Jnq4yAM+sIcOTnKdZ3yjikaOcYH7vGc37ZzgGk/5SiWnuckLftDAUc5zj3dE
08ZxrvKEL1RQTzfnuMtbomilnys85jNHqKOLs9zhDZGhH0I9hw20PdD2QNv/
a9v/APhR8xw=
          "]]}]}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
         "]]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{923, 2476, 7, 6, 1489}}], 
         PolygonBox[{{923, 2476, 7, 9, 8, 6, 1489}}], 
         PolygonBox[CompressedData["
1:eJzt00VukAEUhdE/JKRhGWyJCW51d3dvqbfU3d3d3R3YB2vgdBkkHZy86c1L
vtehSW8SXwRB8OQvb18GwdyrIHjnHrLIED+popgLNpikmwbec8QSw7RSTQmX
bDJFD4184JhlRmjjB7fsPm1ggFKu2GKaXpr4yAkrjNJODWVcs80MfTTziVNW
GaODWsr5zBlrjNNJHRV84Svf+E4oYYQTQSRRRBNDLHHEk0AiSSSTQipppJNB
Jllkk0MueeRTQCHnrDNBF/VUcsMOs/TTwh17zDPIPfss8MABjxQ9/TskCP5w
wm9WOeYX46xwxCNdjLDIPnc00ko/M2xxSTVVVFJBOWWUUkIxRRRSQD555JJD
NllkkkE6aaSSQjJJJJJAPHHEEkM0UTTwkz6m2eSCSDoZZoE9bqmnhV6m2OCc
CDoYYp5dbqhjjGUOeaCZHiZZ54xw2hlkjh2uqWWUJQ64p4luJljjlDDaGGCW
ba6oedqv1dCQ526fu33u9n/s9h+jJSbA
          "]]}]}, {}, {}, {}, {}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1vWbFVUcwOFLs3SKpHTtUkooKiBIqChIgyBhIShlIChlogJ2YRI2KK0S
JooFSjciJSGx7NLl+/0zfJ77w8vnzLmz986cmWeYCv0GdxiUNZFIhAz/ZNdZ
KYlEgdyJxPlcicQBncKdNKYca81v0RfpSioFOcln3EdrLtjvX53KXVzJJawz
v1VfohtpFOIUn3M/bUhwkGn05yrKk8XxfaGP0J71vm+bvkx3apHbPl/rYxTm
NLN4gOvi93z+kz4b38chpnM3JX32h15NfuMfdDwVjNdHyWr8pdbQUVpWV2s9
vVmL6i9xLDpJK+smvUw3ON6/jF+hqu0eWkKXa22trSn6jdbUx2PddK0W4Qyz
eZDS5lfq9XGexst0Qhwfh3mfATShItns85WOpgMbHct2fZVbqBPHHvuxyWd/
62v0pC7FyM4RPmAgTanEZvvv0NfpFWtBcXKQzofcQ7NYD7bYf6e+wa1cykWc
ZQ7DuYGcHOUj7uUaqrDV3+/SyfSOtY115BxzeYi25CKDjxlE81j3OA9rsVDH
0JFtvm+3vkkf6pPHPt/qE1zMeeYxghvjPiOTTxhMCwr4m6X6NNXi/G0v0rF0
ijW0/as+x19+c4++Rd/4DZ+t0AbkNf5On6S88TotyQXmU93cSC2jq+L66E1x
j+jPmqYT49roxlhfTdFjfBrHZnuIltI/49rrtVpQf9RUfSbum7hn4/fiWhgv
1nGUM16jneM6G/+mz7PdOf2jb9OPhuTz+ff6VPweCdsL9GHaxTpznBkMpSU1
+Nt37dV3uI1GlI61YYfP9um73M7lsRbxW+yMeyOuZ6xvHE98T+zP/niuxbOJ
gxziMEdI5ygZZHKM45zgJKc4zRnOxnf5rfe4gysoS35OMJNhtKJm3IfOeYk+
Spe4123/ri/E/Wy8Oe45PRffncP9oOdyep7ox3qQa4zv0DfYSj3b9bQjT/Eb
l5groOVpwXAWUTCO2/ee5hQnOcFxjpFJBkdJ5wiHOcRB/uUA+9nHXv5hD7vZ
xU7yxzHQnAdZSIF4NvisrnEHnuRXypnPp7fyIuuoaa5cnCsP8BX541nk7283
fp0t1DVXR6eyh8a2b9Yn+IWytvPq++zjatu9NIPWxi9oZ12rNbRsHEdca71B
39Zu8bvaQJvpLXGvxLrq/XEu+qXmi+eo4+sT1852e/1Ie8R9ps30Nj3Gdcav
aRfdrHW0tp7iRuMpupsrjNtrOi2NH9efKWOcR6ezl6ts99TnWUN122X0LbZT
33ZTvY8vyBv//zjWfsavsona5mrpe+zictvt9DGWUdp2Spw/z7GaauZKaxOG
sYA88X+x704zvolH+YlS5nPHejCJVVQ1VyquC0OZT0q8G/j71FgLxvEjJc3n
0u5MZCVVzJWM82cI88gd7yb+vqZxW8aylIvN54xyJYOZS664BvavEdecMfxA
CfM5onFfMYg55DS/yf7Vja9nNN9zkfns0bhu3MtscpjfaP9sxsVjXbmHWWT3
2QafVYt7glF8F/uZzxr3HhP4k8rmimkjBvI52cyt9/cfGh+gqe2++gobqWW7
qp6MtTB+V3fGdxi30SNca/yIdtRvtZhm0d7xnItrqNNi3eMZGmunXbVnPCe1
lT6rnfQPraRFtVc8N2ON9E3tGvecXqYN9RDNjQfoZ2Q1Xudczhi3M/5A98e9
ZdxHM2lj/LJuIM24ir7DDhrabq0P8w1FbSe0C8+wgormiuhktnGp7QZ6NzPJ
Es8Cx9Db+CXWk2qucpwnI/maIuYu2K+z8dMsp4K5wlqf/swgYW6N/SoZt2QE
Syhs/rz5Tsbj+Z3y5grF+nAXn3KB1farGNeJh1hMofh/wXzBOAfu5BPOs8p8
hbjvEsl3+eS7fPJdPvkun3yXT77LJ9/lk+/yyXf55Lt88l3+//ou/x9WE/2a

         "]]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{1489, 2478, 3, 2, 2004}}], 
         PolygonBox[{{1489, 2478, 3, 5, 4, 2, 2004}}], 
         PolygonBox[CompressedData["
1:eJzt00VyVQEQQNFXTKgsg0Xg7m7BHX7c3d0T4u6ueIK7u8smWAbn74JBBqd6
2lXdd1koLTJ1SRAEYX8JLQ2CWxFBcNn8xGOuM0o3UbzlHrMM0MZ3XrDAFI18
5gk3GKOHaN5xnzkGaecHL7nNNE184Sk3GaeXGN7zgCsM0UEzX3kW3p8J+ojl
Aw+5yjCdtBBHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVUUkU1
NdRSRz0fecQ1RuiilW88Z55J+vnJK+4wwy9ec5ffvOEPDZx1xzl6maWOHmbI
p5ZupkkkiwraGOMSsaRRQhNDnOE0pzjJCY5zjKMcIZLDHOIgB9jPPvayh93s
Yic72M42trKFzWxiIxtYzzrWsoaLxJBKMY0MspoEMimnlVEukEs1nUwSTQpF
4Z9ngFXkUUMXU8STQRktjHCeHKroYIIokimkgX5WEkc6pTQzzDmyqaSdcUIk
UUA9faxggeURi30u9rnY5//c5z9JggG0
          "]]}]}, {}, {}}, {{}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl01ccDXQYBuCDyBYlIiR7y8heSfbeWaUIWVGZ2ZRQKMoeRXYK2SvRQoUG
pUJGO3uVPN/PxXPe7/zfc/HenNyd+zTrnSSRSDzgY2mqRGKC+zHKUd5bGn5y
r2U8qbnD2wm5nok8Hr8lDRl1v8gNTKIzFUhLJt1JuZFXeIKKpONO3Sm5iVd5
kkqk5y7dabmZyXShMhnIrDsjtzCFrlSJjdyt+1VuZSpPUTU2kkX3m9zGa3Sj
Wmwkq+53uZ3X6U712Mg9uj/kDqbRgxqxkWy6P+VOpvM0D8VGsuv+kh/yBj2p
GRu5V/e33MWb9OLh2EgO3T/yI2bQm1qxkZy6s3I3M+nDI7GRXLpzcg+z6Evt
2Mh9uvPyY2bzDHViI7l1F+QnzKEfdWMj9+suyk+ZS3/qxUby6C7Jz5jHs9SP
jeTVXZafM5/naBAbyae7IveygOdpGBvJr7sq97GQATSKjRTQXZP7eYuBNI6N
FNRdl1/wNoNoEhsppPtXfskiBtM0NlJY95/8isUMoVlspIjuhjzAOwyleWyk
qO5/eZAlvECL2Eix+HNxSCxlGC1jI8W9J+Fr9zKG0yo2UsJ7Ur5xL2cErWMj
Jb0n41v3CkbSJjYmbv2Pb+M790pG0TY2Usp7cg67VzGaR2Mjpb2n4Ij7XcbQ
LjZSxvvtfO9ezVjax0bKek/JD+73GEeH2MiD3lNx1P0+L9IxNlLOe2p+dK/h
JTpRwVtafnav42Uq+p6OY+4PqOROz3F3ZZmBKpTy/SblR4i6
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1GW0lVUUBdAHWIiIiN3YnYgt3d3d3aB0K90d0tKloFiodHd3d3e3cw9/
TNZe57zxuN/5zrupK9YrWDdRQkLCQf9MTpqQkMacljr6osQJCRVJwUp9BOn4
Sc/JFfNvdGSH3pRX2K/HL11srsRDrNJHkp6f9VxcNf9OJ3bqzXiVA3o9lpgr
k5LV+igyME3PzTXzH3Rml96c1xL//yz1WWquwsOs0X/kiLk9H3Baz8h0cx6u
m/+kC7v1FrzOIb0By8xVScVa/aLsw9eM1o/KDnzIGT0Tv5jzcsP8F2fNPfic
rvoe2ZI3uCuJzygPW78mB5KJb/TlshqPkNjPjZTrrF+SfXnUWjqZTE6UY+wd
kx3j+a19JO+VY+VT8qz9W+YhPK5nk8nlZPmszGz/V3O+eH/6zbgkcrj+pJyp
nzP3jM+kfyGTyvGym729shVvcrf10fKI9etyEJn5Vl8hq8fnZ71+WfYjPWP1
47ITaTinZ2GGOT+3zH/TnX16a97iqN6QleYaPMYGfRxZ487qBbht/oceNCJb
3EfrBblj/peeNCY7OeK+2StEArP0XjRhlV4zzpKN+nhyxn3SC5OI2XpvmrJa
r8UTbNInkCvuiF4k3jFz9D40Y41eO86ezfpEcjNTL0oS5up9ac5avU68a7bo
k8gT56UXi7vGPL0fLVin1+VptsZ3AXnjfPTi8Q6Zr/enJev1ejzDNn0K+eLM
9BLcwwJ9AK3YoNePu8V2fSr5maWXjLvJQn0g+81teJtjems2mhvwHDviO4gC
zNZLcR+L9EEcMLflHY7rbdgUf0c8z874DuKEuTMfc14vyBxz6bjLLNYHc9D8
He9yQm/L5ri/vMAu/YrsTwam6SdlF9JyQS/EXHMZ7meJfl724kt+0A/J73kv
zs/fzBh50voNOZgs8Tn0LbIhqeO9+7lRcrf1q3JA3HdrGeUDclK8Iznd/ilz
V1Lpn8SZyXHxzuVF+7fNQ+NO6tnlg3JKnLksbH+euSwp9WRxp+UIudTeBdmb
r+L5rE+QQ6wflu14n1P6zXhWssaz6ltlI15kT3xfctrcjU+5pBdhvrlcPBPL
9KG0Y5vemJfYG99ZFGWBXp7kLNeH0Z5iFKcEJSlFacpQlnKUpwIVqURlqlCV
alSnBjWpxUL/R4U4L1bow+nAdr0JL7NPn8EZc3c+47J+Rw4jBymc29S4o7K2
vf8Al2kANQ==
        "]], LineBox[CompressedData["
1:eJwNw2VWlAEAAMCPxy+OsYSElCAtJZIi3SCxgILgLh0u3d19BS7pzHsTCkc7
InFBEMR8TwiC3vggCHnmP2f8aZuN3rrrghP2mei5MWcdtt0m79xz0Un7TfLC
Df86YodPHrnqtN+9d98lfzlgspduGnHUTpt98MBlfztoilduGXXMLn/4wWu3
nTNsty2mmma6GX400yyzzTHXT+aZ72cLLLTIYksstcwvllthpVVW+9Uav1lr
nfXeuOO84/bY6qOHrjjlkM8eu+YfXzxx3VdPfbPB/4hIMOA=
        "]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0nVglWUcBeBvbGOM7q6hYksIFmCgINii2IldYHeDTdhJd4zuGg3S3Q3S
3Q0+vz8eznnPfe/Y7v2ymrVo0jwlSZIc/2RnJkmGLpL2qUmyKy1J2nELeVhv
m0lKepL0cH6EihyxdWC3/iMNyGSDrbi7o/TXqMEsWy5bT/1RKnHU1pE9+k80
JC8bbSXcHa03pyazbam2XvpjVOaYrRN79Z+5lXxsspV0d4zegiuZY0uz9dYf
J4vjtsq2qfoH1KOzbZ/8hUbk50J3ZsvP2ez1Us5j9depRTXnxfJb5no93bmP
/gTX6GtkFS7V58tWnHAvy3ma/iHX65si4/fVl8u7ZOv4HuR22VR28b79+q/x
9zo3llfJVfIeWUBeJOfI2+UX8kb5n7wv0vtLy3HOjeUbsq7cIGtTXV8iv6O+
vlXO857cel/9Sa7V18rzuExfIL/ipHtVnKfrH3EDXW0H5G/cRkG22Mq4N15/
M35/5tsybP30pzifU7ZuHNR/j7+HQmy1LaA7PThk+4M7KMw220Ly+HnZzk9z
AadtPTms/8mdFGG7bRGZ7vd3bkZVzth6cUT/K74PirLDtpi87g9wfiaeEc7a
enNU/5u7KcZO2xLyuT/Q+dn4jjhn68Mx/Z/4/ijOLttS8rs/yPk5Liahr/24
bM+9lGC3ray7OfpbXM0yWwHbYP15LiGFfvYTsgNNKMkeWzl3J+hvxzPLcltB
2xD9hXh2yUW2/aTsGM8TpdhrK+/uRP2deD5YYStkG6q/GM8JqfHM2GbIj+O5
pL97p2Qn7qd0/K3uzJVfss/rFZwn6e9yHTWcl8rvWen1ws7D9JfidX2dvDzo
C+XXpMUz5fyv/CSeTX2zvIla+or4vmQb2UDukAP87NOyM41sTeOzlavjs5dl
4nOV8+LZky3j58kt8bfI/d5fUU6OZ1++J+vJjfHZyzqyplwWz6L8Qd4st8lV
3ltEH66/TB19vbwi6IvkN6THs+08U35KfQZ67xnZhQcoywFbJfem6O9Tl9W2
orYR+itUIzeD7GdlVx6kHAdtaxjMOeduPER5DtnWMoShDGM4IxjJKEYzhrGM
Yzw5TGAik5jMFKYyjenMIPE7dvf/PEwFDtvWUcw+0vlVqpNBVdss+Vl8ltR2
Xinb0lDfGZ9JPAfe/z/tquh6
        "]], LineBox[CompressedData["
1:eJwNw8VWVAEAANDHggWfwS+xopGha4aOoSQlpEPpbgakUwUUEJT4JO895yaG
IknhuCAIosYSgiA5Pghu/OaSY37yo4+euem0g6Z464HLjttjm388d8sZh0z1
zkNXnLDXf14bc8F2n7xw21mHTfOXR646aZ8dPnvpjnOOmO5vj13zi/12muG9
J6771c92mWmWH8w2ZI655plvgYUWWWyJpZYZNmK5FVZaZbU11lpnvQ1GbbTJ
Zlt88NQNpxyw279eueu8o7743T0XffWH+77503db/Q860Es1
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0mWAFlUAheFZlt1l6bAVZRG7FexAFFBsEBAVBewCuxUbTFAEu7swsbs7
6Ea6u0HA5/x49z337P1m5kZVj17te5YURTHAn8GVRVEql6GqvCiGCuv5dZyL
vVEP6/T1K4ric/laHImmGKbfwG/gPOyD+mhi7u/cFydjvXkNdF/I16E1tsXw
vFj/pnw+mqMBqnR/8N3oiA3mNdR9KV+PNmiGXXSjeADOxAjzSnRvyRegRdZg
PJEfR8N8t/GffA86oUAj3Vd8A9piX+Mp/DS2w67Go/lhHCUv4244VJ7DL+ME
eS2P9A3V5MHyhWglL8gzsz/yJO7MT3A7XsFduVH2hP/KnvG9WScv4dO5Mx/E
M7kLv8DH85qsnUt4I/6aO/CNOSdelG/GfvJUfgbHyqt4e+wmj+GB6I7DjOfy
KxhlLaXGb8sX5Rl5R/Ze9zffh1NQDRvrvuGbcDR2wGi/r65/R74Y+2ceSjHG
/8r87135EhyATVA91n/LN2ePsCPGml+uf0/uiQOxKcpi/XfcG8dgJ4wzv0L/
vtwre4fNUB7rv+dbshfYGePNr6H/QL4UB2PznL/uH74/+46K9Lof+FYcl3uI
CX5fqR8iX4ZDsEX2WDeUH8CpqJFe9yPfljPM/cJEv6+p/1C+PHcLW2YfdcO4
H05DZXrdT3x77l321XgaP5vzxO7GY3kQemCSZ9fSfSRfkTNGc+N/+UlslT02
Hs79c9+yfuNZ/CJqZo7xz3wHWsuL+cScmzydn8teyKvzfuwhj+NO/EjuBC/n
s9BSnpf94FfzHP6Pu+WbfGtt/ti4PV/JR/DCrJ9bcguenLvHT+XMeSWfwY1z
/jyCO/KD3JaXctecizybX0ItNDb+he/ESblXxjP4+awBexqP50dxNib7vjq6
T+SrcDi2zh3SjeSH8h2onV73K9+VteRZmOL3dfWfylejFbZBHUz1v2mYjhmY
iVmYjTmYi3mYjwVYiEVYjCVYimVYjhVYiVVYjTVYi3re/Zl3XZN9RRPUzTfo
f+M+6IC9gm4CP4Zzslbj+fxa9kpex91zdp77PzxWyHM=
        "]], 
       LineBox[CompressedData["
1:eJwNw2NWhAEAAMCvX72O0ZU6QuZubbZt2+Zm2+aFmnlv4hPDCaGYIAgiRuOC
oC02CF48dcNpB03y3gOXHbPHT6/cccF2Xz1z0xmHTPbBQ1cct9cvr9110Q7f
PHfLWYdN8dEjV52wz07fvTDqnCOm+uSxa07ab5dpppthpllmm2PIsLnmGTHf
AgststgSSy2z3AorrbLaGmuts94GG22y2RafPXHdKQfs9sNLt5131G9v3HPJ
H2/d99c7/2z1H49USmA=
        "]]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1He8T2UcwPEjxLVukWyR0DUj2VIpGoSLEilERWWHoigaGkZalIwSZWRU
yIxKSyp7z7Ky9+79/eN9P88Z94znPK9f8fZd07tkSJKknT8zUpIkV9YkuZQl
SQ7oeB6nJkVZY/9mfYcHKUsqZ5hOTxpw2Xn/6QSeoBbXsdb+LTqSlpTjKs7y
Fb24m4SDfMqT1KYYGTzfHO1PE9a53lZ9l4coT1bnLNJBXM05ZvAs98T9HP9J
34zrcYjP6EQBx1ZqHXIaL9PXKW68LsoVxnM1TV/QIrpKK2lTzaO/xLPoUL1B
N+rNut7zbjN+j1K2W2k+XaEVtIKm6GIto4Nj3nSN5uY8M+lNIfv/0nvjPY2X
61vxfBxmIp25levJ6Jx5+iLpbPAs2/V9WlMxnj3OY6NjO/QDHuYmriETR/ic
p6hLCTY5f6d+SJuYC/KSmaNM4mlui/lgs/N36SgeoTLXcoFZ9OE+ruQYk3mG
2ynJFv+/W0fzaMxtzCMXmU1fGpKF43xBF+6IeY/3MBff6QCasdX1/tGPaEsV
sjlnib5Cfi7xNc/RKNYZJ/iSrtQjl//5QYdQOt7f9nwdSPOYQ9u/6jC2uee/
+jHt4h6O/aG3kN34e32VYsZrtQCX+YYb7XteC+vf8X30/lgj+rOW07fj2+iG
mF9N0ZNMiWez3U0L6p/x7fVOTdUftay+Eesm1mzcL76F8QJ9iaLGq7VFfGfj
33Q4273THh1De6qSw/Gl+lrcj8T2t9qPxjHPnGIq3bmLNHa41l79hMeoRqGY
G3Y6tk/H0oHqMRdxL3bF2ojvGfMbzxPXifPZH79r8dvEQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5ENdyr3F0pAZFyMlpptGD+pSJdeidF+rLPBBr3fbvOiLWs/Gm
WHN60XX/B8W0ugk=
        "]], LineBox[CompressedData["
1:eJwNw1NWRAEAANDXZ8toE9k2Jrsma9Jk27aN33bYvefcuPBoKBITBEHUv9gg
iPfWXeccMuybZ64btdUnj1x2zD4TvHPPeYft8t1zN5yyzWePXXHcfj+9dMsZ
E7133wVH7PbDCzedtt0XT1x1wgGTfPDARSP22GGyKaaaZroZZppltjnmmme+
BRZaZLElllpmuRVWWmXIamustc56G2y0yWYfPXTJUXvt9NVT15x00C+v3HbW
b6/d8ccbf23xHwGOOMo=
        "]]}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{5., 0},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 21.213203435596423`}, {0, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.3242640687119285, 0.3242640687119285}, {
   0.1478021892114031, 0.1478021892114031}}]], "Output",
 CellChangeTimes->{
  3.662404459246986*^9, 3.662404598895645*^9, 3.662405222464849*^9, 
   3.662405718428056*^9, 3.662406297584968*^9, 3.662406330339636*^9, 
   3.662406417572104*^9, 3.662406805347022*^9, 3.662406839001141*^9, {
   3.66240688798071*^9, 3.6624069126876163`*^9}, {3.662406984717441*^9, 
   3.662407012861548*^9}, {3.6624070836417437`*^9, 3.662407106780003*^9}, {
   3.662407909635324*^9, 3.662407928564303*^9}, 3.6624079656102057`*^9, 
   3.6624088419917307`*^9, 3.662408907167906*^9, {3.6624089455614347`*^9, 
   3.662408976175329*^9}, {3.662409014175234*^9, 3.662409088225396*^9}, 
   3.662409224178812*^9, 3.6624105841259403`*^9, 3.662410646600896*^9, {
   3.662411258379698*^9, 3.662411325108368*^9}, 3.662411411686612*^9, 
   3.662411460658895*^9, 3.662411832776853*^9, 3.662754828152622*^9, 
   3.662755118997655*^9, 3.662755189829032*^9, {3.662755219952276*^9, 
   3.6627552330088873`*^9}, 3.662844577584013*^9, 3.662845109814867*^9, 
   3.662845252658106*^9, 
   3.662845545070427*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysnQd4XWl1rk88BYZhBkLnEmAIIQncxMkNNxcSMjPu3ZZ7lbst915ly02u
kixZzbJ01Hvvvbv33j0MMJQBZpIMwWRwYIB117v23sdHHg9W7nP9PFuSj472
3udf7VvfWv/ao+euX7xwxdz1S+bPfWno2rmrFy+Zv+6lIavW6ktP/YnP99RL
Pt+f/OdLPn4Wn8/78si/r/LlfS//0Vc/a9+e0i/vyTtvv6NfxVcT9Nr9+/ft
tWr3tffee8/+/L0H7/n6POZvy+21D9trznvfkwcP3nMvGjhfnXe6++/IO86v
ff/buaPP2LdnRN65JKv7r5bCwigJWV0uD/TVKu93770uq/Uj9Q2LlMjwcKm9
c9/93XNypzmKxZGo8rNyn9cec54y9736S2mOCtX3h0r52Tcee17nvR8Refu4
hDgL7x6r5Y7e+aXs1RKWUCgJYaFSeOeB+yk+bd+etc/cHOaTsOa3bQWOh/eV
1c1vVrsf5P47992leUNW9w3jhL7KwM3dl6i+IXL2gXzQadzl1vc+OCv9+ybI
A/dsjzuv90HuX8+W0MhmxCD3Xz8uncdK7MPYme8fl76+cHlT5JuPfpC3JbJv
f+l8xznvpYS+4os8WxvQgQeS4Pw66AO8Iwn9Q+S43ctj/9z9APr3989KSN8o
/QvnbI+e0/ugb9SGy+rCO3aOd45HSt/w484JH1yS/r6+cva++B69cz11X19/
fhX4s/6RZx0tf9qW9rqe1eezZXrszT/+DI/cfILdfJ/Hn7bCtYvO8BBJuPSO
XIrqK32jLrlCetsErZd636K/o795uGrXE/qzatXuNe6UhwfUMfXs21WBW78f
tO6PPYN768+Y4rjrbv/0lPoRcC5PcUr3VfGV2Nfn1e4fiGfND64niC+kXH5x
Nkrl0PlEOag4C0PQ4TftnehzwBSeVrVMlZDwWnnzvl2h0tVWcy5vXpIwX4i7
/o89S8Ci33sgb17Klr6OOOzfI2d2DUE/yxu1Ep7qyOCN5tXi429eLzRjsJO/
Xas/mzF4nyXgnO67TqXccSr3Ay7yGVv+7FDPSYTK9Qfiqwh8mgdypzNblygk
oE2POVfA57z3tnSqf/H1f/hpHnP60qC1Op4QGtCJhOPOGl33XFRoiLqo+66L
euj6H8g7jr/w1Xuv6TK6XttX28v3lbmvoSLea16IeKB+/r77mnt56fnvj0ap
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
LE+Rtq3Z74OG6QcHyO2rNYElga2coild8JKgN3gMCUa+v/u93dyh2npNwpwl
Kb5epzneIhmp+hFZvystSI2ITnEaQXZolCCCzC1ybBEEOUR9GpdcrFCCpOTg
Cb9k6rJU3W71fctlrVBn/MKB0lpZm1hmUWTIggwZGZYjK/fUS0LuKWnoviN3
vvc2pRtbgI/0cmlqN+dI3fLkHhE2N36MXNKkJNjd+zW6UW4JXhrUGl8QvDS8
Nmub4+6/5poZqBnyhIwZyuyuJmO5QesDoRytS08mTXI2242w+CrKOZN1vRbX
bJXw1mjDTaiN+nvf/3HXp+Jyp6Q0O74KvYH16zfTL9PWlkhEfJtkV16UY+e/
Lz/4yTu4BFuFp3u5Pk17SqVsZlSP9SlOniEnND49Gg5BEGU3GgPrg+njLznp
IPdCqrvmyyHzv+aqDp8HIh7S6NzlirIgJoGlgVuKqHWWZk5gaaabOGAZ4amw
KEJh6vlCL5n4pluUAFZSQoBN2HSkXOZHFhq07D8z3XBIeKw6m+Jz0nz8ntx+
/S1599e/8f2+l6vTfqhO8kK291idCkontRE9fA3O9fDZ/B5OmgiDdeP8vNVB
elTJeMdX3dVBe8ihWF2NZvWPWR1SMAxrnhoSuBx/A1AY41YRVqk/IkbAwcIU
Kuj+B3d1qM2xOprkG2m4eH+xJdz9NeMatyzfwDegoartply6+ab82y/e9T3o
5eocTW+X9H7reqxOXcYGqS1a2mN1IAyhiINti3gLSOGkA9wLwUoND8uQOvXE
3urkXq403YGCvnqttt3lJT0IkKAmQzqyqTrcIiWJK44b8AoMwPWE6e/WN++z
KAYcgYuou9PuJr0vWpSEHznc1GjmvTK2VKZvzjMXBC21WFU8MrlTMisuSOuJ
14ye+sX9B//Ry1U6nt0tGYM2yq3Kk4FVasnZJSUZ094Xr8DZwasEMvGcs7dK
UzYYvg+qBz1tH4GMjMRte+12h6l5Qe7daFT/Xy03L5XL9QvFckVV9LKCoYsn
M+TCiXTLHc8ePSxnNK6d0dXU7wpsTncl6grz2mnnNTmjaTzvO3s0Rf8mVc6r
E7+g58CJXj6dI1f1vNfOF8kNNfSbqn93rtbIvesNvklB0kp1WWTSDJwkySPx
BOH2c6U1UYW8wGWRdyFdvVf0WWOom6O+KNWabmR0tdgSYEosESnP4HnpJq35
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
TcJH6zEyZYoM12PokSkyWI+BqZOlnx6v6PEyhybqryZNl/4JoTLg0GwZGDtX
BscskCFRYTJk/2IZuneZDNuzXIZFrpJhO1fLiF3rZMSODTJi22YZsXWLjNwS
ISM3b5MRm3bIiA27ZOT63TJi7V4ZsWafDF91QIatiJZhy2Nk6NJYGbI4ToYs
OiSDFiTK4EVJMmhhsibEh2XA3BT0eeYRtU54tlErks1+n++l14CQOXWosofX
cMbvbOjhNdI74wMTjzyvQQMBO/k56TeDsAfdQBldLQGvQQcT/Oa1a7XsUzHE
f/d6vTVawdHSDnmv6azv467roD2azhnqahBZUNUdCQ2tdsvfMtAB4MBtdCho
B2TgMooKr0q2Am/cRUL8KQtYuyM7DTyAeQG3uAgAKWZNkAYQENAJ8gR+QADB
ntdCRudpWC8wN0Dgxg2ELajS+FxtQZlAvFHBCEGXIAtQ0ZBqAZSAiZknJ56R
tCPnJD3tvCUEmDUAqKTompoyCQVmfFsa6++a+Q60z/g3ltjcuvqmmu8bcvXk
d+Vy120z3XN1l9Rsz8rJwhNyLLvLTLYjqUGT+hpp3l9uyXt9BN0+WdbZW74i
SUqWHJSisL1SsGC75M7ZJNmz10rmzGWSHrpI/KEaEGdoIJw1Q/wL1FQXTxP/
8qmSvnqKpGtATN84UdI3T5D0reMkfXuIpO8cLeka+NL3DBf/viHi3z9I0qL6
94EY8y03iszosgODJP0Avx4mRzQuJh0YJfFRIRIbPU6iYibIvoOTZXfsFNkZ
N00i4qdLePwM2aBWtDZppqxKniXL9FissWuJf44s1GOuHjP9s2WaHpP9s2S8
f6aM8YfK8LTpMjhtmvRP89jyyfqzWqr+f4j+bph/hnEuY3PmWbM65TnKdDS5
zsxbLrNzVsucrHUyN2OTXiNc5h6JkLmHt8vcpF3qIXbLnLi9Mjtmv8w+ECUz
98ZI6O5YmbEzTqZti5cpWxJk8qZEmbAuWcatOSwhKw8r6k6REYuPyLCFR2Tw
vFRF5qnyamiqWSZMOMV1ymhYCAX3SetyrMRGEX72tgIryNNXx+Y2SnH02a1L
LLPyHHudtmVWWsmObSgMvyK/jquqt5Ie1W3Ke2ntzVbqY5skZT96+Oi8LbvU
wYYjawmqv93NnI4XeukkYHPp5Qp2Eo1ZW61wEuwk6J1gP0DB1eqAk+CWlu6s
7eEk9hfXyuztBT3Gc1BphfE+dbHMdRJP2z5qYAWdmLcauj/u7n+7nN1mpSq2
hTB9qGV/he87f6RsttR+93VzHLAA3V3f03h51zJ5snZ/2jnLPki1MWJNlQ1p
E+vnzCqzDAJsAH4gMyArIBPAQYD4wRqecwCx4xjAA6DvyJ2d5hBAzonxp+XI
4bMa5y+oI7gkRQVXLZ5XV97SOO44gDF2r1GKsH4mNy6o8R9/TS623QwY/omC
4xarO1Oape1QrbQcqFCjL5K68Bxj42jtg3SnJzhvcqRkT9giGWPXStqoJZI2
ZqGkTVog6TP0mOOwa5nL5kqmIuLM9bMka/MMydw6TTJ3TJbMXRMkc0+IZOwb
pZas8ThqkFtje9lIcH5O19fSo4ZJRvRIyYoeI9kx4yTn4CTJjZsqeYdCpfTI
PClKDZO8tMWSmbZU0vzL5HD6cklIXyEHM1bI/oyVEqnft2WukM2Zy2WdHisy
l8rizCUyL0OtNGOhzagBcWLFzpgVp5BuA0VUXaiZ8TuY2UmudZPjUpSn744i
/YrydbatjtG49OVtqYmQbdXbJaJyl0SU7pGthfslPDdawrNiZZP/kGxISZC1
iUmyOi5Zlkel2AykFQdLbLQFFjrz0cL4wgybsudZOcPzqYHRa4KFw4CxQ5G/
XbSvyHYssn2d3nesmj3ikXnVZhYxFXVmzWyBoWEPS2ZLTMHpNrNiZg+xHbbh
Trf3YJYnmi/QGygebL5sMaKpIpjdZt1iT6T3QPy0FDEMltFm/xAU4/l8md0t
AfNluz7yqDuVzZYmM19GabDPlIJVS86uj7nhnU46WmioKlNJpm3m5uUf/0sv
W2amuQ9TgH84f+7HZs2gYBAynAKc2gFF2+S80FtwA1jxJEX1ZAHk9SB/fgbt
k59jvVg7Vo/lEs4J5UAIkDocBcgcNE7Yrq+9Y9Y6we5lp4brt+TmpR/J1RNY
6w05W3PBkPXRzA4Nz43SGlNlJTR4dKyUojueizJY7rid1pZjm9wGrZJ0KueT
V0rW7JWSvXC5ZC9bJjmrl0jOhjDJCZ8vOdvmSs7OmZK9W3OufZMk68BYyYjS
kBw92EpSZp0xAyQjZqhkHhxppUJ2GpCjkQ/S2s4uYHZp0lBLYy07N9lkXJu9
XcpztktR7k7Jzt0haXok5W6X2FybOW37DNnWG16z1ab8MQoEVol5S7S8eA1v
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
Qwp6XKfnjxE6z50MVmO2j3oDnL0VZgAVzyvnpB93L4T3YoWbgzgCBpljiscv
lARW+PaVaquSnCt/6I/hXfHHty7/2PfNwN6MtyQx/pRt5cFr4I+9FWZnbt3W
PPMUqD4cg5qCp8N0cpCDOq2PE43YvHOtzltcHAUVMrrggHkbVA80F/UWl3IH
DW3sNaGSuyK2JOAjvtPLxQ0u8nuLyzQVHh0YvLjIlWf3BS8uBAxI7u732eXk
XIg9OMAdFXJAfZe5jxQLVl/6ACmnP/QRLgGjxq4Zvbu4T9ssK6h8OMySomsD
3XWFQGa3M0k//oFNKV0pzd664m1AEkVJ02ykBb6hIz/KmR2iuYemM0Rv/AIV
R3W+vj8Pwm3ENDp/2SdCty8P0+Dfy71cVEbZe4+49xaVlJcHsfR0vAftIYlc
+SWvdKgCnbyqiLJi4ELgNohhvbfAojLtAux58UpVYFHZq0lKDTz2FpXns8Nq
waj8g7uojASntgg7n5l+wVtU2gLZ0cHbqcBTkdds0VtUiu90RTjzQUKMxFJU
7Ckru8HovqZSiMLSZV99u9VTVp4hTiMRTfS0zJGewKXwr18v19U2UvdfL7dr
TgfWFWqtMG1Sj3V1Hm4802a2fcVdL2TKMKt3f/0bd5Cks1GL10rOtwea5/Ei
MW7a8VH3fNcvlFiIuVrTGFhXxgKAY6h6/C93XfG1DEqDqYqJOjbQA2zV560r
CECGi26Pr3e7AJ+RC5VlVtIA7zKEQ2GDz1PT9nMFBoFQU/p+9jfuCahp+aUO
S7dRU+yfAgahg38DnrCcE7zG1v/b3JvHd11d+f/5VsSu070z0+m+dzq10+/s
02kVtda2WlzGuhR3Ra2KKIIgsoVNdsJOCIQA2fedhCwQCFkgEEJIQGld0Upb
2tp2aIf5zfv7fp73Pfdz7ychn7f89cvjYWeCy/t1z7333LO8zjnho0rewH26
9uStCd2eMaLjP2uW73bG/6w1w0pl/g3ifJeKc0eF6CHYkCpOzYTjSugx1SiD
e/eRT9H4DEH2DSM3cqh0v9IUeOhdp43Rp+vQq9LqAJocZcso5uNVnXpWYati
HJC7wwrjcwO95XpWqRaBGIKByEGBgb9h1/JIuBeLPUtWgrQ+TQBsbO+7jmQT
fH+VJwqeUZrJXjEADndus/Ikh85MIz72OSMn+HXXjpd2SMYvHCUBIwKsPJy5
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
49KCRT1vyd8625cRpF26gaLbpMrIx5xbDV0vNBDtKqDO8Wcu4tLifplZDAVP
/4ystlyS6sQliSojrxQ1pKugCTh+1fSKZ+0qinqaZKqYzUGc9LekcnxaMHZD
Z3D23Olgw5i04NKMnvNvyQQDiHIiqGmDVR1QRCKxztghIcKBI6/bLaFNFbEm
V8+KXRcaSLwViRu/V2zXfbuW2cV0Gu93WnnCpSo53CzJotlbDc/lZ/5iTuZG
VarTFqUH6RmVwelzI9z8Cc7OyLSHWTlwQiKdWbBbLsvBxqNexQqBJZckTP4L
o73siUzv5mPbF6+/3y6m28QoppRNs4uhDx113DM2Gxb8z93FXCS1gBND0Olt
Z+yfDVnE47ojoWMkO1LZAUEier1rusSYrZyyxVomc+c0S0zC3REyQUQIeUjt
WLzQ8pEZ8kdr07S+AGKVmVlpFwFvDPby1A0mffditAhb0Hj2ZJAxbkwwflFu
0HPqrfNuxuPOZmDINITXRNdBXB6N5r4bA8feFIeW3qIfsWo4aoJNesJOS906
Wx4/rBBdBxOoCPFNLEkEjBjzQvnL+Pl5EbKXonW80wA+e+ZUcOp0NH3+Hedb
xETdjFW1VmP9mwECRVrSbeH10M1YsWyv5W1YtkroFzCqce/SYrsIBuBKsKlt
o10EbGJm1kwofsougsaXP3lmezBhWWGE7OVoEed9wSe6Ug9Nh5on1sNacN6L
qdJ2Tv3OW27ODYoL+zzAOjvETfZAT4Caw+OngClfu37rvTSzMoAj/jukb4pm
NL2dCvMT+iys3xm9ZwU0ZjbXNj9KUHWUdVnMmRu6hdeOXaeYdaAH/fJVyPB+
yOuC9sMG89G+ailKeqhwosVMhSoNvyjFVKbkKykwP6lhiScyg5J7I/PsHzUX
XdYuNbPhAbGhmXvvLgmyNnXLb1qhQ3yeg7FvWSItAwVKnrIjlRYzxcd0U/lp
KOevmIMBw4UxvX/687kI2asxAZNUkV6U66rT/kE3V2bBz6VtmgWcu71XhhPA
vFUhaxzKPRj6avWGr9aHnSwlaTxYqaFw9TAztxXqA7NTBdlrKTBPMt9lQDK1
rpiU33SC/cS7+Cs8CAobpunypXs9OWsLBsLOCpvyJizSfbuW2/NMDRh0fqaR
KGYGRaHSf/vW2QjcqZiYVe2FRpvBHDkpqD0q+BVwWUlkHRzqSWRRpd3dgnxP
ziQ2pBTMOcwUoKAxKgYbLeAF+ZViHfzyzB8iZK+nAPyUdbAbJNRLxcc3nIwF
7w0VBRrEh3A+a+YuT8IaAeK9UcA4apJTdU4yXRGxAIr76yxgJmcTvTr15u8i
ZG+kADzZBvbzgm1jZ4oN9XUNYdy9TOwqvCoFDA0Eptm+vS9ZwHQlliK60GSx
4+2qm6PMRujyKeC51eliEjO93qZYamvFSfn5qyZW84uYgFUnVz26mupT+SgP
yMZvP8EMB5vbmj+3Raj9roR5MYm7RP9Wwiwhj1eW+agFvLMzcgM39xT5ScrQ
DRw4aXJCb6YAPEU9qE1NIs22JUUm/hAN61CjUDP8BDPr607Ibx80f8Zjw3HC
fLGD3zInCGCcjg85cXYkvKZzmwUs+f77NgWHB05FyE47gBOZg6ed+01o6FB2
I+0RIt3/QIZ4q0ygcZskQupyYVINIjp4eUlCpW1/ztYffsiae2XRtKuKRMic
FlZe3v6XKeQ61XyUAjO6UR8tajNx11Fi2uGZIt9jvaeU98L896zMbg8zJDwq
WNyzAIeJNNqenYss5iPh+wx3kJYDihlyFrfNEmF+FQvzKDm8lOlChjlWuk+z
GEcL94iccazD90xhFxceFcuaXJLCpt2GdL0NfWrbUn3jw1EBQQhYC4QHwueO
EvSHnFx0sfF5FuQZn+fXKWBPc2CX/HSt3LHwXdbMJv2jMCtoX/VpR7Gpa6OY
8eVIAriibjTkz/5DJWkaOma4Ln0vqIUOXzylPjComNfDsvjPpID9jCttjPgf
zSAl8Cnn0UMnc7HqFxQrcogN0v1z988tchkgyP2r2D/kkECm00NCG/xbto+X
drAKG+4lHZOtC/CbFLCnO7AlURNqtSP5rZ8wsHtzW2TWCH/1db6o7eJ5pxll
4wpcerfMz/METsw2+ZBA8sL2pB23bRc6EBnLj68wxvJvU8B+1oHNE0Y3yo7V
lX/tSJtN4NCGHpfODyFKV2DCpR9w0jfQSFzmunTOWho1G1DYjH9kpjB9C7+U
ZDLT4EpN5lTIZ8h3LxbklBTJALYJ0k/ejMgdJROKiKhQDda77wWFT2UsMTuy
Tx+wWvC0wO9YU2mvJuQebaGh3Q6YsIGyzu+rsvCxnh9+Lj+ynk0fu9+lgD/L
CL51Y6M46lt/OB0r+MMGeeeaSjE7+CuU7BcMSvon4GC5gqddN+66e14IB3HM
yUUoctp18y5uDS+tKhXa2d4+1bGh30oBe7Z8dLSReomYPBz1tsVF2NDvM2kJ
EkZksqFNoRsJ9oQmqi7jSO8bYvF1d71ql4GPyD9+ICsxgIOum1Ir0L7FLkND
dG6UF0o/U4n+8EdjVv8+xTKiYopLZBnkP2Q8e3jGaXvOUmjWEcUJLxFebdf6
6qBh2mZZy8bvPCk2DA3vdHAifEYGL7n7UjF5ixT0ufuCCUs6gqVocxGIR1yI
GU6Ybu72cokJ/eZ3/xUh/0OKBUV9SN4tCyK2CEEKvwA/J/OyJyWnQNvd3JvT
g+wfPPMOVhEeM9aDcod/GW6Ajlkl5VVaclR+e7+TNkCbYi/qchpy5kk6hPSP
LodWErhqCZf4IkKnwhn+xS9/H+H+Y4rlPOfYi5D1GVr6DhIGxtbBUuef0CaE
lPoQOXFvNF32qYgFaqJNcrfkq/buWmYPFG3sKBGh3bPqUZKREDdePmWoAP+V
AnCT+ShkpuXmgqrkmAQtE5hyW6zkIpLzjd5BQDNCZnIVOnXEXrLwbAogu8xH
mQbLFaMvj0pE2VeuRAblisG422qBoCm0T3kyAfXwgMlo/ckBkjBI9fNLF7cJ
98STw6FX5SE5WuQ0Llj/gAQp+LA2Yeo6VCI3nISay8zG47CG5p9jyoFQVEH+
EQ8ITjw32JVD1FXhKiqkLJD+vhqhBMJVUiAE0MkGWIr4f6cA0qh2VH7EBuOI
Won0vhYxP/JbrURIvzdVzfIkQhSBFgNuM2wNG9sY+LmYQJ6ZujOYP6/FkwgW
i6bYVCLU3MvQz74aC0SaR+XcJ/EBBVJhoqXPZpmQ7/+kANLgxJl5hlubf5bQ
MkffEC2DhWzLacNnWHulv895hikYxYpQIIyWpdx30uqi6Iv/X0wgmzZ2C+nX
lUjFlC3CrnQlQv0vkSkGHCoQ0hPclS2ht2lLk0Jz5s4Z24NHlhTYnnhxsTz+
WFWwamW7/PYXjm1C9gr6uJ0HkHE9mQVBoY0liZJBz51cNi1Ryh7aJswxZHaQ
mlb/mwLLTnVXjiZ0iMqlesYOGZznygXueGRt1Fu5RM1Bo8nNbh88ZHJnaA1o
QVOQAkuVfPedw3Vs4O8IYTu0oD9gHnT4UftXyVxK+UtI0CG0jpZVFhpdW3hw
iRnp2aGd/a1PbwvO/ulcWgLX/0kBrlJj40O6aoyyXTVwX7M3H1T5EaXFzMFM
foe11qZGrQCcvaQgTK01BckeYub8Xs0c+XlHCpAV1kUa2vfkm39/S/DdK7Nk
HtH7jQhJ4DXN2uaJkFNPoP69ziPPSZta/oxFR+Mben5Ym0V+LoqJzu1Mo+i+
/MU7g7vvzPHuAsaNkmB8+d3oyY/xEjS9Tpy/qGsFyc83f/V7B+GomAjd5kGK
8J/+IT144vENDsJLJA5Q/djapCN4rVAVFB2cEVKzjHpQdNQWE5d49Y3fOugu
vgD5XWT+9xMfvzL41r9lBNlbqqz8iLjjO8PTVflBZ8UqApv2wyZygoJd37XD
Ilxjwn6Wzio/oy/g/CnCv/3Kg8G//PMk6b+iCMm5qj+jCMm77G9Z5SGksyW9
bcH2eYMw0xQj2Dif/Fxywdf4ouA/vrU8lG2bt8MEp9tXlNkd1nfheaftPqVz
5BV5KT+fZEMdOnbKQfdOB13CkKoy7q2r956dXhiMvS7H6mJpiPK9aRB/raRg
oO1JGgtKWo2pO0REFcuQyJ38vCuFpGrNl2kttHSJLxVaELl6A4Y51FSyrSoV
Cs51z3RoAfwKIYtoxzD5eXcKJDVqMByLAj+EtvUEMcoUHUE7TJUL7Lymqpme
XObXzJWIZtXxJouGMJsQJPIrHTTviYkG3tztt+Z7ciFJSsGsyoUuxDJ073BZ
YiZ0X7UgWRfeNkVCKn3sY9kJXoD8vDcmkocfrAg2rO90kIwWZ53AgiKhSWvB
2jt1c0j+qJWpQxSYV8CTYytZ5ed9KUBUO34+zwuZHRUHUTk5tKFaVPUITeJg
+2YrDjqzox7pzP5Zx7qjS+yTGUUOkr+IiQR/RIuDVBwOtVn+gluXs3KsnSzT
Xy89vZbu3WRBqGVn+63Iz/tjgiDSl2uYpO9zwh64AGR8h7vD7zJoaCFJZg4c
n9Gw2YndwX1zcsW+05lVsQBVqdlfckxi1FCldH/IKRn1K3/ROZ/sJmU3CuZw
b0XShInIuCN+d7cTBJOfD8QEM39ua/C06RSgW4QFTjxGwVCUWVfylG4RkVtV
JzrpYkJyWlh+PhgTxLjbCy0Z4H1GIgQbqDI5XtUpICACIBEqTFQiTGK+2sxG
VCThIRH6hU32ys+HUiCpdPbm6quynL0ZLU5JxcMZVhykysPDouIgiK2jkD9t
QND7iA5Bv/v9WQfEhyMQow0InMczp8/gQqaNSgWMxhy0jXH3ibB259oqCwyW
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting functions", "Section",
 CellChangeTimes->{{3.662836257103595*^9, 3.662836263525779*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ind", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"SabA", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Max", "[", "nplot", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "individuals", " ", "in", " ", "each", " ", 
    "plot"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662836328554887*^9, 3.6628363617689257`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Nu]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]2p", "[", "L_", "]"}], ":=", 
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["L", "\[Rho]"], ")"}], "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Lambda]"}], "L"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"0", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}], 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", 
              FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], ")"}], 
     
     RowBox[{"-", "1"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]2", "[", "L_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", "ind", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"Nspecies", "*", "Lx", "*", "Ly"}], ")"}]}], ")"}], "*", 
    SuperscriptBox["\[Rho]", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "\[Lambda]"}], "L"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"BesselK", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}], 
          RowBox[{"BesselI", "[", 
           RowBox[{"1", ",", 
            FractionBox["L", "\[Lambda]"]}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}], " ", "+", " ", 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"0", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}], 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             FractionBox["L", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rsapres2medp", "[", 
    RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", 
       RowBox[{"n", "+", "1"}]]}], "]"}], "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", 
      SuperscriptBox["2", "n"]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sarmedp", "[", "L_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"\[Alpha]2p", "[", "L", "]"}], ",", 
        RowBox[{"\[Beta]2", "[", "L", "]"}]}], "]"}], ",", "1"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SAR", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Nspecies", "*", 
     FractionBox[
      RowBox[{"sarmedp", "[", "r", "]"}], 
      RowBox[{"sarmedp", "[", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
    RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SAD", "[", 
    RowBox[{"n_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Nspecies", "*", 
     FractionBox[
      RowBox[{"rsapres2medp", "[", 
       RowBox[{"n", ",", "r"}], "]"}], 
      RowBox[{"sarmedp", "[", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], "]"}]]}], "/.", 
    RowBox[{"fitcor", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"upRichness", "=", 
   RowBox[{"NsppSamp", "*", 
    FractionBox[
     RowBox[{"sarmedp", " ", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "dens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}], 
     RowBox[{"sarmedp", " ", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"samp", "*", "Asp"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "dens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"UPdens", "=", 
   RowBox[{"NSpecies", "*", 
    RowBox[{"dens", "/", "upRichness"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"downSAR", "[", "r_", "]"}], ":=", 
   RowBox[{"upRichness", "*", 
    FractionBox[
     RowBox[{"sarmedp", "[", 
      RowBox[{"r", ",", "UPdens", ",", "\[Lambda]", ",", "\[Rho]"}], "]"}], 
     RowBox[{"sarmedp", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"Lx", "*", "Ly"}], "\[Pi]"], ")"}], 
        RowBox[{"1", "/", "2"}]], ",", "UPdens", ",", "\[Lambda]", ",", 
       "\[Rho]"}], "]"}]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662836430787507*^9, 3.662836564126095*^9}, 
   3.662845315546027*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"SAR", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662845323905514*^9, 3.6628453352031307`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwt0ws0lVkbB3BRCoco1ejCEYM45zjnvFNR9P7LJbeUeDVUynGdQqk0ikpC
KZUayWUkiopyiZpB5ZJIboXJJSZfkojQOUK6fPtb63vX2utdv7X/69nredbe
mqI9m72kpaSkKsj63z/lqEhW4Jm8Rur/X2Uz224L+xC933F2gOziCvpH1aMT
bHY0zcoNSdUy7qCVLt7Pk2+7SE/z9nZd+KOHTik7qzGDnUh/sCzsoe7105xh
z3M/fFLpI9HP36tlfqS7lK58/9qaTp9VvsLsiBqltTPlVnyZyqBFEuN/fo8S
036mQf7jGrdoLxXBuwm3Mbqgpfu6xOw2nZyUpN29YJz+stuuc9Qnl1ZylgT3
35+gzesv/Py59S59QWKtF/DXFP0+YX255LdC2rrp5pMi9W90jOe3beKpe/TF
3jm6FsHf6eYp37gRjSL6JbvkqHGEFA5Wq/OH84tp44Yk2Tr2NCz8o6V2yOwB
vXy58anZRdMg0ofMB59S2mGxx2r8K43g2wpFn1oraLU8tYH7MjMw89Ub3SGN
Gtrub/umk+9moa3sYdDg+xrawdcg9/pWOWRlJjz+kP+MnqdF++1vlIP9Pvsd
A2Z19F+vmXb/AnnEyxXH9/k00nI1CqtOBLAw58+n0qOtTbTtWWrl6ZLZSHuW
GvhBo52WeCSPUOI5kCTc038d004rtTrceaozF5Y+tT1Nk+3032m+uzmuczEo
M84UN3fQNzMlNr5lc2Fkar8q+mQnrbvo+5vu06p4nvtVWnf4NX1lr1e9mtp8
HHvGsRHs6KGvJOYPMUvVkJMb/cqPN0Af+CnolqGSBnzoF4mD+8T0t5WXUmXk
fkZA77KewpxJWnd9g6QuXh/ymhG6r42k8Ee1WCFmDx/nlGv103bK4Ooqt8rH
RymIXjmVytTJIr2v4Ne6kRUIfBIh2qMrj88Wy5zc96xC/l6W40/WivjWeK/l
8hNTpIXsHuBvUYZHdc3Y3CIgPPWrg2RQBSGLFQfp/esg1dyNB4fn4mbTSte1
2ubQOeAd7KQ/D6dSzzvXjFng7dhlZ4WH8/FnZe+GqqvrYdO768jFwJ+QP8gL
kfW0hv3bWAN19YWY/OvU/nnKthh4LAp7emcRbpdOW7r/vB14Ki+XmO1YgoMz
kyKyF9lDnh5z7xSrI9ooJMX30EasH3IdX8qw8aJ/5G1kwCa0VXhOc+VoYuTx
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
nYK9vQrrDPEjsc7kjx8U1iQtmn2B+L/sm4+T
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 20}, {0., 87.75885369964178}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.662845336136422*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 980},
WindowMargins->{{1280, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 210, 4, 92, "Title"],
Cell[792, 28, 373, 9, 81, "Subtitle"],
Cell[1168, 39, 182, 5, 49, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1375, 48, 107, 1, 80, "Section"],
Cell[1485, 51, 222, 5, 30, "Text"],
Cell[1710, 58, 1455, 37, 63, "Input"],
Cell[3168, 97, 231, 4, 30, "Text"],
Cell[3402, 103, 1975, 49, 97, "Input"],
Cell[5380, 154, 185, 4, 30, "Text"],
Cell[5568, 160, 1908, 55, 97, "Input"],
Cell[7479, 217, 178, 4, 30, "Text"],
Cell[7660, 223, 984, 27, 80, "Input"],
Cell[8647, 252, 210, 4, 30, "Text"],
Cell[8860, 258, 3542, 99, 114, "Input"],
Cell[12405, 359, 203, 4, 30, "Text"],
Cell[12611, 365, 5334, 154, 165, "Input"],
Cell[17948, 521, 154, 2, 30, "Text"],
Cell[18105, 525, 3146, 88, 97, "Input"],
Cell[21254, 615, 236, 5, 30, "Text"],
Cell[21493, 622, 4891, 145, 199, "Input"],
Cell[26387, 769, 175, 4, 30, "Text"],
Cell[26565, 775, 1360, 30, 63, "Input"],
Cell[27928, 807, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[28056, 812, 248, 5, 28, "Input"],
Cell[28307, 819, 2264, 40, 230, "Output"]
}, Open  ]],
Cell[30586, 862, 148, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[30759, 870, 1545, 48, 126, "Input"],
Cell[32307, 920, 1911, 32, 97, "Message"]
}, Open  ]],
Cell[34233, 955, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[34360, 960, 770, 19, 28, "Input"],
Cell[35133, 981, 1352, 26, 81, "Output"]
}, Open  ]],
Cell[36500, 1010, 125, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[36650, 1017, 1060, 29, 80, "Input"],
Cell[37713, 1048, 1676, 35, 67, "Output"]
}, Open  ]],
Cell[39404, 1086, 135, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[39564, 1093, 252, 6, 28, "Input"],
Cell[39819, 1101, 1791, 40, 77, "Output"]
}, Open  ]],
Cell[41625, 1144, 124, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[41774, 1151, 2299, 56, 233, "Input"],
Cell[44076, 1209, 4552, 85, 533, "Output"]
}, Open  ]],
Cell[48643, 1297, 180, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[48848, 1305, 2712, 74, 165, "Input"],
Cell[51563, 1381, 3288, 59, 500, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[54900, 1446, 100, 1, 50, "Section"],
Cell[55003, 1449, 141, 3, 30, "Text"],
Cell[55147, 1454, 580, 13, 46, "Input"],
Cell[55730, 1469, 209, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[55964, 1476, 202, 4, 28, "Input"],
Cell[56169, 1482, 430, 7, 28, "Output"]
}, Open  ]],
Cell[56614, 1492, 376, 6, 49, "Text"],
Cell[56993, 1500, 112, 1, 30, "Text"],
Cell[57108, 1503, 228, 6, 28, "Input"],
Cell[57339, 1511, 205, 2, 30, "Text"],
Cell[57547, 1515, 1677, 39, 63, "Input"],
Cell[59227, 1556, 177, 2, 30, "Text"],
Cell[59407, 1560, 1007, 28, 97, "Input"],
Cell[60417, 1590, 170, 2, 30, "Text"],
Cell[60590, 1594, 1083, 28, 80, "Input"],
Cell[61676, 1624, 202, 2, 30, "Text"],
Cell[61881, 1628, 3542, 99, 114, "Input"],
Cell[65426, 1729, 195, 2, 30, "Text"],
Cell[65624, 1733, 6615, 183, 199, "Input"],
Cell[72242, 1918, 154, 2, 30, "Text"],
Cell[72399, 1922, 5792, 159, 182, "Input"],
Cell[78194, 2083, 312, 5, 30, "Text"],
Cell[78509, 2090, 5745, 153, 199, "Input"],
Cell[84257, 2245, 167, 2, 30, "Text"],
Cell[84427, 2249, 1360, 30, 63, "Input"],
Cell[85790, 2281, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[85918, 2286, 296, 6, 28, "Input"],
Cell[86217, 2294, 1881, 32, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88135, 2331, 186, 4, 28, "Input"],
Cell[88324, 2337, 918, 23, 46, "Output"]
}, Open  ]],
Cell[89257, 2363, 140, 2, 30, "Text"],
Cell[89400, 2367, 1584, 47, 120, "Input"],
Cell[90987, 2416, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[91114, 2421, 770, 19, 28, "Input"],
Cell[91887, 2442, 504, 12, 81, "Output"]
}, Open  ]],
Cell[92406, 2457, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[92548, 2462, 1060, 29, 80, "Input"],
Cell[93611, 2493, 944, 21, 63, "Output"]
}, Open  ]],
Cell[94570, 2517, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[94722, 2522, 252, 6, 28, "Input"],
Cell[94977, 2530, 996, 23, 65, "Output"]
}, Open  ]],
Cell[95988, 2556, 116, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[96129, 2561, 2299, 56, 233, "Input"],
Cell[98431, 2619, 9497, 163, 534, "Output"]
}, Open  ]],
Cell[107943, 2785, 172, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[108140, 2791, 2817, 77, 165, "Input"],
Cell[110960, 2870, 126068, 2090, 515, 60240, 1011, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237077, 4966, 103, 1, 80, "Section"],
Cell[237183, 4969, 514, 15, 28, "Input"],
Cell[237700, 4986, 6284, 195, 466, "Input"],
Cell[CellGroupData[{
Cell[244009, 5185, 239, 6, 28, "Input"],
Cell[244251, 5193, 4369, 79, 243, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
