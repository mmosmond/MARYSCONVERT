(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    230732,       5033]
NotebookOptionsPosition[    224863,       4857]
NotebookOutlinePosition[    225242,       4874]
CellTagsIndexPosition[    225199,       4871]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Deriving the empirical correlation function and fitting a curve to it\
\>", "Title",
 CellChangeTimes->{{3.662411661666781*^9, 3.662411661991362*^9}, {
  3.66241207575276*^9, 3.6624121230880127`*^9}}],

Cell[TextData[{
 "Translating from \[OpenCurlyDoubleQuote]Towards a unified descriptive \
theory for spatial ecology\[CloseCurlyDoubleQuote] (who only provide a PDF of \
their ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook!)"
}], "Subtitle",
 CellChangeTimes->{{3.662412134962429*^9, 3.662412156210373*^9}, {
  3.662412505400652*^9, 3.662412516577264*^9}}],

Cell["\<\
M Scott & M Osmond
2016 January 21\
\>", "Subsubtitle",
 CellChangeTimes->{{3.662412158914653*^9, 3.662412165506485*^9}, {
  3.662412525465302*^9, 3.6624125326489677`*^9}}],

Cell[CellGroupData[{

Cell["Method with random data", "Section",
 CellChangeTimes->{{3.66275569694698*^9, 3.662755710058949*^9}}],

Cell["\<\
Define the spatial extent of the area of interest (e.g., Barro Colorado \
Island)\
\>", "Text",
 CellChangeTimes->{{3.662411468482938*^9, 3.6624114723466263`*^9}, {
  3.662412173377927*^9, 3.662412192666273*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Lx", ",", "Ly"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "500"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "total", " ", "x", " ", "and", " ", "y", " ", "distance", " ", "of", " ", 
     "area", " ", "of", " ", "interest"}], ",", " ", 
    RowBox[{
    "ie", " ", "a", " ", "grid", " ", "with", " ", "length", " ", "Lx", " ", 
     "and", " ", "width", " ", "Ly"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Asub", "=", "100"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"space", " ", "between", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "we", " ", "chop", " ", "up", " ", "the", " ", "total", " ", 
      "area", " ", "into", " ", "squares", " ", "with", " ", "length", " ", 
      "Asub"}], ";", " ", 
     RowBox[{
     "best", " ", "if", " ", "this", " ", "divides", " ", "the", " ", "total",
       " ", "space", " ", "nicely"}]}], ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"Lx", "/", "Asub"}], " ", "and", " ", 
     RowBox[{"Ly", "/", "Asub"}], " ", "are", " ", "integers"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624105632177896`*^9, 3.662410563388131*^9}, {
   3.662410642111521*^9, 3.6624106433361464`*^9}, {3.6624113185715933`*^9, 
   3.6624113205874157`*^9}, 3.6624118299636374`*^9, {3.662412200746975*^9, 
   3.66241233394919*^9}}],

Cell["\<\
Make up the data (because the authors suck at making it available)\
\>", "Text",
 CellChangeTimes->{{3.6623967906428547`*^9, 3.66239684459477*^9}, 
   3.662396960068564*^9, {3.6624123100515614`*^9, 3.662412361372697*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numplots", "=", "10000"}], ";", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", 
    RowBox[{"plots", "/", "datapoints"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Lx"}], "}"}], "]"}], "]"}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "Ly"}], "}"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", "10", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "locations", " ", "of", " ", 
     "each", " ", "plot"}], ",", " ", 
    RowBox[{"species", " ", "code", " ", "of", " ", "each", " ", "plot"}], 
    ",", 
    RowBox[{
    "abundance", " ", "of", " ", "that", " ", "species", " ", "in", " ", 
     "each", " ", "plot"}]}], "*)"}], " "}]}], "Input",
 CellChangeTimes->{{3.662406789653805*^9, 3.662406801493565*^9}, 
   3.6624068355453568`*^9, {3.6624068840528297`*^9, 3.662406909245325*^9}, {
   3.662407072563799*^9, 3.662407104474935*^9}, 3.662408757424716*^9, {
   3.662408793027438*^9, 3.662408836844111*^9}, 3.6624105559804363`*^9, {
   3.662411250826935*^9, 3.6624112514645576`*^9}, {3.6624113858900433`*^9, 
   3.662411406665563*^9}, {3.6624123720937433`*^9, 3.662412388150242*^9}, {
   3.6624124634782267`*^9, 3.662412473070211*^9}, {3.662755105226478*^9, 
   3.662755177567297*^9}}],

Cell["\<\
Get each variable of interest from data table\
\>", "Text",
 CellChangeTimes->{{3.662411487805341*^9, 3.6624115162679358`*^9}, {
  3.66241239544563*^9, 3.662412400485498*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gx", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"x", " ", "coordinates", " ", "of", " ", "all", " ", "plots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gy", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "data", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numplots"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"y", " ", "coordinates", " ", "of", " ", "all", " ", "plots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sp", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "data", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"species", " ", "code", " ", "for", " ", "each", " ", "plot"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ab", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", "data", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"species", " ", "abundance", " ", "at", " ", "each", " ", "plot"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394854259613*^9, 3.6623948971517143`*^9}, {
   3.6623949767533827`*^9, 3.662394977232485*^9}, 3.662395418640141*^9, {
   3.662395615527067*^9, 3.6623956156540813`*^9}, {3.662396523289652*^9, 
   3.662396541418125*^9}, {3.662396815443509*^9, 3.662396912669395*^9}, {
   3.662412409630423*^9, 3.662412412742033*^9}}],

Cell["\<\
Some summary statistics of the data\
\>", "Text",
 CellChangeTimes->{{3.6624115004831676`*^9, 3.6624115190117893`*^9}, {
  3.662412416239183*^9, 3.662412426541686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Uspecie", "=", 
    RowBox[{"Union", "[", "sp", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Nspecies", "=", 
    RowBox[{"Length", "[", "Uspecie", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TotAbundance", "=", 
    RowBox[{"Total", "[", "ab", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"total", " ", "abundance"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "species"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662394155397892*^9, 3.662394208972786*^9}, {
  3.66239435484977*^9, 3.662394355553513*^9}, {3.662394932920998*^9, 
  3.662394933324882*^9}, {3.662396920669482*^9, 3.662396931205062*^9}, {
  3.662411451991355*^9, 3.662411457827334*^9}, {3.662412431854793*^9, 
  3.6624124470392838`*^9}}],

Cell["\<\
Defining the coordinate system of the area\
\>", "Text",
 CellChangeTimes->{{3.6624115301840067`*^9, 3.662411532736253*^9}, 
   3.662412483413187*^9, {3.6624127080035973`*^9, 3.6624127139072323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allpos", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Lx", "/", "Asub"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Ly", "/", "Asub"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"coordinates", ",", " ", 
    RowBox[{"in", " ", "translated", " ", "form"}], ",", " ", 
    RowBox[{"ie", ".", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyCpos", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "i"}], "+", "1"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "j"}], "+", "1"}], ")"}], "/", "2"}]}], "}"}],
          "//", " ", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Lx", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ly", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], 
         "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"halfway", " ", "points", " ", "between", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "use", " ", "later", " ", "to", " ", "derive", 
     " ", "the", " ", "distances", " ", "between", " ", "centers", " ", "of", 
     " ", "each", " ", "\"\<bin\>\"", " ", 
     RowBox[{"(", 
      RowBox[{"area", " ", "below", " ", 
       RowBox[{"(", "south", ")"}], " ", "and", " ", "to", " ", "left", " ", 
       RowBox[{"(", "west", ")"}], " ", "of", " ", "each", " ", 
       "coordinate"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allpair", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"allpos", ",", "allpos"}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pairs", " ", "of", " ", "each", " ", "translated", " ", "coordinate", 
     " ", "with", " ", "each", " ", "other"}], ",", " ", 
    RowBox[{"e", ".", "g", "."}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "allpos", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", 
    RowBox[{"coordinates", "/", "bins"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395041124155*^9, 3.662395076995739*^9}, 
   3.662396503297634*^9, {3.662397225252562*^9, 3.66239727282128*^9}, {
   3.662397305190036*^9, 3.662397317542131*^9}, {3.662402580564127*^9, 
   3.662402589155075*^9}, {3.6624125591567297`*^9, 3.662412674941476*^9}, {
   3.6624128238176327`*^9, 3.662412840042054*^9}}],

Cell["\<\
Locations of plots (the bin they are in)\
\>", "Text",
 CellChangeTimes->{{3.662411540064125*^9, 3.662411543224874*^9}, 
   3.66241271663524*^9, {3.6624129056691236`*^9, 3.662412919045101*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gx", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"p", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"which", " ", "plots", " ", 
     RowBox[{"(", 
      RowBox[{
      "their", " ", "position", " ", "in", " ", "the", " ", "data", " ", 
       "vector"}], ")"}], " ", "have", " ", "x", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "x", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "p", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Lx", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gy", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"q", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "which", " ", "plots", " ", "have", " ", "y", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "y", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "q", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Ly", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule1", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "from", " ", "coordinates", " ", 
    RowBox[{"(", "tuple", ")"}], " ", "to", " ", "single", " ", "identifying",
     " ", "number"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule2", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "back"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYpos", "[", 
     RowBox[{"{", 
      RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
    RowBox[{"Intersection", "[", 
     RowBox[{
      RowBox[{"Xpos", "[", "p", "]"}], ",", 
      RowBox[{"Ypos", "[", "q", "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"which", " ", "plots", " ", "have", " ", "location", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}], " ", "within", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", 
      RowBox[{"x", " ", "p"}]}], ")"}], " ", "and", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"y", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", " ", 
      RowBox[{"y", " ", "p"}]}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"possub", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{"XYpos", ",", "allpos"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "which", " ", "plots", " ", "fall", " ", "in", " ", "which", " ", "bin", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"e", ".", "g", "."}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", ",", "y"}], ")"}], "=", 
       RowBox[{"(", 
        RowBox[{"321", ",", "434"}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"with", " ", "Asub"}], "=", "100"}], ",", " ", 
      RowBox[{"would", " ", "fall", " ", "in", " ", 
       RowBox[{"(", 
        RowBox[{"400", ",", "500"}], ")"}]}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395292209701*^9, 3.662395537499296*^9}, {
  3.6623960553689823`*^9, 3.662396067946538*^9}, {3.662397974196926*^9, 
  3.662398051690569*^9}, {3.6623981180157757`*^9, 3.6623981500469017`*^9}, {
  3.6623982769015217`*^9, 3.662398325149023*^9}, {3.66239886727868*^9, 
  3.662398876830975*^9}, {3.6623994181640377`*^9, 3.66239950349568*^9}, {
  3.6623997780956163`*^9, 3.6623998470706177`*^9}, {3.6624129296834784`*^9, 
  3.662412931482998*^9}}],

Cell["Which species are where", "Text",
 CellChangeTimes->{{3.66241155496421*^9, 3.66241156097239*^9}, {
  3.6624129435894413`*^9, 3.662412950140648*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYS", "[", "i_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gx", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"gy", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gives", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "location", " ", "of", " ", 
     "plots"}], ",", " ", 
    RowBox[{"and", " ", "sp", " ", "code"}], ",", " ", 
    RowBox[{"in", " ", "each", " ", "bin"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SabA", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
     "&"}], "/@", " ", "Uspecie"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "with", " ", "each", " ", 
    "species", " ", "in", " ", "each", " ", "bin"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SA", "[", "i_", "]"}], ":=", 
   RowBox[{"Boole", "/@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"sp", "[", 
          RowBox[{"[", 
           RowBox[{"possub", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", " ", "Uspecie"}], ")"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "at", " ", "least", " ", "one", " ", "plot", " ", 
     "with", " ", "a", " ", "species", " ", "in", " ", "given", " ", "bin"}], 
    ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"presence", "/", "absence"}], " ", "in", " ", "bin"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Spos", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SA", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "possub", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"table", " ", "with", " ", "all", " ", "bins"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395558546788*^9, 3.662395590718184*^9}, {
   3.662395637422887*^9, 3.662395855679844*^9}, {3.662396084462902*^9, 
   3.662396093135119*^9}, {3.6624000366580553`*^9, 3.6624000612422333`*^9}, {
   3.662400105056695*^9, 3.66240013763741*^9}, {3.662400198268684*^9, 
   3.662400203847021*^9}, {3.662400283268598*^9, 3.662400340107189*^9}, {
   3.662400370913103*^9, 3.662400403535512*^9}, {3.662400442030035*^9, 
   3.662400450460515*^9}, {3.662400495985153*^9, 3.662400502456811*^9}, {
   3.662401369958474*^9, 3.6624013885339117`*^9}, 3.6624017363239193`*^9, {
   3.662412958541737*^9, 3.662413003201478*^9}}],

Cell["\<\
Covariance in species abundance by distances\
\>", "Text",
 CellChangeTimes->{{3.662411564012209*^9, 3.662411577084908*^9}, {
  3.662413007593816*^9, 3.6624130216361732`*^9}, {3.662413321726729*^9, 
  3.6624133250631638`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ")"}], "^", "2"}], "]"}], 
    "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Euclidean", " ", "distance", " ", "between", " ", "center", " ", "of", 
    " ", "two", " ", "bins", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"in", " ", "translated", " ", "space"}], ";", " ", 
       RowBox[{
       "need", " ", "to", " ", "multiply", " ", "by", " ", "Asub", " ", "to", 
        " ", "get", " ", "real", " ", "distances"}]}], ",", " ", 
      RowBox[{"which", " ", "we", " ", "do", " ", "later"}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"not", " ", "sure", " ", "what", " ", "this", " ", "does"}], ",", 
    " ", 
    RowBox[{"but", " ", "doesnt", " ", "hurt"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alldist", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"dist", ",", 
      RowBox[{"allpair", "/.", "rule1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "distance", " ", "between", " ", "center", " ", "of", " ", "all", " ", 
    "pairs", " ", "of", " ", "bins"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rvec", "=", 
    RowBox[{"Union", "[", "alldist", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "unique", " ", "distances", " ", "in", " ", "increasing", " ", 
    "order"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"indexpair", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"index", ",", 
      RowBox[{"allpair", "/.", " ", "rule1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "translate", " ", "from", " ", "tuples", " ", "of", " ", "coordinates", 
    " ", "to", " ", "pairs", " ", "of", " ", "coordinate", " ", "indices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"posdist", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"alldist", ",", "#"}], "]"}], "&"}], "/@", " ", "rvec"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "identify", " ", "coordinate", " ", "index", " ", "pairs", " ", "whose", 
    " ", "bin", " ", "centers", " ", "are", " ", "given", " ", "distance", 
    " ", "apart"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Cov", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"SabA", "[", "i", "]"}], " ", 
       RowBox[{"SabA", "[", "j", "]"}]}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"SabA", "[", "i", "]"}], "]"}], " ", 
       RowBox[{"Mean", "[", 
        RowBox[{"SabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<covariance\>\"", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "bins"}], ",", " ", 
    RowBox[{
    "note", " ", "that", " ", "the", " ", "\"\<covariance\>\"", " ", "is", 
     " ", "taken", " ", "over", " ", "all", " ", "species"}], ",", " ", 
    RowBox[{
    "ie", " ", "\"\<covariance\>\"", " ", "in", " ", "community", " ", 
     "composition"}]}], "*)"}], "\n", 
  RowBox[{"allcov", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"Cov", ",", 
       RowBox[{"indexpair", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"posdist", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], "]"}]}],
       "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "covaraiance", " ", "in", " ", "number", " ", "of", " ", "plots", " ", 
    "with", " ", "species", " ", "at", " ", "each", " ", "distance"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/VTqeGC552tH62AI7diQEwWiWRJN60H0P6stC0G0
4OwJS0B0X9PT0gogvcdXoQJEP9l4v6MSSHM0ufaA6IQXE6aC6AnrPaaD6JSr
5+eB6PXT5BaA6NsxWktA9DVP+RUgetNasU0gWonj/BYQ3aN99CCI3nB9/SEQ
vWbdlisg+sm30Ksg2mV6zRMQbfX23UsQ/W7mkXcgWujiqw8gehlPkVAVkBa9
1ikBoss2rp5TD6RrQtUXguhFznWrQbRGXOQaEH3++8mjILrLKucUiLba338B
ROfs+f4ARBsl5jeoeQH9NbkKTLfnHWgF0Ub5V9rAfEezXSBaxO7GHhANAJPY
q7k=
  "]],

Cell["\<\
Our empirical correlation function\
\>", "Text",
 CellChangeTimes->{{3.662411583164523*^9, 3.6624115898929653`*^9}, {
  3.662413328936442*^9, 3.662413339075227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"empPCF", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvec", "*", "Asub"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", "allcov"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"empirical", " ", "correlation", " ", "function"}], ",", " ", 
    RowBox[{"PCF", ";", " ", 
     RowBox[{
     "first", " ", "element", " ", "of", " ", "each", " ", "pair", " ", "is", 
      " ", "the", " ", 
      RowBox[{"(", "untranslated", ")"}], " ", "distance", " ", "between", 
      " ", "the", " ", "center", " ", "of", " ", "two", " ", "bins", " ", 
      RowBox[{"(", 
       RowBox[{"rvec", "*", "Asub"}], ")"}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", "mean", 
     " ", "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "all", " ", "pairs", 
     " ", "of", " ", "bins", " ", "that", " ", "distance", " ", "apart"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.662401751323216*^9, 3.662401767856126*^9}, {
  3.6624018026823177`*^9, 3.662401805136237*^9}, {3.662402598586731*^9, 
  3.662402656960024*^9}, {3.662403448724161*^9, 3.662403449356001*^9}, {
  3.662413682182837*^9, 3.662413751871039*^9}}],

Cell["which looks like this", "Text",
 CellChangeTimes->{{3.662413762951601*^9, 3.662413766590012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"empPCF", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662402671244444*^9, 3.6624026938166847`*^9}, {
  3.6624027307213984`*^9, 3.6624027646607313`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQOf3HOM7uh8sIfwIh0WFLTxhTJ+sN+RJnygem2i
g2XKYwVxDph8pkNIZd7vDKYP9m55so+zPmc78HQkHoligKkvdPhwKvHHnA/v
IeoPFDkIb2hQmfDvvX3k9F9vlxwudlCZ+kIm9M97eze+nLMPO8ocdCOPWRa9
h6pnqHTYuflD/SX2D/bRj4oEfhypdDiX2+fD/uW9vbCU7ALLliqHqMuWG/7/
fw+1v9qhZPu25iM/ofod6h1ua7D/Mnj33v5DVk9K3r16B0Pf2I/5bED3vlp8
QPFKg4P4zcpD0+DubXSI5XxY3PHsvf318C2fDlk0OfxSr3j1+y7M/U0OSm8F
TjKwfrDnZVE7YsrU7LBWYXfjHu4PUP80O3xMS//09vN7e4v/LDfqmVocVokc
mTHtzXv7rUJhWhO+tTiUy//qWvYcat6DVodN38yMXHg/2Kc5SGy4JdHm8L4g
6q8I5wdoeLQ55Aj5izoA7Tv3JaZR7ECbg9L8JXNLgfFR4cgcOu9Mu4Phz5Ks
mx9h4dXpkHRge80KiQ/2TzdzJJ8z7HSYZffIYD4wPCDh1+nw+f/CbZ+YP9jb
M0z4bry5yyEvQEMs4Qos/LodAs4Eu959ATVPocdhAeuHeweA+ndMDnng59Pj
ILH5wUoRoP6LHoVbFp3vceB5V3T/BjD+WR9/Tylf2uuwOf34Xu4f7+1/mr0W
Fjve51Dn4qkYc/O9PQBQoBg9
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.994674723888705},
  Method->{},
  PlotRange->{{0, 984.8857801796104}, {0.994674723888705, 
    1.0109521836898208`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.0003255491960223145, 0.0003255491960223145}}]], "Output",
 CellChangeTimes->{{3.6624026753490877`*^9, 3.662402694224242*^9}, {
   3.662402733657669*^9, 3.662402764957795*^9}, 3.662403280700993*^9, 
   3.662405717953288*^9, 3.6624062969674873`*^9, 3.662406329773899*^9, 
   3.662406416186351*^9, 3.662406804603773*^9, 3.66240683746817*^9, {
   3.662406886173161*^9, 3.66240691093393*^9}, {3.6624069838326597`*^9, 
   3.662407012312221*^9}, {3.662407083140224*^9, 3.662407106243676*^9}, {
   3.662407909118041*^9, 3.662407928023505*^9}, 3.662408841453096*^9, 
   3.662408905364181*^9, {3.6624089446938267`*^9, 3.6624089748889437`*^9}, {
   3.6624090129800463`*^9, 3.6624090870484447`*^9}, 3.662409222978368*^9, 
   3.662410582890629*^9, 3.662410645396593*^9, 3.662411257144088*^9, 
   3.662411323604559*^9, 3.662411410305233*^9, 3.6624114593953867`*^9, 
   3.662411831491273*^9, 3.6627548268499537`*^9, 3.6627551177774353`*^9, 
   3.6627551888229713`*^9}]
}, Open  ]],

Cell["\<\
Fitting the function to the data\
\>", "Text",
 CellChangeTimes->{{3.6624116006129713`*^9, 3.662411617797512*^9}, 
   3.6624137709835*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Rho]", "\[Lambda]"], ")"}], "2"], 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       FractionBox["r", "\[Lambda]"]}], "]"}]}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "function", " ", "to", " ", "fit", " ", "to", " ", "the", " ", "empirical",
     " ", "PCF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"what", " ", "does", " ", "this", " ", 
    RowBox[{"do", "?"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fitcor", "=", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{
      RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
      RowBox[{"g", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", 
          SuperscriptBox["10", "9"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Rho]", ",", "0.1"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fit", " ", "the", " ", "function"}], ",", " ", 
    RowBox[{"with", " ", "some", " ", "parameter", " ", "guesses"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624027871760187`*^9, 3.662402882159881*^9}, {
  3.662403440956188*^9, 3.662403443083897*^9}, {3.662413819411948*^9, 
  3.662413832425786*^9}}],

Cell["How good is the fit?", "Text",
 CellChangeTimes->{{3.662413841744823*^9, 3.662413844902369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
        ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "fit"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662403357573029*^9, 3.662403400917585*^9}, {
  3.662403460732779*^9, 3.662403460900476*^9}, {3.6624035271260643`*^9, 
  3.6624035294532757`*^9}, {3.662403567283935*^9, 3.662403568012061*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.9999943356864339`"},
    {"\<\"AIC\"\>", 
     RowBox[{"-", "338.0912399431396`"}]},
    {"\<\"BIC\"\>", 
     RowBox[{"-", "333.25848620520696`"}]},
    {"\<\"RSquared\"\>", "0.9999946418655455`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.662403402411786*^9, 3.662405718090724*^9, 3.662406297155188*^9, 
   3.662406329946666*^9, {3.662406416486521*^9, 3.662406429860981*^9}, 
   3.66240680481929*^9, 3.662406837703083*^9, {3.662406886374895*^9, 
   3.662406911136054*^9}, {3.662406983975531*^9, 3.662407012481901*^9}, {
   3.66240708327638*^9, 3.662407106382594*^9}, {3.6624079092705507`*^9, 
   3.662407928171085*^9}, 3.662408841597978*^9, 3.662408905666217*^9, {
   3.662408944842497*^9, 3.6624089750086527`*^9}, {3.662409013114809*^9, 
   3.662409087167595*^9}, 3.6624092231154623`*^9, 3.6624105830350018`*^9, 
   3.662410645530094*^9, 3.662411257241982*^9, 3.6624113237579403`*^9, 
   3.662411410461595*^9, 3.662411459544739*^9, 3.662411831637423*^9, 
   3.662754827083612*^9, 3.662755117964517*^9, 3.6627551888890533`*^9}]
}, Open  ]],

Cell["\<\
What are our parameter estimates?\
\>", "Text",
 CellChangeTimes->{{3.6624138505438223`*^9, 3.662413855414859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Rho]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662403541170051*^9, 3.662403579627411*^9}, {
  3.662413877368452*^9, 3.662413935628236*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", "1.`*^9", "6.610302438776265`*^27", 
      "1.5127900867802435`*^-19", "1"},
     {"\[Rho]", "0.1`", "6.383829784375621`*^17", "1.5664578063273133`*^-19", 
      "1"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.6624139079167*^9}, 
   3.662754827139021*^9, 3.66275511801717*^9, 3.662755188904523*^9}]
}, Open  ]],

Cell["\<\
Or if you like confidence intervals better...\
\>", "Text",
 CellChangeTimes->{{3.662413938361573*^9, 3.662413946160007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"get", " ", "confidence", " ", "intervals", " ", "too"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{3.662413934755294*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", "1.`*^9", "6.610302438776265`*^27", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.341962738909225`*^28"}], ",", 
        "1.341962738909225`*^28"}], "}"}]},
     {"\[Rho]", "0.1`", "6.383829784375621`*^17", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2959863457861606`*^18"}], ",", 
        "1.2959863457861606`*^18"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.66241392002323*^9}, 
   3.662754827573681*^9, 3.6627551183942013`*^9, 3.6627551889387608`*^9}]
}, Open  ]],

Cell["\<\
Plot fitted curve with data points\
\>", "Text",
 CellChangeTimes->{{3.662413956438634*^9, 3.662413969480398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
      RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Prolog", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
      RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.662403769406761*^9, 3.662403992597126*^9}, {
  3.662404042064361*^9, 3.6624041243000097`*^9}, {3.662404161267418*^9, 
  3.662404199527317*^9}, {3.662405800170576*^9, 3.6624058024493113`*^9}, {
  3.66240792592798*^9, 3.662407926379305*^9}, {3.662413951485792*^9, 
  3.66241399528541*^9}, {3.662755240062652*^9, 3.662755249022591*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbvSuqtS+KsdAxh8sD/ckj/xX4iyA4wv/8bc4W+I
MZzf0X1qhYKqC5zv93bDqj9vfeF8lxUTGG8fCobz9/InbDv5LQLOj4s9nX71
Yiycn/fh2YTKrkQ4v3NT1+H98ilw/o70mpIpHWlw/rXtOzWLVDPhfPbfLrH3
pmbD+VP3FT1j/JWLMI/vm6W4ZwGcH7j95v4vdYVw/gTdx8evnSuC8/893ls1
RaIEzv86eX+OpE8pnJ8i+PzBopllcH5Mh+mUzxfK4fwzZ1ae9FCqhPOzAt+v
rMytgvMnnY8+WbioGs43lH6XlfexBs6PSljubaRVB+dvfGp4/WJMPZzvIFP4
aVdIA5yfe+jOjA/vEfxQ/+gGjRmNCH6Nk62fbROcL6m2d2b4dQR/5jYv8+S6
Zjj/3uHskiCpFjjfqvBrm/5mBD+IddItvshWOF9f7NDZi58R/OO8rEzTZ7fB
+SpNt6/aW7TD+TOmSdVfu4jgn5iYk5lf0QHn7+UM+vxauBPOz8vw2pe1B8E3
S18ddz2xC84//Gj+PPU/CD6363L5qsXdcL6EipPDBvseON9msavZlRsIvgxn
TO6vul44/+BrVhcWqT44/9emzWq9BQi+SVUip9hxBB8AZ6kESw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"g(r)\"", TraditionalForm], None}, {
     FormBox["\"Distance (m)\"", TraditionalForm], None}},
  ImageSize->800,
  LabelStyle->{FontFamily -> "Times", FontSize -> 12},
  Method->{},
  PlotLabel->FormBox["\"Pair correlation function\"", TraditionalForm],
  PlotRange->{{0, 984.8857801796104}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, 
    Scaled[0.02]},
  Prolog->{
    RGBColor[1, 0, 0], 
    PointSize[0.005], {
     PointBox[{0., 1.0109521836898208`}], 
     PointBox[{100., 1.0003252570523173`}], 
     PointBox[{141.4213562373095, 1.0019751820275486`}], 
     PointBox[{200., 1.0005884000343785`}], 
     PointBox[{223.60679774997897`, 1.0000865622646442`}], 
     PointBox[{282.842712474619, 0.9981217242442124}], 
     PointBox[{300., 0.9998245919173335}], 
     PointBox[{316.22776601683796`, 0.9995523037547724}], 
     PointBox[{360.5551275463989, 0.9979792717374828}], 
     PointBox[{400., 1.001909732595989}], 
     PointBox[{412.31056256176606`, 0.9985386367074456}], 
     PointBox[{424.2640687119285, 0.9999998514091246}], 
     PointBox[{447.21359549995793`, 0.9992392132314607}], 
     PointBox[{500., 0.9978260882719739}], 
     PointBox[{509.9019513592784, 1.001571600751799}], 
     PointBox[{538.5164807134504, 1.0001437756269007`}], 
     PointBox[{565.685424949238, 0.9968912375700644}], 
     PointBox[{583.0951894845301, 0.995847661922425}], 
     PointBox[{600., 1.00122145215466}], 
     PointBox[{608.276253029822, 1.0028653209319984`}], 
     PointBox[{632.4555320336759, 0.9985265478564697}], 
     PointBox[{640.3124237432849, 0.9976304038724682}], 
     PointBox[{670.820393249937, 0.997027656020676}], 
     PointBox[{700., 1.003238865042857}], 
     PointBox[{707.1067811865476, 1.0022172829258655`}], 
     PointBox[{721.1102550927978, 1.0012818176629947`}], 
     PointBox[{728.0109889280518, 1.0003563077861561`}], 
     PointBox[{761.5773105863909, 0.9982726172673094}], 
     PointBox[{800., 1.0060200568950894`}], 
     PointBox[{806.2257748298549, 0.9992214159737671}], 
     PointBox[{824.6211251235321, 1.000963891419812}], 
     PointBox[{854.4003745317531, 0.994674723888705}], 
     PointBox[{894.4271909999159, 0.9971758226441896}], 
     PointBox[{900., 0.9992374758004878}], 
     PointBox[{905.5385138137417, 1.0007521282051979`}], 
     PointBox[{921.9544457292888, 1.00069510731453}], 
     PointBox[{948.6832980505138, 0.9990290361995363}], 
     PointBox[{984.8857801796104, 0.9952831888314362}]}}]], "Output",
 CellChangeTimes->{{3.662403931872311*^9, 3.662403961748376*^9}, 
   3.6624039930219793`*^9, {3.662404054020718*^9, 3.662404124635461*^9}, {
   3.6624041628226557`*^9, 3.662404177212069*^9}, 3.662405718219399*^9, 
   3.6624058028929377`*^9, 3.662406297284313*^9, 3.662406330073842*^9, 
   3.6624064172534*^9, 3.662406804946733*^9, 3.6624068387016277`*^9, {
   3.662406887024851*^9, 3.66240691165195*^9}, {3.662406984216867*^9, 
   3.6624070126147203`*^9}, {3.66240708340755*^9, 3.6624071065110817`*^9}, {
   3.662407909400408*^9, 3.662407928325042*^9}, 3.662408841770507*^9, 
   3.6624089062315893`*^9, {3.662408945263624*^9, 3.662408975140057*^9}, {
   3.662409013246416*^9, 3.662409087299986*^9}, 3.662409223247031*^9, 
   3.662410583174616*^9, 3.662410645662326*^9, 3.662411257398282*^9, 
   3.66241132393871*^9, 3.6624114105907393`*^9, 3.6624114596960697`*^9, 
   3.662411831774963*^9, 3.6627548277165937`*^9, 3.662755118552618*^9, 
   3.662755188969701*^9, {3.6627552441558857`*^9, 3.662755249340041*^9}}]
}, Open  ]],

Cell["\<\
Plot fitted curve with confidence bands\
\>", "Text",
 CellChangeTimes->{{3.6624140170269537`*^9, 3.662414017625156*^9}, {
  3.662414059835639*^9, 3.662414068251809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bands90", "[", "x_", "]"}], ",", 
      RowBox[{"bands95", "[", "x_", "]"}], ",", 
      RowBox[{"bands99", "[", "x_", "]"}], ",", 
      RowBox[{"bands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fitcor", "[", 
       RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
        RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"cl", ",", 
        RowBox[{"{", 
         RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitcor", "[", "r", "]"}], ",", 
       RowBox[{"bands90", "[", "r", "]"}], ",", 
       RowBox[{"bands95", "[", "r", "]"}], ",", 
       RowBox[{"bands99", "[", "r", "]"}], ",", 
       RowBox[{"bands999", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"3", " ", "\[Rule]", 
         RowBox[{"{", "2", "}"}]}], ",", 
        RowBox[{"4", " ", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}], ",", 
        RowBox[{"5", " ", "\[Rule]", 
         RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662404221668598*^9, 3.662404310745612*^9}, 
   3.662414014514715*^9, {3.662755211342601*^9, 3.662755231736133*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQGRDgsK2vhCGT/Y70gTPlC9NtHBMuWxgjjHB3uI
fKZDSGXe7wymD/ZuebKPsz5nO/B0JB6JYoCpL3T4cCrxx5wP7yHqDxQ5CG9o
UJnw77195PRfb5ccLnZQmfpCJvTPe3s3vpyzDzvKHHQjj1kWvYeqZ6h02Ln5
Q/0l9g/20Y+KBH4cqXQ4l9vnw/7lvb2wlOwCy5Yqh6jLlhv+/38Ptb/aoWT7
tuYjP6H6Heodbmuw/zJ4997+Q1ZPSt69egdD39iP+WxA975afEDxSoOD+M3K
Q9Pg7m10iOV8WNzx7L399fAtnw5ZNDn8Uq949fsuzP1NDkpvBU4ysH6w52VR
O2LK1OywVmF34x7uD1D/NDt8TEv/9Pbze3uL/yw36plaHFaJHJkx7c17+61C
YVoTvrU4lMv/6lr2HGreg1aHTd/MjFx4P9inOUhsuCXR5vC+IOqvCOcHaHi0
OeQI+Ys6AO079yWmUexAm4PS/CVzS4HxUeHIHDrvTLuD4c+SrJsfYeHV6ZB0
YHvNCokP9k83cySfM+x0mGX3yGA+MDwg4dfp8Pn/wm2fmD/Y2zNM+G68ucsh
L0BDLOEKLPy6HQLOBLvefQE1T6HHYQHrh3sHgPp3TA554OfT4yCx+cFKEaD+
ix6FWxad73HgeVd0/wYw/lkff08pX9rrsDn9+F7uH+/tf5q9FhY73udQ5+Kp
GHPzvT0AvPwULg==
      "]]}, {}}, GraphicsComplexBox[CompressedData["
1:eJx0nXlYTW8X99U5lSaNGkihDMksEtKmMmRsotKAIpQ0ieZTpiYJlTEZIiKE
DKWUDJkVRUoiZWg4DafTZHj36vqtlut9n/f557m+19l7n/u+91r77P3ZH/2G
rd1iuU60X79+alL9+sH/G12YGR2g1D67X+//mo21GgyY39ZTGMyRMU/PDx1h
2peXNl5N/9W4pC+bno8Xqbhv1Zdz5VbffCK07ctOjs/cSosd+7Jnc118QPSa
vhx1LbrwnpZrX77tFuyXELm+L5fduqPrM2JjX5boMXWsSnTvy4l5PnUi3Zvp
eAOEhqoLvfqyxa3ye4JQ774cP67mcdlLn778pyY3MEHNry+3H7znob54a192
VfhWffqIf192iJya0PZ6W19+/vzCkwXDA/ryJgv+hYDNgX35wKtVT7xPB/Xl
SYObNnm2BPdl+9VpiyaPCe3LmbWT3hU7hPVlRsO7Ndua15c336883MynbLNs
FW/04XDKwXONlhpF9GX1kblHVr6jfOSmuYFL6I6+XFXo7mc5aGdfnuHdvnvC
dcqWYgc+DLDb1ZcnqNx/UdxG+bGsmOihY7v7sk5ERanx9D19+XDSoLCyYspF
+z02btke2ZdzJS3b6pWi+rLnBvO8TXcpT3O76PRuTXRfLvyScmLUL8rSZmla
gWdi+rKazlzmqnFsX551xmza2/eUNSQdNneH7u3LBfViptxBcX1ZP3CNpMpj
yoU7t+z/Y63dl7uvXR+514s+x/4pzT/f+u4lv69/zL6HPdxfxe/rn7+7hkx6
XMvv65/pnRV7Tv3g9/WPoKtsyPIGfl//7GhxDoxp4vf1z4/ZGo3Tm/l9/ZNw
VWHF3RZ+X/+sKDHf+6eV39c/Gr5K/TkCfl//jB6n7trNZuyftYFpzQ/b+X39
4yMMS9km5Pf1z8RxGvLaHfy+/imfuWtaJpuxf3ISBzwy7OT39U984aeEK2zG
/hm6sl+XXBe/r38GvZl/ZxObsX80lEQnXGcz9o/BKBn5djZj/5yRHHBGt5vf
1z/LTIYHLWcz9o+fstYYLzZj/3hcMD+1k83YP+PvSZfEsxn7R2WYJSeJzdg/
zi8K5RPYjP3zWn/b2hjI//WPe+f0/iFsxv5JuDhjmDubsX+Kv10NtmIz9s8i
t8n9Z7AZ+2dc9t91mmzG/hkx3rbuNzs/7J8ZYYITH9mM/dNdtazmNpuxf2Kj
Wk0S2Yz9w60JtvdmM/bPQdWyyIVsxv7Z8nRxvjabsX/MDcOWd7PnA/unfvMh
82I2Y/9wVg0rS2cz9s/x5+rS4WzG/rmdX8i1ZzP2j+ZkyZIpbMb+SdrkFS7F
ZuyfliOLtb6y9YH9s6OwdMcdNmP/zLtz0uXOO3Y+4XULUl4ZMRm3CjTefuEb
u9/NvRAnuZBxsJD9UvuNb+y/z+9ig4MFwzk830Whnm/cz6FzVYnDCmZaaCIT
1sg3jrs5cN8y11WM2Bbr1R58Ni9bP/ya4Wqm85OJIYfth+rFcTMWTd3GdE0f
4RrPrkdCOn/8iYDtjNttuTulbB6877nh58cBzB6+5Ut59vyExp+90y4RxDS0
nGFms3ltu86g5oXBTKPi+NNr2Pwo13zV670hzO3XU/2C2Cx+xkMhojCUeX/N
9TzUS6yEGH+/CI9JkOVuhHpawT/30OY0j1mZ2/91Ips/9z8eK2MaznjY/NwN
9Vha+9Ip52c4c/ySyWeoV4PisHrL6Ahm536pJD822zXt2PBxzA5m7mexYmc2
4/Xmx8PCopfsekrdrJoiYqPE8KV8bCte840rp+0zXXpgOrMl5aVKUzW7vbbp
hZWH5jH9xnyIrK3jGw/YsZ7XrrucUZ75OmT1T77x8IgHl8vkbJi1D+4eaGCv
NyNrsk/HjrNn3io1XPvDXm+M/iwqOz7cmbHT81t3kr3eDL+SLbvtmz9T/uFb
fQi7ftuPHPi8YMR2ZntIRcUDNgvG5YgM3BrAPKy4t4TDjlfg9TTzVnYgc050
vbE+mwPX5rdMFAYxIiu0XO3YHOyh4ZJiHMJo245S9mfzVZHo8R/8QxnvqMo1
kWx27U7+0H0ljPn7uKLqAJufick4RAbxmNb4JA3o37R1dw/8UQ9nHG//4MHn
iYMS+d4F4Qyf2bgU9n80ck3Ca5cI5uDo1ObtbDaMHho+SGQHs+gX59g6Nju9
cshaYBbH8HzqvcvZ9eRd5kcG/x3L6P1hHHIq+MZj6k6M3L57DnM2Z+XqTV/Z
9bU2SH8YtIgZXr747YvvfOOPxyLKavZZMpo9iqo32frsf5VXMMUmiKmtU78w
nz2+eWTU3CvJwUxEic/0jWyWlwuwEqkMYTzPiCzhsdnBdJlAVz6MEbyK2xbH
5jqFHK+RejymxErED+rly/s5E7Sf8Jim58FDIQ++FLR7kGc40/533kjYfmBm
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
Vh5zz7GtG86/ZMNS1dyj7P08//MUuF78Wn9j7U3jCOZLR0ER9OcqhylFbeUR
jMHsz0/hetFtNzjmtkYccylvpV8Nu55Oe755neNrM1N/7bKSYK8XpkI9Oz/t
2Uy/1IF7+ezzdKvNQ/VrExcyndXJ0u3s8/QsrxGaGl4WzPwrUWIa7PXCf672
0ScyQQy380QFPO/Gz74oM3ZZMGPs7DcUrhcfTr/YdP1ACCN9L/Mh3B9rvDi6
b3FRKLPV/9V7GO/kDUMN9Lg8pszRNQTqi5/MHL+fymMsm5se9/YbZ4ZHxrxw
pjb9vQusR1TE/fZljeFMekhcGqyX/rAnm+f4xjExc1dowvPs3JyXrcujlZng
fRvMthaz15+Lb62166YzIrfkNsqx14tHercvpQaFMoamxUfgenEl5+2mcVlh
TLxwQQ/0p+uNs5PbQ3hMd2nBIFjvD872Pika4cylUAdX+Fwj022DztFxjKTY
p+189vnO2zPER6AcxkTvOnoSrhexPmW3743jMV2psTwYf9CeCrH4Zzzmjtoi
RcivuUM/7ToRxyQ8+RhQ+D/q2SZT88fhmDBmdGukJHzf7ONpHrUPRjOLerY8
GMteL5w292xrV+Mxu0VSBsDxshQHWOje5jFb/y4MgNyvdunPl/qajOWmosfz
2euF5KPohoKqMMar3uM51Iuuru+3Vft5jEPmp9+w/e1tmV1Rc3mMwYjkN5CZ
X+ezhVU8Rm3m4oNwPk76P1MdfSOOcROu0IX75+6hpe7R++X6xjtrl7d2xWoe
M9zPSqW333/uXRk/gMeoL2l9Avtb2qYJt15m7w9sM3rvZ4a+jmva56zO/l7b
xu9l768eecrsPb+HxxQab5eD/Ye3m5TrTGfv32N+9N6//d/fF1tTPkfuGI/Z
Gcypg8+Xd2sO4i/mMRM8s1og754wTL8rL465oL8jPOd/jFdq9Gx/EQf296i6
pff7EhXKP72MYOeb8m1g0v/4Pvvd5xKmJvGY3BV3WuH4XMPvUXfn8xjFt8dq
IG/+kvr6xjr2eK0DB8P+nc+MZ0TE8phNw7f29mu39OL7ax7EMem7ssbB9Qv5
rqZcufV+NXo/UiXNDLklT+9HRIy83TRk6f3IV47irAnS9H5EfIdyyztJej9i
LPF6bnZ/ej8SU+0dVSNB70dujup4O0yC3o+UJtnf4YnT+xGfecKgP2L0fsRj
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
ZHi1lfy7/MjQnN7++Y+Hfep3/gxsjzzsoGd67+8n8rD39V5XISMP+7hrjBJk
5GH+z49t7v29/I+HPdjkz4OMPCzD1qzlYiv5d+79pmbC58jD6jNfZ0NGHjbC
Qz0CMvKwE/NzNvbyk/942LO6MYWQkYftNNl9BjLysK6f/i8utP6//h3ysJcL
prUNH0i+3b41bbUSiuTbNbev21YlR75diOeFHwoDyLcrjZfNvyVDvt2Fp5oB
YdLk24VXj70XJEW+3TrB8aILkuTb7ZXfvO5Lf/LtNuudsJzdn3y7xYbW6vD3
zpCHeT21+K4jQb7dk0Ybq2vi5NuN1M42NhUn3y7rxouFtWLk2zkWzTt0SIx8
u4RxiV5Lxci3Myqw7K8sRr7dmHiJpiou+XYpr6ftvcEl365qZ5pRIpd8O/eX
l68Hccm3S9JK0Hfnkm9nt052zRou+XZOoQcmOXLJt7M+51XoxCXfLkO74P46
Lvl20Xs3W3tzybebcfb4/TAu+XbxqSuLD3DJtxvMlV2RxiXfbnzZkuO5XPLt
mr0CXr7jkm+XmWz+poVLvt2hbMMtcmLk2yVac0aOFSPf7t2R3WoLxci3yy+Y
M2mjGPl2osf4Z/eIkW/38UOYzAUx8u32fbs+5KkY+XYe74UaP8TIt+tfK/dC
Spx8uxDf73PGiJNvJ247QWahOPl27lqH7TaJk293a5OKeZQ4+XamXpNPXxQn
v46zPenQDlXy6xpjzodvViK/rqH4+ZpP8uTXvVudpvlzAPl1lX9dTznIkl8X
MzriirIM+XXGGiVKE8XIr3PqkJ8EfBp5mNQlnf3gByIPc5EawT/DJb9Ofuyk
TXu45Nd1b1Q56sMlv05+vUs01AfyMOnKJcFQP8jD8pN/2EN9IQ97d+94MtQf
8rCKqRwRqE/kYa77F2hv55Jfl7Za+3Mkl/y6c8WzQo6Kk0939VSu9ixl8ukW
XCrs3KxAPp1KlIH9ajny6b5U7JfMkiWfzvZmoa2rDPl06zUHdswWI5/O+o3I
EzEx8unCMhx833DJp2sYdvEv+LXIw6Jt+8vFccmnk345j+/PJZ9u36rF4zdw
yad7MkQs25lLPl3WLv0hsF7Iw/b8yRNbzSWfrrOrywj2Rx7mYvP+pB+XfLrV
ZXHTdnLJp1MPcazdL07+XPtkFc1ZKuTPNQzlxlxTJH9Oqf+gFHt58ucsrz60
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
VrcvsB2r/xcAm8+8
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xe4z3UUB/DftTfX3lx7E7K5NikzlKwoo+xZZDXsTaWhJw1FVgMVykrR
U5qUkYatzKKnQb3O44/XPe9zft/nNz7f8/vdlP4jugxPk0gkkpjtz61qcpZE
YoY8nxZMMntALcd5+XG1KTvkCWodbsiD6CUX4if5HcbLtfhHXswIuQq/yx9T
h7b69Hwmv8hkHtSX54K8k8H01hfmZ3kjS6jLbWYZ+FxewZR4v/QxK8Iv8iaW
Uo92ZhnZL7/E1Hg9+poV5bi8mSepz+1mmfhCfplpDKEBd5hn5kv5FR5lKA1p
b56Fr+RXeYxhNKIxTUilKc1oTgta0orWtKGD58jK1/LKOH+Gx7nR0Twb38iv
8USccZwJncyz8638OtMZGZ+fzuY5OCCvYgajuNesGCfkd3kqPj9dzHJyUF7N
TEbTz6w4J+X3eDrOhDvNcvGd/AazGEN/sxKckt9nWZwTXc2S+V5eE7sYZ6yv
wEV5F2O5T1+S0/IWnonPpK/KH/IncV500+fmkLyWcXJN/pLnxD2SK3JJ3s1E
uS7/xbXcL6dwJu6p2oSt8kNqbf6Vn40zk6txNc5Xbc5eeZJan4UkMYtWdPRY
dzUPczkc+6Q2ZhHr9H8zN3ZFX4l5XI57qzZjMR/pH1HrsSC+vMykJeO1A9RS
nI29U1PZJj8c33Guy8/FPZSrc03ex2S5AWnopL9LzcsReT3zYvf0lbki74kz
YaC+NOfkD3g+doy7zfJxVN7A/HgPDDIrw6/yhyyPHaOHWX5+kN9kARNin7jH
vADH5LdYGPctdifud5xrvN94zXieuJ6e9KI3fegbOx57G7sY+xT3Os4rrvXc
BflRfptFccYMNivLb/J2Xohd1tfgT/lTpsgNSZt083e0NUsY6LGa1OYWalCd
alSlCpWpREUqUJ5ylKUMpSlFCiUpQXGKUZQiFKYQBSlAfvKRlzzkJplc5CQH
2clGVvzkJzKTiYxkID3pSEv8j6h1c80S/wN08Ke8
         "]]]}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Hecz3UcB/A788zj7HnOOHtLmdFUaCgVRaUhJZpIobLaAw1HdkSo7L2i
4u6ksveIhspqZ/R8P/zxfLzen9f3+73H7/v9fu6b1qNvpz45EhISEhmZeDEb
E11OcpGbPOQliXzkpwAFKURhkilCUVIoRnFKUJJSlKYMZSlHeSpQkVQqkUZl
qlCVaqRTnRrUpBa1qUNd6lGfBjSkCY1Y74a+dzMT2Ed3xrCV6tzCK2ziP+eW
l+0Ywmp26X4j2dyCJ5jH57p1rGUNq1nFSlawnGUsZQmLWcRCFjCfeezkVwr7
m815nM+Cbge/UMi6GY/xadD9SznztQxmFdt1xylovoy+fBJ0/1DWfA2DWMk2
XWV5A8PZwM+6AvJSYmPMDbpucjTfkU4nXmYjfzt+h3yDzZThPXZwNc+xIp65
88bLPdzJQd7mG9I4wth45nTkAMNYz0+u7Szzc5h34vfTlP08ypzgvA/kXu7i
EKP4lmpksJubeYmv+Ms1t8vXyaY078bz5CqeZXncu/O6yrfYQiU6MDT2Az86
fqt8lUzycQm9mR0crypvYiRf8qeulLySgSyL36pLle15kXX8oEuSTXiEj4Pu
D0qar+AZlsbz1B0jr7kxDzMr6H6nhLktA1gS96I7Sh5zI3oxM+jOUNzchv4s
5uv4nyK3uSEP8VHQbeYIuawb0JMZQZfNYXJa1+dBpgddFofIYV2PB/gw6KYx
lSlMZhITmRDvOvYU48ggk4PxHXNtXe5nWuwr3SYOJF78uNXhPqbyvm4j+7lA
bV0PpsQ+tj5NMfPl9GNR7BvdPs5Ty/peJse+sT5Firk1T7Mw3rVuL+eoaX0P
k2IfW5+kqLkVT7GAL3QV5fW8wFr26M5Sw3w3ExljXUXeyIi4jhO62+RrZFGE
ljzJfDY43kW+Ge+SCvEM2Ml1PM8adsdzlSk+9qPN/wM968WC
         
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1ufDjWUcB/AjRISQFZKMEkpmNiUrLdnbY2Q+yCabbDIrKhWl0rZX2kZG
C4UyylYUJUX1+f0RvTsvPs/3e13nPuO+7us85y6c0qdx6lWJRCI868+UNIlE
zkyJRDU5gDxpE4krfMg0OpIrXSLxnXyZWmQz/lo+T3+OeZ2T8k2GcD+lyOS4
nfIZUsnLP3zEdFKozXHPPyXfYigPUJp8/MvHzKATd3PC8afl2wzjQW7nBhLe
8xM5k87cw0nHn5HvMJyHuIP8nPLYz/JdHudhylCA0x77Rb7HCBpzJwU5E8+L
xznLOX7lN85zgd/5g4txjOcsZySPUJYb+TOeK1cwiiaUoxCX4jXlSkbTlPLc
xF/xXnIVY2hGBQqTxhp8Kp+kC3X4Oz6XXM1YmlORm7nK8Z/JWXTlXi7HOcg1
jKMFlShCWsdvlrN5lLqxZ+J85VrG05K7yOzYXXIBfShKOnNb5By6UY/rzH0j
FzEg9kmsnVzHBFpxvWO+lYupzLXGX8iF9I39ZXxAvkox0htvlXNjrfUjsju5
9X3yFeqT3Xi3fCHWTz8qB8Z+0n+Qt8rX49zl8diTcU3l+ngfc0/EnpCHZQnZ
Wi6hClmMv5TF5bNx7eRP8jbZT+aT38tb5GtxPeSxOJ6r9W1yXuwH/UfZgzz6
frmUBuQw3iNfZBD5jQ/KZSRij7GBibShKlkd85V8jsfi/clg7nM5n540jL0U
+5CNTKIt1WJNyOj47fIpenFf7KXYm7zPZNpRPdYl9k3sQzYxhfbUiLWIPRHX
K845Pke8NteQKfZQXOtYy/jcZIv9Etctzp2csTfIxWU+YCodqEnJeC2fdYd8
mt40iueZ2ytfYjAFjA/JNyiqn4jnytyyq6Wc7f9jXSaTlqqMZJvHLlJG789z
+ibOUMy4G8P1J3mPg+Q115ouemc6kUJHOtCedrSlDa1pRUta0JxmNKUJw5jJ
u/xAHq/dikf0oczgHb4nt/mWNI7fAN7nNEXNPcoQfTpvc4Bc5lrwsL6QjZyi
iLmuDNY/5TdKGqcyTX+L/Vxv3JyH4ndHVmEEW43/4A79MRboV6gQn4ENek05
lpP6zbFeDNLryIkkmMFdscZ8YmqWrM14fjWeJm+jN1ON/+LNuB7G1RnNPuOp
8VtIMx40vldOIg0zqczjbPHY3XICv+u3y348o1+mfKwJ6/Uacgwn9MKyMwP1
f6mkD+Nj/Rwl9F5M0S9RNo7lDf07cuhNeUDfzAVKG/flaX0dx7nJuFP8nusf
cZZbjXvG3tWX8S3ZjZtwv/4UazlGIXMpsZf1SbzOXq6L/UQjfT5rOMqN5jrG
NdQn8hp7yBZ7jPv0eazmJwqa6xBrpj/Bq+wma+wxGup9mcBSviFL7B8a6H0Y
zyt8zbVxvaivpzKOl/mKzLFe1NPrxjWNvcM9cQ2pTa3YZ3GtqE41ejOWJXxJ
plin+M7rvRjDYr7gmliT2Nd6T0bzErvIGOcfe0efyyp+pIC59vTQR/EiO8kQ
5x/7WZ/DSo6Q31w7uusjeYEdXB1rQiV9Nis4zA3m2sb/Hv1DfuGWeL/47umL
2E76WDcq6p9xnlLGfZil/025+M6xXD9EPr1N/K/Q/6GiPpQPYi3lOH7Wi8fn
je9MrLecniZ5v5m830zebybvN5P3m8n7zeT9ZvJ+M3m/mbzf/H/vN/8DGmGD
Gw==
         "]]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{53, 2577, 390, 383, 741}}], 
         PolygonBox[{{53, 2577, 390, 397, 394, 383, 741}}], 
         PolygonBox[CompressedData["
1:eJzt1vffTnUYB/DHikQkMqKslEJGhCgRZe9N4zHLeCIaUooKmWXvEYUQWWU1
jIY9smkYDSQjKqXe16v+hX67f3g/1+e6zn3Oc9/nfM95nQLJKY26p05KSgqT
/BmVKikpW8Z/8wH5Y/UlarKP8eRjGyNoyQafW6I+RSWyspmhNOOM7RvV16hP
IUabTVMf4Tb+1B/kE/llanETG82Wqr2ozHX8YjaG6fKjFOUv/SE+Y5m+N/eS
jbNmY5khP8btXNEf5nOW65/mPq7nnNk4ZsrJ3MHf+iN8wXjeMmtHsf9O3tdm
XzKBWfr2FCcV35htYiKTmMwUpsY5iN8R3y3+Xxw39md2sG8HSpCab80283bQ
d+RO0vCd2RbeCfpOlCQtR822MifoO1OKdBwz28YK+RmqkJ3zZnOD/DiluYrj
Ztv5QH6W+8nBBbN5QX6CMqTnhNkOPpSfoyo38KvZu0Huwl1k4HuzT9X+1OZm
dpqtVPtQjZxcjGutDqQBhZlvNl/tSlmuZhNDaMIPtq9TB1CH/GxnJK3YZfsq
9XkeYA9jycUWhtGcS7Fu1EE05AATuSW+K2/GtaINh5jCAvssULtxhHJ8xZi4
dmSkKT/63Hr1lVhT1GU/E+I6UoAdvBHritYcZDK77bta7Ut19jKO3GxlOC34
LdaxOphGFInfzijastD2hWo8GO7mGn4y26C+Sj0Kxvc3W6O+QA3y8LvZe0FO
oTyZOGm2h7XyizzIjfxhtijIT1KBzJwy28vioO9BRa7ltNk+3o/nTjwf4p6P
+zjWcazNWG+xZuJ6xjmJ7xn/m4/imRbPmVhnsR7iOI7Zk3vIws9m++Ozcj8e
Ii+X4x5XX6cxt8Y5ZzQPc5ipHGO9z7ZN67jp3KN04bz+VrUda+UfuUluxSh5
KV+TXd+AnvJrvMNO0ptVo43cmla0pAXNaUZTmtCYRjSkAfWpR13qUJsevMrb
7OAqx65KLflJXmE220lnfj815TdZwhGuN6tPijyAWWwjrVkVHpLf4H0Ok82s
Ht3lDzlGbn1T+stvsZU0+vt4UD5HETmZNfIP5JNbMlL+mYLywyyWb1c7cki+
Tq1LN7m4+ji/yN3VwjzKB3Eu1DvoxFF9NzUXTXhZf5KZcV70t9GeLfquamru
pYa+hPoEZ+UU9RYeY7W+mNqZ7+W8agtGyKcpILdlkVxU7cBBOatah67yGQrJ
j7BC/o6ccmNekn/iZrk1M+TNpJIrU11exQlu1DdnuPweB8iirx3rVF7Ot9yg
b0Q/eTqbSNJX4gF5GAvZz7WxbuK3yy8yjS/5m3ti3apDWcA+Msdaiushv8BU
vuAKFWMdqkOYz14yxVqK8yf3ZQqf8xcVYm2qnXieyXzGn5SPdah2pA+T2Mhl
7o41pnbgOSaygT8oF9dUrUyl+A3xveJ/xTFj3/gMZbmLMrTnWSawnt9ju+OU
VtvxDONZx2+xn22l1GSeZhyfcimOZ1tJ9XXeZQ/XxP0Q60nuzVg+4SKl4zmj
DmYeX5Ex1mSscbkXY/iYXyllXkIdxFx2c3Wsk1hf8jK+IYe+IU/Jo/mIC5Q0
K66u5Dh59M0YKJ8ifzynmCPvIkOsmbhH5ezeL4ulTbxrJt41E++aiXfNxLtm
4l0z8a6ZeNdMvGsm3jX/v3fNfwCZw7Ri
          "]]}]}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1vf/TXUcB/BrVjZl762MUCJEUtkqlRFSMspOGggJlSJ7b00jmdGQUSF7
JYXKiMheDUrP97/R4/7w/L4+r885955zz/mcx/cUbtu9SbeUiUQi9PWnTopE
Inu6RGKTntr4cppE4l16p00k7iEbJ/RN9KKDfivXjL9nBe/Rx1xtbuR3fTPP
01EvT4K9+qe8T1/9Xm7ipL6FF3har0AKftA/4wNe5BlzFUnJj/rnfMhLdDJ3
G6nYp3/BnPgdcW5xPF6mH/0ZwCsM5FUGMZjOPn87qdmvr2QuQ+hirhJpOKB/
yTxeo6u5O0jLT/oq5vM63cxV5jp+1lfzUZyPfh/ZOaVv5Q2661W4nl/0NSyI
c9fvJwen9W0MpYd+JzdwUF/Lx/E79Trk5Iy+nTd5Vq9KOg7pX8XvM25MAf7Q
F8Y1Mq5LLs7qO+J4xk0owhX9LXoaVyM9h/Xhsikl+Dquj3yAgvypj5QtuIVF
cR9kPXIznjacM/+2bEYpdsa5y4cpyiTactX8aNmSmZRhCu0YZttzsjrTyMA4
HmcWR2wvKb+J+yQfZDqFmMiTzOYv20fJx5hBaSbzFItjDcn65GECT3De/AjZ
nJvZFddKPkIx/tHHyFaUZXg8X/IuMvKrvi7Wg/FDFOZvfUmsV+MG5OWCvjuu
VTxveg0ycVRfz9JY23pD8nFR/y7OLZ43vSaZOaZvYFncn3jezN1NFn7Tv+WT
uA5xvePcGcs4xjOBiUxiMlOYyjSmM4OZzGJ2PLO+txZZOa5vZHk8g3oj8nNJ
38Mw40cpzr9xXNmackylPe8E23Kkcn9SO2dZTM6Xv5DP+EU5m++5UW8ouzKR
LdxgrrSsyRO8xWqukp2b4nNkIytZyEwmMpKB9KSL7+J6riMtaUjNLdSgDW+y
iiuk4mbu4nGG8iV/k5IGdGECm+O7nWspWZ3WvMFK/iIF9enMeDbFedi/pOzJ
NHbGeZurJlvxOl/wJwnm8TN57fOCnMWe+O16PfkB+8ipd5KHKWg8Tm6M32xc
Qh6liPEcWVIekLnls3Et5BFZSE6VJeSOuJayqnyXlnFd9IMyv3xNFpefyz+4
5n/YMVnU3FxZSv4k88jn5a8UNp4pv4v7ZlxXvs+P5NCfkYcoYDxWfhv3y7i4
/JD95NJ7yClsj3ut3ynfYW+sDf0xOYTPuMy/zq2XnMHuWC/2qSOfZgwbYk2Y
Kya7M5ltsYbMVZEtGMynXOIf33e/7Mho1se6sW9RWZnmDGIFF7lq//tkB0ax
LtaS/YvIO2jGqyznQqxD+98r2zOSb2It2b+wrERTBvIJ52Nt2r+QvJ1HeYVl
nIt1aFtBeRuPMIClnI01ZlsBWZGH6c8SzsQ9te0yl7jIBc5zjrOc4TSnOEl+
n6lAE/qxmNP8bls+WZ6HeJlFnOKEbXnlrTxIXxZykuO21ZbtGMHXqeLFyHqS
5XiAPnwcx+A3+98jn+Jtvoo1SW7K0pjeLIjjcsz+tWRbhrM21kmsL7oxia2k
c8wyshEv8VGcG0d9/jk5nV1ktt/d8j1+ILv+pBzGmlgz5KRXiuS7XvJdL/mu
l3zXS77rJd/1ku96yXe95Lve//ld7z/1TIWQ
         "]]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{741, 2579, 316, 305, 1395}}], 
         PolygonBox[{{741, 2579, 316, 372, 327, 305, 1395}}], 
         PolygonBox[CompressedData["
1:eJzt1vf/VXMcB/ArLYmiFBEVaWgoFE2VdmlHVNKOdknSQgjRUIqK9t4bhfae
KisaFEVDaWh6vv8Nj/vDs/fr8z73nHvuOe9vj0/O5p3qdkyRSCRCL/8USJlI
ZE6XSDRVn0iVSKTlW3kajeUc/CW/TUM5G4flLyjIg9b/qF8znG7U0buNA/Ji
nqOi9Q3slqczkEIU0TurfsMIutOMSvrp2CPP4B0KU1TvnLqSj3iJ56msfyN7
5Zm8G/fGQ3rn1VWMpAfN43t52LEL6mpG8TIt4jt4xLF/1TV8TE9axvXivDhO
MYrzKI9RgpKUojRl4jOuc1Fdyye8QivKxrmOXVLXMZpetObxuKZjl9X1jOFV
2lAuvsuxK+oGxtKbtlTRT8938izeo3zcl95VdSOf0od2VNW/ie/l2QyiQvwG
vWvqJj6jLy9QTf9mfpDn8H7MTPxevQSb5XH0o651Fg7KS3iR6tYZ+FGeywc8
ZX0nR+QvY07i2VlfxxZ5PM/K93BM7k89OSuH5KUxX/K9nJTbU0POyE/xrNV8
zJObqDk5Lg/mafkufo/npxZgecyTmptO/B2/XS1EpXinagraszVmQs1LZyZY
/8lr1Le+nQ78Gu9OfYAuLIsZV++jI6fifagF4/NyTfUW9sU8qPmZLzdVc3FC
HkIjOTt/yCtiruX7OR1/DzFj8vVskyfyOg2s7+A3+XM68qT1rfwsL2BozFLM
oV5KtsuTeINO1NLLxC/yQobFLMVs6qVihzyZAXSOuYk51E/NTnkKb9IlZiLe
V/zmuI+4NrWpEzMU7zqeZdw3DWNe4r3Fb+eZmA0ax9y6dhp2yVN5i65xLb3M
7JcX8WGcZ303R+WvaCHn4UzMqVqYrjSx3p2aNP6vYSvP8QFrKUxD3mIFabif
J+nLYv5w/iWyyeXpynS+1dvFTnawnW1sZQub2cRGNrCedaxlDatZxe9c5A7X
LEcXprFS7wj/crv143RmKt/opVZzU5M+LOKw/gWyymXpxBS+1kul3kcNerOQ
3/QfUOvyOp9zXi+LWoaOTOYrvabq+6yhEA14k+Wk5BneiXvjXoaygeq8ygJ+
dZ3h6mYas4P3WEX+eKYMYyN12M5rLOOcc59Wb2MXg1lHabbRgUnxHn1uhLqF
JuxkEKspyIdsoj4D+JLracTAeFbkYgjrqUYv5nPItZ9V3433Qz5q05+lnHX8
KfXteGZkphTtmRjPyvECaj3e4AtSkJOqvMI8DvpcXrUW/VjCP3qZ1JK8yIS4
d73r1BxUoSdzOaB/hlvlErzA+Pg+vYR6D5V5mTns1z/NLfJjtGNczIPeNe6W
K9GD2fyi9zcZ5Udpy2fxnvR+5hQZrIvThk/j+ejt4yQ3WxejNWPj9+n9xAlu
sn6EVoxhsd4iFrKA+cxjLnOYzSxmMoMfOU565z5MS0YzXe8H/uJG64dowSdM
0/ueP0lnXZTmfMxUvatklyvyErP4Tu8YN8hFeJ5RTNG7wl3yE3RnJnv1jpJW
fpBmjGSy3mXulCvQjRns0cujZrG3m5Q6uc9L7vOS+7zkPi+5z0vu85L7vOQ+
L7nP+7/u8/4Di/6Pqw==
          "]]}]}, {}, {}, {}, {}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1lW7VUUABuAN0ildgtIpKaEgoHR3SyMhqXQ30tLd0kq30t1g0J0KSLeU
7/oJ3u+L93zzzay1z9qzznmeSd2kfdV2EUOhUKCyHy9kkhih0MmoodDGaKHQ
IGqRhyRE5iCTaEUJMnPK9ZvkYGrzCUmJwmlrv8gh1CEvyYjKGWu/yu+pSz6S
E42z1s5xngtc5BKXucJVrnGdG2x2z1DqkZ8UROemtS1yGF9RgA+IwV/Wtsrh
1OdTUhKTv61tkyNowGekIhaHmMw3lCQLt1y/XY6kIQX5kNgcZgqtKUVWbrt+
hxxFIwrxEXE4wlTaUJps3HH9TjmaxnxOav5kDh2pRFyOMo22lOHj4D0wn65U
4x+ft0v+QBMKc57F9CQNJ5hLJypziZ/oy/scYzrtuMEqynKBJfQme/CeWUC3
YF9ZS3WusIz79A/2hPXc9Wy75ZjgOWnKdVbygCL0Ii0nmRfcQ+fgnbKGh1Th
Mj9zj37Be2Id8TjODNpzk9WU4yJL6UMOzrKQ7tTgKssZEHyuZ90jx9KMoqTj
FD/SharE5zdm0oHy5Ay+u/v3ynF8zRekJwG/M4tvqUCu4Pu7fp8cT3O+JAMJ
g+9sbb+cQAuKkZFEPLL2mCc85RnPecFL/uUVr3nDW94Rcm8EIvIeB5hIS4qT
icT8wWy+oyK5OccielCTa6xgIHfYEDwXkYK9ikwUe8AMslOfCby1ll7WYCQn
9aekNK7AIDboB7lFPP0LujFPn8scZjOLmcxgOtOYyhQmM4mJTGA84xjLeg7w
N+/73KJ0ZYy+jv38RVxzRejCD/oJnvCBXp6BrNX3cZM4emE6M1r/k8ek0Msx
gDX6v6Q2rsJQ9uo3iG38OZ0YpX8sv2I8b/R0sjoj+EPPLGsHz8YjvZGcTHLK
0p/V5pvKaWRlNnUZy0tr82RjpvARs6jM9+yxnlFeD/ZdNmAisZhJIToG79F6
MzmdbMyhHuN4ba2JnEpaqjGc381nkrWCveKh3lBOIhll6Mcq81lkneD98EL/
UFZiCLv1DLJmsGdc02PKgnwX7JX+ijTGVRnGb/oDkhqXpi8r9eekMq7IYHbp
V4lh/BnfBs+uH+c+SfRS9GGFvpMrRNc/pUPw+/Rj3COxXpLeLNd3cJloegHa
B38P+lHukkgvQS+W6du5RFQ9P+2C96T/zDYuEsVcPtoG+6P/xFYuENlcXtoE
309fyhbOE8ncJ7RmkD6QAfSnH33pQ2960ZMedGcJmznHe+7Pwzd00xfzK2eJ
aC43reiqL+IXzhDBXC5a0kU/wj8k1IvTk4X6Jk4T0nPSgs76Ye6QQC9GDxbo
GznFO3KYax78fxkf4jbx9S/pznz9WbAXEcLnp/D5KXx+Cp+fwuen8PkpfH4K
n5/C56f/e376D4+1iP8=
         "]]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{1395, 2581, 203, 158, 2005}}], 
         PolygonBox[{{1395, 2581, 203, 260, 248, 158, 2005}}], 
         PolygonBox[CompressedData["
1:eJzt1vf/zVUcB/CL8LUzo+yVsrIqm8pIshXJSLaQvUdKIhQqGVnZKVkhI3vv
LbPsvffqef6Ffr4/PL+vc97387n3fM75nO/jZGncrkbb2JFIJKjuz5R4kUia
hJHIi/EjkX3as2RH3uQFHqlNZZR2I14hhvNq+/lFuxNvkZ7HatP4UfsjCpCA
C2oHmK3dmXJk4InadEZrN6YgCbmodpAZjNH/mEIk4pLaIWYyVr8JhUnMZbW/
w3OEsYXf41d+Yw6/M5d5zGcBCxnn3qYUIQlX1A7zBz/pN+NVknJV7QiLGK/f
nNdIxjW1oyxmgn4LXudZrqsdC+PR7kJ5MvJUbQkTtVtSlOTcUDsexq7dlQpk
IsKf6pNkK4qRgptqJ8JzanejIpmJxVL1ybI1xUnJrfB8si9VycU/YY5kd94m
C7HD7/E5NcnDMtf9LD+hBKlYwUDe53aYH9mParzEKgZTj3/DOsgeVGID35KV
v/iKusQJY+cLarGZkeRlDUPYRX228j3LffcU2YbtlGQ937Cb1NThTlgn+Rk7
qM4mRrCHl1nN1+zkQ7bwHSfDOyR78g4bGU42VjKID3gmzBUDqE0+1jKUBmHO
wv6SbSlFGu6G90H2pwa5ORXeV9mLymQnbpirsN9kO0rzHPfUTod3W7s375KD
eGFsYb/JTylDWu6rnWFV2G/67SlLOh6onWU1a1jLOtazgY1sYjNb2Mo2trOD
nexiN3vCnvWdHXiD53modi7sQe0+VCEn8cM68iXvkZ91DKMh2/iBvYH7syaw
x/wf2ycTyElyG7G0O8kfWcd9qvEJ37Kc6xSmPI35kvmcJQuZyURGMpCeF3ie
dKTlOdKQmlSkJAXJw7goRDk+YgDzOEMyCvIWjfiCuZwmKVVpzTcs4xoFeJOG
fM7vnCIJVWjFMJZylVf4lO9YxW3eoAH9mcNJEjORrUTMW0c5irXc413GsZFH
tGQnz7h2qPyTK+RnD/HVx4fvlZvlE9qFZ9bfJePKkTKRXClvUZYx1A/Pr75d
xpafyYTyN/lvuIe9xKhNCM8ut8indGA38dR+kGu4S2XGsoGHtGAHcVw3RC7h
Mvn4iU08pi0j+IublGE063nAh/TjV/4J46Q937OaO7xDc75mMZfISxuGs4Ib
lKYefZnNCRJQiWYMZhEXyUMpPqAPv3A8zAlv05RB/MEFclOSuvRmFsfCOlGR
JnzFQs7zMiWoQy9mcjTMKy9RnPfpyQyOhDUlF8V4jx5M53B4T3iRotSmO9P4
O6xBWGdiEQnrGON94TGPeMgD7nOPnK55nVp0YyqHwjr7LId8jZp0ZQoHwzr4
LLt8lRp04WcOcNtnFeTHDGQB58hGEarTmcns55br03pvbsZEz1DRM1T0DBU9
Q0XPUNEzVPQMFT1DRc9Q/+cM9R8FyocY
          "]]}]}, {}, {}}, {{}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 50}]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw103ec13McB/BfehidWZFZXENG0UPUje6umyjVObNcRdKd0R2ly3F3ZNyo
ay8Nj4ZVRtGyyighD6IoK8qKyMh8EOX5/sMfz3u/3u/f9/Ebn8/7koeUF5U1
SSQSl/rTPCmRqFXHk0uV+fXqqfwg36P25GW5Uu3GPrmEYvl4dsjLqZC7slee
TLnciV/l1+jGBfoDeUueRzU36Dvyo/wKpQzUn8Dn8gqm0J0LzQ7ibXk+NfF9
GWR2Il/IK5lKCr3MDmajvIA74/MYbHYSX8qrmEYqvc0O4R15IXdxI2lcZN6M
d+UHGcNNpNPHPIlN8kPczXB6kEEmWfQkmxxyySOfAs6nr/c4lM3yw3H+lMW5
0c/8MN6TH+HeOOM4EwrND+d9+VHu4+b4/VxsfgRb5EXUcgtXm7XmK/kZpsfv
p8jsSLbKi6ljBNeYteFr+VlmxJlwidlRfCA/Rj0jGWJ2Mjvl55gZ5/T/3vGh
/DgNccb60/hJXsutXKs/hW/k57k/fpO+M7/Jr8d5cZm+BR/JTzBKPoe/5LFx
R/Lp/Cyv43a5O/vjWYbKyXwbd6pm8oI8Wj2Xf+RZcWbyWfwe56vm8IZcpaYy
kSbUk08/r12utmQcH8c+qRlM4kn934yLXdGfQSN74m7VbCbzqv4ONYUJ8Y9L
HXlUaK9T27Ir9k7NYrV8m3oe/8qz4w7ls/lD3kC1nMYBFOqvUI/mE3kJjbF7
+jP5RV4fZ8IwfTu+k9cwJ3aMK82OYZu8lPHxHSgxa8/38ovMjR2jv1krPpWf
YgKVsU8MMD+Wz+SnmRj3FrsT9x3nGt83PjPeJ57nKooZyCAGx47H3sYuxj7F
Xcd5xbPe+zi2y8uYFGdMqVkHdssv8UDssr4Lf8pvUiOn05QGCpjCMK/9B1YR
oe4=
        "]], LineBox[CompressedData["
1:eJwV1HeAj3UcB/DfKcU11EWSiovQNJJo0ZYGTloaOlHIHUqaVjsadIO7I2Vk
HO3M9t2VcKNyuDuUziga2hOvzx+v3+fzeT/j9/x+z/d5UtMz0zKSEolEmo+U
5EQiv04iUaX/UB3HFWxgKsdTxvPcSLH93lLv4TyOYA2TuI6fbC9Rn6AnLciS
vaTeRhv+M1fzkX48PTiBEtnb6r2cz5H8LMtmpr4/J/O/uYZPecc8igtIYY8s
h5f1t3MKe82b+Ix3zffRlaP4RZbLK/p0TmWfeTOrmMos2QBOI8EW2edMY7b5
Dk4nia9lq8kjnwKmMyP+g/gdcW3xfXHeOJ45wbEDOYM6fCNbw9xgHkRbDmCr
bC2vBvOdtONAvpWVMi+Y76I9damVlbFEP5puNORX2fygH0wHDmKbrJyl+vu5
kEb8JlsQ9EM4k4PZLqtgmf4BLuJofpctDPqhdKQeO2QfqxO4kmZ8IVuuPsjF
NOaPuNfqk/SiJYWyQvVuzqI+q5nItey0/RP1Ua6iOeW8wE18afsK9SEuoZIc
jmEtz3I9f8a6UZ+iN1XkcVJcK1PiXnEzNUxnkWMWqcPYTCfWkR33jmT68p39
itTHYk1xNRuZFveRVCqYHOuKflRTwFeOXak+zKWsJ5cmlPIcN/BXrGP1adJo
Fb+dF7mFxbYvVjM4m0P4XlasPs41nBjXL3tPfYTLOJa/Za8FfSadOZRdskre
14/hcpryj+z1oB9OFw5jt2w9bwTzCM7hcH6QbeDNeO/E+yGe+XiOYx3H2oz1
Fmsm7mf8J3Gd8d18EO+0eM/EOov1EOdxzpGcSwN+lG2MffVj6c5x/BvPuPoM
fWgd/zlZ3MomZlBLkX33A1ykv1U=
        "]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0neAj3UcwPEHl3HKlctxncaVGRqihZbQNaQLSUrJjrvUZVSiYWUWTVFR
aSEqMipFS8pIy2pybmTTsHp9/njd+/k+931+v9/zPJ/sbvm5eWWSJMnxJz01
SZprAdXLJclhPmEcd1AtJUl+1le5jDTr73Q697KtbJIU6WwGcx0NSbXvW32O
PGpwhE8ZTzcup9D1xTqHIbSlEZkcZTkTuJMr2G5/ic7lfq7nLE4i8Z0rdCLd
aUmR/aX6Dg/QjrPJotj//tJ5PMgNnENNSvxvh85nKLmcy8mUxnXxf3ayi93s
YS/72M8B/o49rnmXh7iRxpzCP3Gtvscw2nMep/JvfKa+z3A60ITT+C++Sxfw
MB1pSjZlPIPPdBI9uJKD8bt0IY9wE+dzOmXt/1yfoCetOBT3oB/wKJ24gDMo
Z/8X+iS9aB0zE/eri3iMm7mQyvau1ufJpxYpzn2pk+lNG453br2+SEHMSTw7
XcwIOnOiPT/pTC7iWOs1OpW7Y76sN+nr1OYY6690Sjxrx79rHzIcb9DXuIoT
rL/Xl+L5Od6q98U8Od6i9fTNuHctjJmMd6pL4nucGxkzob9pfb1FX+FijrNe
q3X0hXh3+qeeqQM0UzdrXX0j3odui/2Ud7xSn4p5cPyH9qW64406ixyqWv+g
LzOQLOtf9C2SmDGWMoouNKOKPet0GvfE91PBua/1ae7i6pilmEM+ZDS30jye
CRXtX6XP0I9rYpZiNvmIMdxGi3guMTcxh3zM43TlkngWMRPxvuKe43fEZ1OJ
1JiheNfxLON3kxbzEu8t7p30mA2qcYhljOV2LqVBfJbf+o0+S3+ujeuc+1Fn
MIia1r/q29RyvD2u1Qz9H4/EooQ=
        "]], LineBox[CompressedData["
1:eJwV03lgl3McB/BnbKrpkimKakjEtnLlSqeNHLXRcmzDVlGtHaUidN/uK0eO
yk0niqJyXx0URQgVytFByZHK6/PHa5/39/P8nu9zfZZZWllQkZIkSZ4/GelJ
UpKaJF3SkqQmn8nPUSQ35zd5AoVyY36UF5FFa+td6lLuZxD5eofxvTyfqznP
uhafy88zkWza6P2pvskD3MA15Oqns0Z+gUnkcLLebvUtpjCYa8nTP5i18otM
jnvjFL2/1Ld5kCGUxnU51bG/1Xd4iKGUxTU4zbF/1Hd5mBvpFfvFeXGc02nL
GZzJWZzNObTj3PiNff5V3+MRbqI37eNcx/ao7zOVYfShQ+zp2H/qBzzKzVxH
x7iWY3vVD3mMW7ie8/Vr84U8k9voFPelt0/9iMe5lb5coF+HL+VZ3E7neAa9
/erHPMFw+tFVvy7r5NncETMTz6uXsEyexggKrBuyQV5Afy60rsdX8hzupKd1
E36SX485iXdnncJyeTpXyc34RR7JpXIjNsqvxnzJx7BdLuciuT5fx7tWT2Cu
XKxmslW+i8vlI9kc7089iTdintQWVPJ7PLuaTW58U/UAylkRM6EeTxUzrH9l
FJdZH84ANsW3U0+kmtdixtVjqWBHfA81K34vX6wewjcxD2or5skl6tFsk+/m
CvkotsiLY67l4/gj/h9ixuQDWSk/yWh6WB/BD/JCKrjEugHr5Ze4J2Yp5lAv
lU/kpxhDJd30DuVb+WXujVmK2dRL41P5acZSFXMTc6h/EKvkZxhHdcxEfK94
5riP2Jvu5McMxbeOdxn3TWHMS3y3eHaujNmgKObW3jVYLT/LeAbGXnoZfCe/
wn1xnnVTfpaXUCa3ZGfMqZrDQIqt/wewZZzi
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwV03ec13McwPHv5SoODblklKYyispMhRJN6lAo5EhZd6SlidLQnay7bi8q
M9nZZLsiUpRRVkhG0Z7P9x/Pe39en+/jd9/v7/v7fptlZmdkpSRJ0tGf9LQk
qbZOtd5aM0ke485aSdKNw9igqxnFDfpk9ll/zWLmMd5edxrwp17KaIbrU0j4
Rr/KfCbo8zmcjXoZYxih25PCav0aCxjLjfY6UIM1+nUeZxw32evIAXyr3+CJ
+B5xbXE+JjKJyUzhLu7mHqYyjZt9/lRS+U6/yZPcyy32TqMm3+u3eIrp3Grv
dGrxg36bp5lBlr0zqM1a/Q7PxPXoHqTzl/6MmWTrMzmQdfpdFsa16wtoyN/6
c2Zxmz6Lg/hRL+HZ+J76Qo7gH72c+7hddyKNn/R78f2sL6IJ2/SiuEfWPWnE
v/qLOJ91Bs3ZpWcz0vpsDuZnnWsO5Djej/tjXsyxbNcPmFdwAs/F72D24kjy
uYZN9u83B9GGL+PazUtoQSGZ7Lb/kDmYCk6imOvJcewOszOlHEIeV1PJL463
Nj+I38nsTxlNKeBaqtjh+IPmlZRzIkVcx/PxDJm9OYq5DGWz/Tnm5RzPirhX
5qW0ZI9+2BxCW3Lj/TK7cCi/6g/jebAeQDN26hfiebXuw9H8p7+KexXvm+5K
Hdbrj3gxnm3dl2P4X6+Ma4v3TZ9DXX7TH/NS/D7xvtk7l3r8rj/h5bgPcb/j
2nmEPPKZSwGFFFFMCaWUUU4FlVTFO+v/nkd9/tCf8kq8g7ofjdmiV5FjfRmt
2BvnNa+iHSUM49Hg2H5UEqMT
        "]], LineBox[CompressedData["
1:eJwV03fcT1UcB/BrPWSTbJkRkpFZiZQtW0YqexQeo5JQoRLZqyibMgtlRMh4
HptnpGGXnayyR/U+f7x/3+/5vH733nPPPadwp9jmfVJEUVTeT870UVQibRQd
jImiJeoAniMf92QL+VTfgXKk47zsZ5bq3+B58nNf9iWf6TtSngf4U/YLy/Rv
UpsC/Cv7iun6TlQgPRdkv7KIGcadeYIM/CX7jcV8btyFimTkouxQeI8wt/A8
lvM137CClaziW75jNV+4tiuVyMQl2WHWMNO4G5XJzGXZEdYyy7g7VcjCFdlR
1jHbuAdVycpV2bEwH/1b1OFh/pN9zxx9T6qRjb9lx8Pc9QOpS0Ei1svnqq/x
JNn5R3YivKf+bepRiBRskM9TX+cpHuRaeD/1PZrwKL+HNVIHUZ/CpAzPYwQt
eIwf/G++2ounycEmRtKa62F91PdpSkm2MJqX+CN8B/UdGrCDCRRhMx/TllRh
7nxAS3YzmTJsYwyJvMxeprLRvReovdlPdeIZTxIP0YYb4TupwzhAM3YxiWRK
sZVPSKA9e5jCybCH1ME0ZCcTKcqPjKIdqcNa8SGteJztjOWVsGbhfKl9eIac
3Az7QR1Oc0pzKuxXdQiNKEaasFbhvKmx1CAXt2Snw97WD+UFHiEmzC2cN7Uv
NcnNbdkZtoTzZtyPZ8nDHdlZtrKN7cQRzw52sovd7GEv+9jPARJIJInkcGbd
sz+1yMtd2blwBvXv0pjipA3fkY94kbLEMY5X2cc0fgpc/z/IeqzT
        "]]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0VUYEFUQBtAFpENAEAlRkA5B6ZbubgQpSenu7gbpVkKUTpUupTulu7tE
ybMPZ/+Hmbvf3DspGrWt0iZCEATJfRLFCIKTUYPgj2hBMIiaZCMRkdnLZFpQ
nPSc0v+nHEwtsvMJUTittl4OoTY5SExU/lHbIIdSh5wkIRpn1M5yjvNc4CKX
uMwVrnKN62x0ZhjfkoukROeG2iY5nLrkJhkxuKm2WY6gHnn4lJjcUtsiR/Id
eUlOLPYxhZaUIAO39W+Vo6hPPj4jNvuZyg+UJCN39G+To2lAfj4nDgeYRitK
kYm7+rfLMTSkACk4zlw6UpEPOch0WlOazOEemE9XqnLP/3bIsTSiIOdYRE9S
coKf6EQlLrKYvsTlEDNow3VWUobz/Epvvgz3zAK6he/KGqpxmaU8pH/4Jqzj
vtl2ynHhnDTmGit4RCF68QUn+Tk8Q+dwp6zmMZW5xBIe0C/cE2uJx2Fm0pYb
rKIsF/iNPmThDAvpTnWusIwB4X/N+pccz/d8QypOMY8uVCE+R5hFO8qRNby7
83/LCTShMKn5iKPMpj3l+Sq8v/5d8keaUoQ0JAjvrLZbTqQZRUlLQp6oPeUZ
z3nBv7zkP/7nFa95w1veETgbgYhEYg+TaE4x0vExx5hDByrwNWf5hR7U4CrL
Gchdfg/n4gPeA7vwpAY=
        "]], LineBox[CompressedData["
1:eJwV0necj3UAwPHn7LtsJWVkZiVFsik7I5wRaSE7d1b2JnuTvfdqUEIqyiiF
lB1llJ3tuDt3eD9/vH+f3+/7fJ/f6/l+v0++NrHRMRFBEOTxkSMqCO6mC4Kj
kUGwlI9pTBkKcImvGU1bahNn/jFdRm+ieZWC3HPtuC6nD00oSyHuu3ZCV9CX
ppTjeeJdSyCRBySRzEMeEZgTQQpS8hcr6UczylOYVJxkFf1pTgWKkJpTrGYA
b1GRoqThb9YwkBZUohiX2cQYPqQOafmHtQyiJZUpzhW+YSzteIN0nGYdg3mb
KrzAVTYzjvbUJZIzrGcIrajKbX5gKl0pwf9sYTwdqBeeAz/xKd2J4iyfMZR3
SGQPc3iNO2xnGjEks5cFvMg1tjIhPAPvze/akQf8zDzqh+fMTmaG+2ren9qD
R/xGBmOLwj3Rw/oE5/g8fE5jw8Jz1gOaUd/VubzOXXaE9xifHp6p/qGZNFYf
8ivp/V4YnpMe0pJc51smhu+J8YPaiSR+YT4NiGcXs+hJYO4+XRz+L//yBcN5
j2rE8SMz6MZL3GAbk+jMm+Ha+Y8vGcH7VOdlbvIdk+lCw3D9nGcDI/mAGpQK
18wFNvIJralJaTKThaxk40meIjtPk4NneJac5CI3eXiOvOTjIl8xijbU4hVu
8T1T+IhGJLCb2fQiwr7t1yVE+n4kfC7Nr48BEAaXuQ==
        "]]}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.994674723888705},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 984.8857801796104}, Automatic},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.00022690666012768813`, 0.00022690666012768813`}}]], "Output",
 CellChangeTimes->{
  3.662404459246986*^9, 3.662404598895645*^9, 3.662405222464849*^9, 
   3.662405718428056*^9, 3.662406297584968*^9, 3.662406330339636*^9, 
   3.662406417572104*^9, 3.662406805347022*^9, 3.662406839001141*^9, {
   3.66240688798071*^9, 3.6624069126876163`*^9}, {3.662406984717441*^9, 
   3.662407012861548*^9}, {3.6624070836417437`*^9, 3.662407106780003*^9}, {
   3.662407909635324*^9, 3.662407928564303*^9}, 3.6624079656102057`*^9, 
   3.6624088419917307`*^9, 3.662408907167906*^9, {3.6624089455614347`*^9, 
   3.662408976175329*^9}, {3.662409014175234*^9, 3.662409088225396*^9}, 
   3.662409224178812*^9, 3.6624105841259403`*^9, 3.662410646600896*^9, {
   3.662411258379698*^9, 3.662411325108368*^9}, 3.662411411686612*^9, 
   3.662411460658895*^9, 3.662411832776853*^9, 3.662754828152622*^9, 
   3.662755118997655*^9, 3.662755189829032*^9, {3.662755219952276*^9, 
   3.6627552330088873`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulated Data", "Section",
 CellChangeTimes->{{3.6627556877501717`*^9, 3.66275569128279*^9}}],

Cell["\<\
Load data from Patrick\[CloseCurlyQuote]s simulation\
\>", "Text",
 CellChangeTimes->{{3.662756272519383*^9, 3.66275628084601*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "datadir", "=", "\"\</Users/mmosmond/Documents/PHD/MARYSCONVERT/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "datadir", "<>", "\"\<SimulatedAbundances\>\"", "<>", "\"\<.csv\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.66275556963586*^9, 3.662755648268983*^9}, {
  3.662755792232341*^9, 3.662755820742881*^9}, {3.662756234703286*^9, 
  3.662756236070477*^9}}],

Cell["The data comes with 5 columns", "Text",
 CellChangeTimes->{{3.662756378289138*^9, 3.662756385175745*^9}, {
  3.662756559277006*^9, 3.662756575755829*^9}, {3.662756815034315*^9, 
  3.662756817745803*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simdata", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6627566279933243`*^9, 3.662756642669874*^9}, {
  3.6627566958390627`*^9, 3.662756697638322*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"Species\"\>", 
   ",", "\<\"Abundance\"\>", ",", "\<\"Stress_abund\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.662756630411153*^9, 3.662756698041078*^9}]
}, Open  ]],

Cell["\<\
 x is the x location (1:20) y is the y location (1:20), species is species ID \
(1:80), abundance is number of individuals of that species in plot, and \
stress abundance is abundance under some stressor (we will eventually want to \
compare model results with and without stressor). \
\>", "Text",
 CellChangeTimes->{{3.6627568213512087`*^9, 3.662756822760435*^9}}],

Cell["We first drop the column names", "Text",
 CellChangeTimes->{{3.662756792985317*^9, 3.662756798263606*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"simdata", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662756785772848*^9, 3.662756802048545*^9}}],

Cell["Define the spatial extent of the area of interest", "Text",
 CellChangeTimes->{{3.662411468482938*^9, 3.6624114723466263`*^9}, {
   3.662412173377927*^9, 3.662412192666273*^9}, 3.662756289862062*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Lx", ",", "Ly"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"20", ",", "20"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "total", " ", "x", " ", "and", " ", "y", " ", "distance", " ", "of", " ", 
     "area", " ", "of", " ", "interest"}], ",", " ", 
    RowBox[{
    "ie", " ", "a", " ", "grid", " ", "with", " ", "length", " ", "Lx", " ", 
     "and", " ", "width", " ", "Ly"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Asub", "=", "2"}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"space", " ", "between", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "ie", " ", "we", " ", "chop", " ", "up", " ", "the", " ", "total", " ", 
      "area", " ", "into", " ", "squares", " ", "with", " ", "length", " ", 
      "Asub"}], ";", " ", 
     RowBox[{
     "best", " ", "if", " ", "this", " ", "divides", " ", "the", " ", "total",
       " ", "space", " ", "nicely"}]}], ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"Lx", "/", "Asub"}], " ", "and", " ", 
     RowBox[{"Ly", "/", "Asub"}], " ", "are", " ", "integers"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624105632177896`*^9, 3.662410563388131*^9}, {
   3.662410642111521*^9, 3.6624106433361464`*^9}, {3.6624113185715933`*^9, 
   3.6624113205874157`*^9}, 3.6624118299636374`*^9, {3.662412200746975*^9, 
   3.66241233394919*^9}, {3.662756316915345*^9, 3.662756321631939*^9}, {
   3.6627579622476397`*^9, 3.662757962359758*^9}}],

Cell["Get each variable of interest from data table", "Text",
 CellChangeTimes->{{3.662411487805341*^9, 3.6624115162679358`*^9}, {
  3.66241239544563*^9, 3.662412400485498*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gx", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gy", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ab", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stab", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "simdata", "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6627564818879433`*^9, 3.662756506084942*^9}, {
  3.6627568388114223`*^9, 3.66275689858679*^9}, {3.6627571596583757`*^9, 
  3.662757175800811*^9}}],

Cell["Some summary statistics of the data", "Text",
 CellChangeTimes->{{3.6624115004831676`*^9, 3.6624115190117893`*^9}, {
  3.662412416239183*^9, 3.662412426541686*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Uspecie", "=", 
   RowBox[{"Union", "[", "sp", "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"vector", " ", "of", " ", "species", " ", "IDs"}], "*)"}], "\n", 
  RowBox[{"Nspecies", "=", 
   RowBox[{"Length", "[", "Uspecie", "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", "species"}], "*)"}], "\n", 
  
  RowBox[{"TotAbundance", "=", 
   RowBox[{"Total", "[", "ab", "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"total", " ", "abundance"}], ",", " ", 
    RowBox[{"across", " ", "all", " ", "species"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662394155397892*^9, 3.662394208972786*^9}, {
  3.66239435484977*^9, 3.662394355553513*^9}, {3.662394932920998*^9, 
  3.662394933324882*^9}, {3.662396920669482*^9, 3.662396931205062*^9}, {
  3.662411451991355*^9, 3.662411457827334*^9}, {3.662412431854793*^9, 
  3.6624124470392838`*^9}, {3.6627569063475637`*^9, 3.662756919531727*^9}, {
  3.662757178672894*^9, 3.6627571860160637`*^9}}],

Cell["Defining the coordinate system of the area", "Text",
 CellChangeTimes->{{3.6624115301840067`*^9, 3.662411532736253*^9}, 
   3.662412483413187*^9, {3.6624127080035973`*^9, 3.6624127139072323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allpos", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Lx", "/", "Asub"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Ly", "/", "Asub"}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"coordinates", ",", " ", 
    RowBox[{"in", " ", "translated", " ", "form"}], ",", " ", 
    RowBox[{"ie", ".", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", " ", "...", ",", " ", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyCpos", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "i"}], "+", "1"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "j"}], "+", "1"}], ")"}], "/", "2"}]}], "}"}],
          "//", " ", "N"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Lx", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ly", "/", "Asub"}], ")"}], "-", "1"}], ",", "1"}], 
         "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"halfway", " ", "points", " ", "between", " ", "coordinates"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "use", " ", "later", " ", "to", " ", "derive", 
     " ", "the", " ", "distances", " ", "between", " ", "centers", " ", "of", 
     " ", "each", " ", "\"\<bin\>\"", " ", 
     RowBox[{"(", 
      RowBox[{"area", " ", "below", " ", 
       RowBox[{"(", "south", ")"}], " ", "and", " ", "to", " ", "left", " ", 
       RowBox[{"(", "west", ")"}], " ", "of", " ", "each", " ", 
       "coordinate"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allpair", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"allpos", ",", "allpos"}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pairs", " ", "of", " ", "each", " ", "translated", " ", "coordinate", 
     " ", "with", " ", "each", " ", "other"}], ",", " ", 
    RowBox[{"e", ".", "g", "."}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nplot", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "allpos", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "number", " ", "of", " ", 
    RowBox[{"coordinates", "/", "bins"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395041124155*^9, 3.662395076995739*^9}, 
   3.662396503297634*^9, {3.662397225252562*^9, 3.66239727282128*^9}, {
   3.662397305190036*^9, 3.662397317542131*^9}, {3.662402580564127*^9, 
   3.662402589155075*^9}, {3.6624125591567297`*^9, 3.662412674941476*^9}, {
   3.6624128238176327`*^9, 3.662412840042054*^9}}],

Cell["Locations of plots (the bin they are in)", "Text",
 CellChangeTimes->{{3.662411540064125*^9, 3.662411543224874*^9}, 
   3.66241271663524*^9, {3.6624129056691236`*^9, 3.662412919045101*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Xpos", "[", "p_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gx", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"p", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "p"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"which", " ", "plots", " ", 
     RowBox[{"(", 
      RowBox[{
      "their", " ", "position", " ", "in", " ", "the", " ", "data", " ", 
       "vector"}], ")"}], " ", "have", " ", "x", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "x", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "p", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Lx", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ypos", "[", "q_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"gy", ",", 
       RowBox[{"x_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Asub", "*", 
            RowBox[{"(", 
             RowBox[{"q", "-", "1"}], ")"}]}], " ", "\[LessEqual]", " ", "#", 
           "<", 
           RowBox[{"Asub", "*", "q"}]}], "&"}], ")"}]}]}], "]"}], ",", "1"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "which", " ", "plots", " ", "have", " ", "y", " ", "location", " ", 
     "between", " ", "two", " ", "coordinates"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "all", " ", "pairs", " ", "of", " ", "y", " ", 
      "coordinates"}], ";", " ", 
     RowBox[{"for", " ", "q", " ", "between", " ", "1", " ", "and", " ", 
      RowBox[{"Ly", "/", "Asub"}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule1", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "from", " ", "coordinates", " ", 
    RowBox[{"(", "tuple", ")"}], " ", "to", " ", "single", " ", "identifying",
     " ", "number"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rule2", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nplot", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
          RowBox[{"allpos", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "allpos", "]"}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"translate", " ", "back"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYpos", "[", 
     RowBox[{"{", 
      RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
    RowBox[{"Intersection", "[", 
     RowBox[{
      RowBox[{"Xpos", "[", "p", "]"}], ",", 
      RowBox[{"Ypos", "[", "q", "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"which", " ", "plots", " ", "have", " ", "location", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}], " ", "within", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", 
      RowBox[{"x", " ", "p"}]}], ")"}], " ", "and", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"y", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ",", " ", 
      RowBox[{"y", " ", "p"}]}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"possub", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{"XYpos", ",", "allpos"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "which", " ", "plots", " ", "fall", " ", "in", " ", "which", " ", "bin", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"e", ".", "g", "."}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", ",", "y"}], ")"}], "=", 
       RowBox[{"(", 
        RowBox[{"321", ",", "434"}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"with", " ", "Asub"}], "=", "100"}], ",", " ", 
      RowBox[{"would", " ", "fall", " ", "in", " ", 
       RowBox[{"(", 
        RowBox[{"400", ",", "500"}], ")"}]}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395292209701*^9, 3.662395537499296*^9}, {
  3.6623960553689823`*^9, 3.662396067946538*^9}, {3.662397974196926*^9, 
  3.662398051690569*^9}, {3.6623981180157757`*^9, 3.6623981500469017`*^9}, {
  3.6623982769015217`*^9, 3.662398325149023*^9}, {3.66239886727868*^9, 
  3.662398876830975*^9}, {3.6623994181640377`*^9, 3.66239950349568*^9}, {
  3.6623997780956163`*^9, 3.6623998470706177`*^9}, {3.6624129296834784`*^9, 
  3.662412931482998*^9}}],

Cell["Which species are where", "Text",
 CellChangeTimes->{{3.66241155496421*^9, 3.66241156097239*^9}, {
  3.6624129435894413`*^9, 3.662412950140648*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"possub", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662757944096231*^9, 3.662757978567486*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "401", ",", "801", ",", "1201", ",", "1601", ",", "2001", ",", 
   "2401", ",", "2801", ",", "3201", ",", "3601", ",", "4001", ",", "4401", 
   ",", "4801", ",", "5201", ",", "5601", ",", "6001", ",", "6401", ",", 
   "6801", ",", "7201", ",", "7601", ",", "8001", ",", "8401", ",", "8801", 
   ",", "9201", ",", "9601", ",", "10001", ",", "10401", ",", "10801", ",", 
   "11201", ",", "11601", ",", "12001", ",", "12401", ",", "12801", ",", 
   "13201", ",", "13601", ",", "14001", ",", "14401", ",", "14801", ",", 
   "15201", ",", "15601", ",", "16001", ",", "16401", ",", "16801", ",", 
   "17201", ",", "17601", ",", "18001", ",", "18401", ",", "18801", ",", 
   "19201", ",", "19601", ",", "20001", ",", "20401", ",", "20801", ",", 
   "21201", ",", "21601", ",", "22001", ",", "22401", ",", "22801", ",", 
   "23201", ",", "23601", ",", "24001", ",", "24401", ",", "24801", ",", 
   "25201", ",", "25601", ",", "26001", ",", "26401", ",", "26801", ",", 
   "27201", ",", "27601", ",", "28001", ",", "28401", ",", "28801", ",", 
   "29201", ",", "29601", ",", "30001", ",", "30401", ",", "30801", ",", 
   "31201", ",", "31601"}], "}"}]], "Output",
 CellChangeTimes->{{3.6627579443893223`*^9, 3.662757978960259*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sp", "[", 
  RowBox[{"[", 
   RowBox[{"possub", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662758040241726*^9, 3.662758053137348*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Sp. 1\"\>", ",", "\<\"Sp. 2\"\>", ",", "\<\"Sp. 3\"\>", 
   ",", "\<\"Sp. 4\"\>", ",", "\<\"Sp. 5\"\>", ",", "\<\"Sp. 6\"\>", 
   ",", "\<\"Sp. 7\"\>", ",", "\<\"Sp. 8\"\>", ",", "\<\"Sp. 9\"\>", 
   ",", "\<\"Sp. 10\"\>", ",", "\<\"Sp. 11\"\>", ",", "\<\"Sp. 12\"\>", 
   ",", "\<\"Sp. 13\"\>", ",", "\<\"Sp. 14\"\>", ",", "\<\"Sp. 15\"\>", 
   ",", "\<\"Sp. 16\"\>", ",", "\<\"Sp. 17\"\>", ",", "\<\"Sp. 18\"\>", 
   ",", "\<\"Sp. 19\"\>", ",", "\<\"Sp. 20\"\>", ",", "\<\"Sp. 21\"\>", 
   ",", "\<\"Sp. 22\"\>", ",", "\<\"Sp. 23\"\>", ",", "\<\"Sp. 24\"\>", 
   ",", "\<\"Sp. 25\"\>", ",", "\<\"Sp. 26\"\>", ",", "\<\"Sp. 27\"\>", 
   ",", "\<\"Sp. 28\"\>", ",", "\<\"Sp. 29\"\>", ",", "\<\"Sp. 30\"\>", 
   ",", "\<\"Sp. 31\"\>", ",", "\<\"Sp. 32\"\>", ",", "\<\"Sp. 33\"\>", 
   ",", "\<\"Sp. 34\"\>", ",", "\<\"Sp. 35\"\>", ",", "\<\"Sp. 36\"\>", 
   ",", "\<\"Sp. 37\"\>", ",", "\<\"Sp. 38\"\>", ",", "\<\"Sp. 39\"\>", 
   ",", "\<\"Sp. 40\"\>", ",", "\<\"Sp. 41\"\>", ",", "\<\"Sp. 42\"\>", 
   ",", "\<\"Sp. 43\"\>", ",", "\<\"Sp. 44\"\>", ",", "\<\"Sp. 45\"\>", 
   ",", "\<\"Sp. 46\"\>", ",", "\<\"Sp. 47\"\>", ",", "\<\"Sp. 48\"\>", 
   ",", "\<\"Sp. 49\"\>", ",", "\<\"Sp. 50\"\>", ",", "\<\"Sp. 51\"\>", 
   ",", "\<\"Sp. 52\"\>", ",", "\<\"Sp. 53\"\>", ",", "\<\"Sp. 54\"\>", 
   ",", "\<\"Sp. 55\"\>", ",", "\<\"Sp. 56\"\>", ",", "\<\"Sp. 57\"\>", 
   ",", "\<\"Sp. 58\"\>", ",", "\<\"Sp. 59\"\>", ",", "\<\"Sp. 60\"\>", 
   ",", "\<\"Sp. 61\"\>", ",", "\<\"Sp. 62\"\>", ",", "\<\"Sp. 63\"\>", 
   ",", "\<\"Sp. 64\"\>", ",", "\<\"Sp. 65\"\>", ",", "\<\"Sp. 66\"\>", 
   ",", "\<\"Sp. 67\"\>", ",", "\<\"Sp. 68\"\>", ",", "\<\"Sp. 69\"\>", 
   ",", "\<\"Sp. 70\"\>", ",", "\<\"Sp. 71\"\>", ",", "\<\"Sp. 72\"\>", 
   ",", "\<\"Sp. 73\"\>", ",", "\<\"Sp. 74\"\>", ",", "\<\"Sp. 75\"\>", 
   ",", "\<\"Sp. 76\"\>", ",", "\<\"Sp. 77\"\>", ",", "\<\"Sp. 78\"\>", 
   ",", "\<\"Sp. 79\"\>", ",", "\<\"Sp. 80\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.66275804084127*^9, 3.662758053836371*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ab", "[", 
  RowBox[{"[", 
   RowBox[{"possub", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662758072137412*^9, 3.662758072545022*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "451", ",", "0", ",", "0", ",", "0", ",", "0", ",", "4", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "14", ",", "0", ",", "1015", 
   ",", "16", ",", "1330", ",", "34", ",", "0", ",", "12", ",", "0", ",", "0",
    ",", "678", ",", "0", ",", "247", ",", "24", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.662758072898117*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simdata", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662758125646949*^9, 3.662758130111998*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "\<\"Sp. 1\"\>", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.662758130862413*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
     "&"}], "/@", " ", "Uspecie"}], ")"}], "*", 
  RowBox[{"ab", "[", 
   RowBox[{"[", 
    RowBox[{"possub", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6627579234087877`*^9, 3.662757940984683*^9}, {
  3.662757984679517*^9, 3.6627580278335867`*^9}, {3.662758215846964*^9, 
  3.662758219900325*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "451", ",", "0", ",", "0", ",", "0", ",", "0", ",", "4", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "14", ",", "0", ",", "1015", 
   ",", "16", ",", "1330", ",", "34", ",", "0", ",", "12", ",", "0", ",", "0",
    ",", "678", ",", "0", ",", "247", ",", "24", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.662757935123645*^9, {3.662757993222843*^9, 3.6627580290116053`*^9}, 
   3.662758221051792*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XYS", "[", "i_", "]"}], ":=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gx", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"gy", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"sp", "[", 
        RowBox[{"[", 
         RowBox[{"possub", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gives", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "location", " ", "of", " ", 
     "plots"}], ",", " ", 
    RowBox[{"and", " ", "sp", " ", "code"}], ",", " ", 
    RowBox[{"in", " ", "each", " ", "bin"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SabA", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"sp", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
      "&"}], "/@", " ", "Uspecie"}]}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "plots", " ", "with", " ", "each", " ", 
    "species", " ", "in", " ", "each", " ", "bin"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"SabA", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"sp", "[", 
         RowBox[{"[", 
          RowBox[{"possub", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
      "&"}], "/@", " ", "Uspecie"}], ")"}], "*", 
   RowBox[{"ab", "[", 
    RowBox[{"[", 
     RowBox[{"possub", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SA", "[", "i_", "]"}], ":=", 
   RowBox[{"Boole", "/@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"sp", "[", 
          RowBox[{"[", 
           RowBox[{"possub", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", " ", "Uspecie"}], ")"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "at", " ", "least", " ", "one", " ", "plot", " ", 
     "with", " ", "a", " ", "species", " ", "in", " ", "given", " ", "bin"}], 
    ",", " ", 
    RowBox[{"ie", " ", 
     RowBox[{"presence", "/", "absence"}], " ", "in", " ", "bin"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Spos", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SA", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "possub", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"table", " ", "with", " ", "all", " ", "bins"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662395558546788*^9, 3.662395590718184*^9}, {
   3.662395637422887*^9, 3.662395855679844*^9}, {3.662396084462902*^9, 
   3.662396093135119*^9}, {3.6624000366580553`*^9, 3.6624000612422333`*^9}, {
   3.662400105056695*^9, 3.66240013763741*^9}, {3.662400198268684*^9, 
   3.662400203847021*^9}, {3.662400283268598*^9, 3.662400340107189*^9}, {
   3.662400370913103*^9, 3.662400403535512*^9}, {3.662400442030035*^9, 
   3.662400450460515*^9}, {3.662400495985153*^9, 3.662400502456811*^9}, {
   3.662401369958474*^9, 3.6624013885339117`*^9}, 3.6624017363239193`*^9, {
   3.662412958541737*^9, 3.662413003201478*^9}, {3.6627582460381603`*^9, 
   3.662758260113225*^9}}],

Cell["Covariance in species abundance by distances", "Text",
 CellChangeTimes->{{3.662411564012209*^9, 3.662411577084908*^9}, {
  3.662413007593816*^9, 3.6624130216361732`*^9}, {3.662413321726729*^9, 
  3.6624133250631638`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"xyCpos", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ")"}], "^", "2"}], "]"}], 
    "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Euclidean", " ", "distance", " ", "between", " ", "center", " ", "of", 
    " ", "two", " ", "bins", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"in", " ", "translated", " ", "space"}], ";", " ", 
       RowBox[{
       "need", " ", "to", " ", "multiply", " ", "by", " ", "Asub", " ", "to", 
        " ", "get", " ", "real", " ", "distances"}]}], ",", " ", 
      RowBox[{"which", " ", "we", " ", "do", " ", "later"}]}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"not", " ", "sure", " ", "what", " ", "this", " ", "does"}], ",", 
    " ", 
    RowBox[{"but", " ", "doesnt", " ", "hurt"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alldist", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"dist", ",", 
      RowBox[{"allpair", "/.", "rule1"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "distance", " ", "between", " ", "center", " ", "of", " ", "all", " ", 
    "pairs", " ", "of", " ", "bins"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rvec", "=", 
    RowBox[{"Union", "[", "alldist", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "all", " ", "unique", " ", "distances", " ", "in", " ", "increasing", " ", 
    "order"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"indexpair", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"index", ",", 
      RowBox[{"allpair", "/.", " ", "rule1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "translate", " ", "from", " ", "tuples", " ", "of", " ", "coordinates", 
    " ", "to", " ", "pairs", " ", "of", " ", "coordinate", " ", "indices"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"posdist", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"alldist", ",", "#"}], "]"}], "&"}], "/@", " ", "rvec"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "identify", " ", "coordinate", " ", "index", " ", "pairs", " ", "whose", 
    " ", "bin", " ", "centers", " ", "are", " ", "given", " ", "distance", 
    " ", "apart"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Cov", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"SabA", "[", "i", "]"}], " ", 
       RowBox[{"SabA", "[", "j", "]"}]}], "]"}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"SabA", "[", "i", "]"}], "]"}], " ", 
       RowBox[{"Mean", "[", 
        RowBox[{"SabA", "[", "j", "]"}], "]"}]}], ")"}]}], "//", "N"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<covariance\>\"", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "bins"}], ",", " ", 
    RowBox[{
    "note", " ", "that", " ", "the", " ", "\"\<covariance\>\"", " ", "is", 
     " ", "taken", " ", "over", " ", "all", " ", "species"}], ",", " ", 
    RowBox[{
    "ie", " ", "\"\<covariance\>\"", " ", "in", " ", "community", " ", 
     "composition"}]}], "*)"}], "\n", 
  RowBox[{"allcov", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"Cov", ",", 
       RowBox[{"indexpair", "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"posdist", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}], "]"}]}],
       "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "rvec", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "covaraiance", " ", "in", " ", "number", " ", "of", " ", "plots", " ", 
    "with", " ", "species", " ", "at", " ", "each", " ", "distance"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/VTqeGC552tH62AI7diQEwWiWRJN60H0P6stC0G0
4OwJS0B0X9PT0gogvcdXoQJEP9l4v6MSSHM0ufaA6IQXE6aC6AnrPaaD6JSr
5+eB6PXT5BaA6NsxWktA9DVP+RUgetNasU0gWonj/BYQ3aN99CCI3nB9/SEQ
vWbdlisg+sm30Ksg2mV6zRMQbfX23UsQ/W7mkXcgWujiqw8gehlPkVAVkBa9
1ikBoss2rp5TD6RrQtUXguhFznWrQbRGXOQaEH3++8mjILrLKucUiLba338B
ROfs+f4ARBsl5jeoeQH9NbkKTLfnHWgF0Ub5V9rAfEezXSBaxO7GHjB9xmui
OpC+qB8EpgGKrrKS
  "]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 16, 7, 0, 0, 1103, 1040, 11, 8, 1230, 1179, 252, 339, \
\\(\\(\[LeftSkeleton] 110 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758291537818*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6627582915994787`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.66275829166555*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758291731866*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 16, 7, 0, 0, 1103, 1040, 11, 8, 1230, 1179, 252, 339, \
\\(\\(\[LeftSkeleton] 110 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6627582917984333`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({0, 0, 0, 0, 0, \
0, 0, 0, 0, 451, 0, 0, 0, 0, 4, 0, 0, 0, 0, 14, 0, 1015, 16, 1330, 34, 0, 12, \
0, 0, 678, 0, 247, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\
\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758291865389*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({0, 0, 0, 0, 0, \
0, 0, 0, 0, 451, 0, 0, 0, 0, 4, 0, 0, 0, 0, 14, 0, 1015, 16, 1330, 34, 0, 12, \
0, 0, 678, 0, 247, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\
\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758291879819*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({0, 0, 0, 0, 0, \
0, 0, 0, 0, 451, 0, 0, 0, 0, 4, 0, 0, 0, 0, 14, 0, 1015, 16, 1330, 34, 0, 12, \
0, 0, 678, 0, 247, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\
\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758291949727*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 16, 7, 0, 0, 1103, 1040, 11, 8, 1230, 1179, 252, 339, \
\\(\\(\[LeftSkeleton] 110 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \\(\\(\
\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 16, 7, 0, 0, 1103, 1040, 11, 8, 1230, 1179, 252, 339, \
\\(\\(\[LeftSkeleton] 110 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758292013863*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6627582920804377`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6627582921474943`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6627582922137337`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Thread :: tdlen\\), \
\\\"MessageName\\\"]\\) will be suppressed during this calculation.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758292279915*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Thread :: tdlen\\), \
\\\"MessageName\\\"]\\) will be suppressed during this calculation.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758292346616*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Thread :: tdlen\\), \
\\\"MessageName\\\"]\\) will be suppressed during this calculation.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758292358*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Thread :: tdlen\\), \
\\\"MessageName\\\"]\\) will be suppressed during this calculation.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758292430352*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758300601226*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({0, 0, 0, 0, 0, \
0, 0, 0, 0, 451, 0, 0, 0, 0, 4, 0, 0, 0, 0, 14, 0, 1015, 16, 1330, 34, 0, 12, \
0, 0, 678, 0, 247, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\
\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758300660282*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \\!\\(\\(\\({4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
\\(\\(\[LeftSkeleton] 30 \[RightSkeleton]\\)\\)}\\)\\)\\\\ \\(\\({0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\(\\(\
\[LeftSkeleton] 270 \[RightSkeleton]\\)\\)}\\)\\)\\) cannot be \
combined.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.662758300721492*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \\!\\(\\*StyleBox[\\(Thread :: tdlen\\), \
\\\"MessageName\\\"]\\) will be suppressed during this calculation.\"\>"}]], \
"Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6627583007893553`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.662756988299327*^9, 3.662757123191476*^9, 
  3.6627583048427267`*^9}]
}, Open  ]],

Cell["Our empirical correlation function", "Text",
 CellChangeTimes->{{3.662411583164523*^9, 3.6624115898929653`*^9}, {
  3.662413328936442*^9, 3.662413339075227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"empPCF", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvec", "*", "Asub"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", "allcov"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"empirical", " ", "correlation", " ", "function"}], ",", " ", 
    RowBox[{"PCF", ";", " ", 
     RowBox[{
     "first", " ", "element", " ", "of", " ", "each", " ", "pair", " ", "is", 
      " ", "the", " ", 
      RowBox[{"(", "untranslated", ")"}], " ", "distance", " ", "between", 
      " ", "the", " ", "center", " ", "of", " ", "two", " ", "bins", " ", 
      RowBox[{"(", 
       RowBox[{"rvec", "*", "Asub"}], ")"}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "element", " ", "is", " ", "the", " ", "mean", 
     " ", "covariance", " ", "in", " ", "number", " ", "of", " ", "plots", 
     " ", "with", " ", "species", " ", "across", " ", "all", " ", "pairs", 
     " ", "of", " ", "bins", " ", "that", " ", "distance", " ", "apart"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.662401751323216*^9, 3.662401767856126*^9}, {
  3.6624018026823177`*^9, 3.662401805136237*^9}, {3.662402598586731*^9, 
  3.662402656960024*^9}, {3.662403448724161*^9, 3.662403449356001*^9}, {
  3.662413682182837*^9, 3.662413751871039*^9}}],

Cell["which looks like this", "Text",
 CellChangeTimes->{{3.662413762951601*^9, 3.662413766590012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"empPCF", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662402671244444*^9, 3.6624026938166847`*^9}, {
  3.6624027307213984`*^9, 3.6624027646607313`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQOf3HOM7uh8sIfwIh0WFLTxhTJ+sN+RJnygem2i
g2XKYwVxDph8pkNIZd7vDKYP9m55so+zPmc78HQkHoligKkvdPhwKvHHnA/v
IeoPFDkIb2hQmfDvvX3k9F9vlxwudlCZ+kIm9M97eze+nLMPO8ocdCOPWRa9
h6pnqHTYuflD/SX2D/bRj4oEfhypdDiX2+fD/uW9vbCU7ALLliqHqMuWG/7/
fw+1v9qhZPu25iM/ofod6h1ua7D/Mnj33v5DVk9K3r16B0Pf2I/5bED3vlp8
QPFKg4P4zcpD0+DubXSI5XxY3PHsvf318C2fDlk0OfxSr3j1+y7M/U0OSm8F
TjKwfrDnZVE7YsrU7LBWYXfjHu4PUP80O3xMS//09vN7e4v/LDfqmVocVokc
mTHtzXv7rUJhWhO+tTiUy//qWvYcat6DVodN38yMXHg/2Kc5SGy4JdHm8L4g
6q8I5wdoeLQ55Aj5izoA7Tv3JaZR7ECbg9L8JXNLgfFR4cgcOu9Mu4Phz5Ks
mx9h4dXpkHRge80KiQ/2TzdzJJ8z7HSYZffIYD4wPCDh1+nw+f/CbZ+YP9jb
M0z4bry5yyEvQEMs4Qos/LodAs4Eu959ATVPocdhAeuHeweA+ndMDnng59Pj
ILH5wUoRoP6LHoVbFp3vceB5V3T/BjD+WR9/Tylf2uuwOf34Xu4f7+1/mr0W
Fjve51Dn4qkYc/O9PQBQoBg9
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.994674723888705},
  Method->{},
  PlotRange->{{0, 984.8857801796104}, {0.994674723888705, 
    1.0109521836898208`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.0003255491960223145, 0.0003255491960223145}}]], "Output",
 CellChangeTimes->{{3.6624026753490877`*^9, 3.662402694224242*^9}, {
   3.662402733657669*^9, 3.662402764957795*^9}, 3.662403280700993*^9, 
   3.662405717953288*^9, 3.6624062969674873`*^9, 3.662406329773899*^9, 
   3.662406416186351*^9, 3.662406804603773*^9, 3.66240683746817*^9, {
   3.662406886173161*^9, 3.66240691093393*^9}, {3.6624069838326597`*^9, 
   3.662407012312221*^9}, {3.662407083140224*^9, 3.662407106243676*^9}, {
   3.662407909118041*^9, 3.662407928023505*^9}, 3.662408841453096*^9, 
   3.662408905364181*^9, {3.6624089446938267`*^9, 3.6624089748889437`*^9}, {
   3.6624090129800463`*^9, 3.6624090870484447`*^9}, 3.662409222978368*^9, 
   3.662410582890629*^9, 3.662410645396593*^9, 3.662411257144088*^9, 
   3.662411323604559*^9, 3.662411410305233*^9, 3.6624114593953867`*^9, 
   3.662411831491273*^9, 3.6627548268499537`*^9, 3.6627551177774353`*^9, 
   3.6627551888229713`*^9}]
}, Open  ]],

Cell["Fitting the function to the data", "Text",
 CellChangeTimes->{{3.6624116006129713`*^9, 3.662411617797512*^9}, 
   3.6624137709835*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Rho]", "\[Lambda]"], ")"}], "2"], 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       FractionBox["r", "\[Lambda]"]}], "]"}]}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "function", " ", "to", " ", "fit", " ", "to", " ", "the", " ", "empirical",
     " ", "PCF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"what", " ", "does", " ", "this", " ", 
    RowBox[{"do", "?"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fitcor", "=", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{
      RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
      RowBox[{"g", "[", "r", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", 
          SuperscriptBox["10", "9"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Rho]", ",", "0.1"}], "}"}]}], "}"}], ",", "r"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fit", " ", "the", " ", "function"}], ",", " ", 
    RowBox[{"with", " ", "some", " ", "parameter", " ", "guesses"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6624027871760187`*^9, 3.662402882159881*^9}, {
  3.662403440956188*^9, 3.662403443083897*^9}, {3.662413819411948*^9, 
  3.662413832425786*^9}}],

Cell["How good is the fit?", "Text",
 CellChangeTimes->{{3.662413841744823*^9, 3.662413844902369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fitcor", "[", "#", "]"}]}], "}"}], "&"}], "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AdjustedRSquared\>\"", ",", "\"\<AIC\>\"", ",", "\"\<BIC\>\"", 
        ",", "\"\<RSquared\>\""}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "fit"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.662403357573029*^9, 3.662403400917585*^9}, {
  3.662403460732779*^9, 3.662403460900476*^9}, {3.6624035271260643`*^9, 
  3.6624035294532757`*^9}, {3.662403567283935*^9, 3.662403568012061*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AdjustedRSquared\"\>", "0.9999943356864339`"},
    {"\<\"AIC\"\>", 
     RowBox[{"-", "338.0912399431396`"}]},
    {"\<\"BIC\"\>", 
     RowBox[{"-", "333.25848620520696`"}]},
    {"\<\"RSquared\"\>", "0.9999946418655455`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.662403402411786*^9, 3.662405718090724*^9, 3.662406297155188*^9, 
   3.662406329946666*^9, {3.662406416486521*^9, 3.662406429860981*^9}, 
   3.66240680481929*^9, 3.662406837703083*^9, {3.662406886374895*^9, 
   3.662406911136054*^9}, {3.662406983975531*^9, 3.662407012481901*^9}, {
   3.66240708327638*^9, 3.662407106382594*^9}, {3.6624079092705507`*^9, 
   3.662407928171085*^9}, 3.662408841597978*^9, 3.662408905666217*^9, {
   3.662408944842497*^9, 3.6624089750086527`*^9}, {3.662409013114809*^9, 
   3.662409087167595*^9}, 3.6624092231154623`*^9, 3.6624105830350018`*^9, 
   3.662410645530094*^9, 3.662411257241982*^9, 3.6624113237579403`*^9, 
   3.662411410461595*^9, 3.662411459544739*^9, 3.662411831637423*^9, 
   3.662754827083612*^9, 3.662755117964517*^9, 3.6627551888890533`*^9}]
}, Open  ]],

Cell["What are our parameter estimates?", "Text",
 CellChangeTimes->{{3.6624138505438223`*^9, 3.662413855414859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"stats", " ", "for", " ", "parameter", " ", "estimates"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Lambda]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "lambda"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Rho]1", "=", 
    RowBox[{
     RowBox[{"fitcor", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"standard", " ", "error", " ", "for", " ", "rho"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.662403541170051*^9, 3.662403579627411*^9}, {
  3.662413877368452*^9, 3.662413935628236*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Lambda]", "1.`*^9", "6.610302438776265`*^27", 
      "1.5127900867802435`*^-19", "1"},
     {"\[Rho]", "0.1`", "6.383829784375621`*^17", "1.5664578063273133`*^-19", 
      "1"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.6624139079167*^9}, 
   3.662754827139021*^9, 3.66275511801717*^9, 3.662755188904523*^9}]
}, Open  ]],

Cell["Or if you like confidence intervals better...", "Text",
 CellChangeTimes->{{3.662413938361573*^9, 3.662413946160007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fitcor", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"get", " ", "confidence", " ", "intervals", " ", "too"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{3.662413934755294*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"\[Lambda]", "1.`*^9", "6.610302438776265`*^27", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.341962738909225`*^28"}], ",", 
        "1.341962738909225`*^28"}], "}"}]},
     {"\[Rho]", "0.1`", "6.383829784375621`*^17", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2959863457861606`*^18"}], ",", 
        "1.2959863457861606`*^18"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.662413879490011*^9, 3.66241392002323*^9}, 
   3.662754827573681*^9, 3.6627551183942013`*^9, 3.6627551889387608`*^9}]
}, Open  ]],

Cell["Plot fitted curve with data points", "Text",
 CellChangeTimes->{{3.662413956438634*^9, 3.662413969480398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fitcor", "[", "r", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Blue", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<g(r)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", "\"\<Pair correlation function\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}], ",", 
      RowBox[{"FontSize", " ", "\[Rule]", " ", "12"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Prolog", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
      RowBox[{"Point", "/@", " ", "empPCF"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.662403769406761*^9, 3.662403992597126*^9}, {
  3.662404042064361*^9, 3.6624041243000097`*^9}, {3.662404161267418*^9, 
  3.662404199527317*^9}, {3.662405800170576*^9, 3.6624058024493113`*^9}, {
  3.66240792592798*^9, 3.662407926379305*^9}, {3.662413951485792*^9, 
  3.66241399528541*^9}, {3.662755240062652*^9, 3.662755249022591*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbvSuqtS+KsdAxh8sD/ckj/xX4iyA4wv/8bc4W+I
MZzf0X1qhYKqC5zv93bDqj9vfeF8lxUTGG8fCobz9/InbDv5LQLOj4s9nX71
Yiycn/fh2YTKrkQ4v3NT1+H98ilw/o70mpIpHWlw/rXtOzWLVDPhfPbfLrH3
pmbD+VP3FT1j/JWLMI/vm6W4ZwGcH7j95v4vdYVw/gTdx8evnSuC8/893ls1
RaIEzv86eX+OpE8pnJ8i+PzBopllcH5Mh+mUzxfK4fwzZ1ae9FCqhPOzAt+v
rMytgvMnnY8+WbioGs43lH6XlfexBs6PSljubaRVB+dvfGp4/WJMPZzvIFP4
aVdIA5yfe+jOjA/vEfxQ/+gGjRmNCH6Nk62fbROcL6m2d2b4dQR/5jYv8+S6
Zjj/3uHskiCpFjjfqvBrm/5mBD+IddItvshWOF9f7NDZi58R/OO8rEzTZ7fB
+SpNt6/aW7TD+TOmSdVfu4jgn5iYk5lf0QHn7+UM+vxauBPOz8vw2pe1B8E3
S18ddz2xC84//Gj+PPU/CD6363L5qsXdcL6EipPDBvseON9msavZlRsIvgxn
TO6vul44/+BrVhcWqT44/9emzWq9BQi+SVUip9hxBB8AZ6kESw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"g(r)\"", TraditionalForm], None}, {
     FormBox["\"Distance (m)\"", TraditionalForm], None}},
  ImageSize->800,
  LabelStyle->{FontFamily -> "Times", FontSize -> 12},
  Method->{},
  PlotLabel->FormBox["\"Pair correlation function\"", TraditionalForm],
  PlotRange->{{0, 984.8857801796104}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, 
    Scaled[0.02]},
  Prolog->{
    RGBColor[1, 0, 0], 
    PointSize[0.005], {
     PointBox[{0., 1.0109521836898208`}], 
     PointBox[{100., 1.0003252570523173`}], 
     PointBox[{141.4213562373095, 1.0019751820275486`}], 
     PointBox[{200., 1.0005884000343785`}], 
     PointBox[{223.60679774997897`, 1.0000865622646442`}], 
     PointBox[{282.842712474619, 0.9981217242442124}], 
     PointBox[{300., 0.9998245919173335}], 
     PointBox[{316.22776601683796`, 0.9995523037547724}], 
     PointBox[{360.5551275463989, 0.9979792717374828}], 
     PointBox[{400., 1.001909732595989}], 
     PointBox[{412.31056256176606`, 0.9985386367074456}], 
     PointBox[{424.2640687119285, 0.9999998514091246}], 
     PointBox[{447.21359549995793`, 0.9992392132314607}], 
     PointBox[{500., 0.9978260882719739}], 
     PointBox[{509.9019513592784, 1.001571600751799}], 
     PointBox[{538.5164807134504, 1.0001437756269007`}], 
     PointBox[{565.685424949238, 0.9968912375700644}], 
     PointBox[{583.0951894845301, 0.995847661922425}], 
     PointBox[{600., 1.00122145215466}], 
     PointBox[{608.276253029822, 1.0028653209319984`}], 
     PointBox[{632.4555320336759, 0.9985265478564697}], 
     PointBox[{640.3124237432849, 0.9976304038724682}], 
     PointBox[{670.820393249937, 0.997027656020676}], 
     PointBox[{700., 1.003238865042857}], 
     PointBox[{707.1067811865476, 1.0022172829258655`}], 
     PointBox[{721.1102550927978, 1.0012818176629947`}], 
     PointBox[{728.0109889280518, 1.0003563077861561`}], 
     PointBox[{761.5773105863909, 0.9982726172673094}], 
     PointBox[{800., 1.0060200568950894`}], 
     PointBox[{806.2257748298549, 0.9992214159737671}], 
     PointBox[{824.6211251235321, 1.000963891419812}], 
     PointBox[{854.4003745317531, 0.994674723888705}], 
     PointBox[{894.4271909999159, 0.9971758226441896}], 
     PointBox[{900., 0.9992374758004878}], 
     PointBox[{905.5385138137417, 1.0007521282051979`}], 
     PointBox[{921.9544457292888, 1.00069510731453}], 
     PointBox[{948.6832980505138, 0.9990290361995363}], 
     PointBox[{984.8857801796104, 0.9952831888314362}]}}]], "Output",
 CellChangeTimes->{{3.662403931872311*^9, 3.662403961748376*^9}, 
   3.6624039930219793`*^9, {3.662404054020718*^9, 3.662404124635461*^9}, {
   3.6624041628226557`*^9, 3.662404177212069*^9}, 3.662405718219399*^9, 
   3.6624058028929377`*^9, 3.662406297284313*^9, 3.662406330073842*^9, 
   3.6624064172534*^9, 3.662406804946733*^9, 3.6624068387016277`*^9, {
   3.662406887024851*^9, 3.66240691165195*^9}, {3.662406984216867*^9, 
   3.6624070126147203`*^9}, {3.66240708340755*^9, 3.6624071065110817`*^9}, {
   3.662407909400408*^9, 3.662407928325042*^9}, 3.662408841770507*^9, 
   3.6624089062315893`*^9, {3.662408945263624*^9, 3.662408975140057*^9}, {
   3.662409013246416*^9, 3.662409087299986*^9}, 3.662409223247031*^9, 
   3.662410583174616*^9, 3.662410645662326*^9, 3.662411257398282*^9, 
   3.66241132393871*^9, 3.6624114105907393`*^9, 3.6624114596960697`*^9, 
   3.662411831774963*^9, 3.6627548277165937`*^9, 3.662755118552618*^9, 
   3.662755188969701*^9, {3.6627552441558857`*^9, 3.662755249340041*^9}}]
}, Open  ]],

Cell["Plot fitted curve with confidence bands", "Text",
 CellChangeTimes->{{3.6624140170269537`*^9, 3.662414017625156*^9}, {
  3.662414059835639*^9, 3.662414068251809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bands90", "[", "x_", "]"}], ",", 
      RowBox[{"bands95", "[", "x_", "]"}], ",", 
      RowBox[{"bands99", "[", "x_", "]"}], ",", 
      RowBox[{"bands999", "[", "x_", "]"}]}], "}"}], " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fitcor", "[", 
       RowBox[{"\"\<MeanPredictionBands\>\"", ",", 
        RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "cl"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"cl", ",", 
        RowBox[{"{", 
         RowBox[{".9", ",", ".95", ",", ".99", ",", ".999"}], "}"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"confidence", " ", "bands"}], "*)"}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Rest", "[", "empPCF", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fitcor", "[", "r", "]"}], ",", 
       RowBox[{"bands90", "[", "r", "]"}], ",", 
       RowBox[{"bands95", "[", "r", "]"}], ",", 
       RowBox[{"bands99", "[", "r", "]"}], ",", 
       RowBox[{"bands999", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"3", " ", "\[Rule]", 
         RowBox[{"{", "2", "}"}]}], ",", 
        RowBox[{"4", " ", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}], ",", 
        RowBox[{"5", " ", "\[Rule]", 
         RowBox[{"{", "4", "}"}]}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"rvec", "*", "Asub"}], "]"}]}], "}"}], ",", "Automatic"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662404221668598*^9, 3.662404310745612*^9}, 
   3.662414014514715*^9, {3.662755211342601*^9, 3.662755231736133*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {GrayLevel[0], PointSize[0.01], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQGRDgsK2vhCGT/Y70gTPlC9NtHBMuWxgjjHB3uI
fKZDSGXe7wymD/ZuebKPsz5nO/B0JB6JYoCpL3T4cCrxx5wP7yHqDxQ5CG9o
UJnw77195PRfb5ccLnZQmfpCJvTPe3s3vpyzDzvKHHQjj1kWvYeqZ6h02Ln5
Q/0l9g/20Y+KBH4cqXQ4l9vnw/7lvb2wlOwCy5Yqh6jLlhv+/38Ptb/aoWT7
tuYjP6H6Heodbmuw/zJ4997+Q1ZPSt69egdD39iP+WxA975afEDxSoOD+M3K
Q9Pg7m10iOV8WNzx7L399fAtnw5ZNDn8Uq949fsuzP1NDkpvBU4ysH6w52VR
O2LK1OywVmF34x7uD1D/NDt8TEv/9Pbze3uL/yw36plaHFaJHJkx7c17+61C
YVoTvrU4lMv/6lr2HGreg1aHTd/MjFx4P9inOUhsuCXR5vC+IOqvCOcHaHi0
OeQI+Ys6AO079yWmUexAm4PS/CVzS4HxUeHIHDrvTLuD4c+SrJsfYeHV6ZB0
YHvNCokP9k83cySfM+x0mGX3yGA+MDwg4dfp8Pn/wm2fmD/Y2zNM+G68ucsh
L0BDLOEKLPy6HQLOBLvefQE1T6HHYQHrh3sHgPp3TA554OfT4yCx+cFKEaD+
ix6FWxad73HgeVd0/wYw/lkff08pX9rrsDn9+F7uH+/tf5q9FhY73udQ5+Kp
GHPzvT0AvPwULg==
      "]]}, {}}, GraphicsComplexBox[CompressedData["
1:eJx0nXlYTW8X99U5lSaNGkihDMksEtKmMmRsotKAIpQ0ieZTpiYJlTEZIiKE
DKWUDJkVRUoiZWg4DafTZHj36vqtlut9n/f557m+19l7n/u+91r77P3ZH/2G
rd1iuU60X79+alL9+sH/G12YGR2g1D67X+//mo21GgyY39ZTGMyRMU/PDx1h
2peXNl5N/9W4pC+bno8Xqbhv1Zdz5VbffCK07ctOjs/cSosd+7Jnc118QPSa
vhx1LbrwnpZrX77tFuyXELm+L5fduqPrM2JjX5boMXWsSnTvy4l5PnUi3Zvp
eAOEhqoLvfqyxa3ye4JQ774cP67mcdlLn778pyY3MEHNry+3H7znob54a192
VfhWffqIf192iJya0PZ6W19+/vzCkwXDA/ryJgv+hYDNgX35wKtVT7xPB/Xl
SYObNnm2BPdl+9VpiyaPCe3LmbWT3hU7hPVlRsO7Ndua15c336883MynbLNs
FW/04XDKwXONlhpF9GX1kblHVr6jfOSmuYFL6I6+XFXo7mc5aGdfnuHdvnvC
dcqWYgc+DLDb1ZcnqNx/UdxG+bGsmOihY7v7sk5ERanx9D19+XDSoLCyYspF
+z02btke2ZdzJS3b6pWi+rLnBvO8TXcpT3O76PRuTXRfLvyScmLUL8rSZmla
gWdi+rKazlzmqnFsX551xmza2/eUNSQdNneH7u3LBfViptxBcX1ZP3CNpMpj
yoU7t+z/Y63dl7uvXR+514s+x/4pzT/f+u4lv69/zL6HPdxfxe/rn7+7hkx6
XMvv65/pnRV7Tv3g9/WPoKtsyPIGfl//7GhxDoxp4vf1z4/ZGo3Tm/l9/ZNw
VWHF3RZ+X/+sKDHf+6eV39c/Gr5K/TkCfl//jB6n7trNZuyftYFpzQ/b+X39
4yMMS9km5Pf1z8RxGvLaHfy+/imfuWtaJpuxf3ISBzwy7OT39U984aeEK2zG
/hm6sl+XXBe/r38GvZl/ZxObsX80lEQnXGcz9o/BKBn5djZj/5yRHHBGt5vf
1z/LTIYHLWcz9o+fstYYLzZj/3hcMD+1k83YP+PvSZfEsxn7R2WYJSeJzdg/
zi8K5RPYjP3zWn/b2hjI//WPe+f0/iFsxv5JuDhjmDubsX+Kv10NtmIz9s8i
t8n9Z7AZ+2dc9t91mmzG/hkx3rbuNzs/7J8ZYYITH9mM/dNdtazmNpuxf2Kj
Wk0S2Yz9w60JtvdmM/bPQdWyyIVsxv7Z8nRxvjabsX/MDcOWd7PnA/unfvMh
82I2Y/9wVg0rS2cz9s/x5+rS4WzG/rmdX8i1ZzP2j+ZkyZIpbMb+SdrkFS7F
ZuyfliOLtb6y9YH9s6OwdMcdNmP/zLtz0uXOO3Y+4XULUl4ZMRm3CjTefuEb
u9/NvRAnuZBxsJD9UvuNb+y/z+9ig4MFwzk830Whnm/cz6FzVYnDCmZaaCIT
1sg3jrs5cN8y11WM2Bbr1R58Ni9bP/ya4Wqm85OJIYfth+rFcTMWTd3GdE0f
4RrPrkdCOn/8iYDtjNttuTulbB6877nh58cBzB6+5Ut59vyExp+90y4RxDS0
nGFms3ltu86g5oXBTKPi+NNr2Pwo13zV670hzO3XU/2C2Cx+xkMhojCUeX/N
9TzUS6yEGH+/CI9JkOVuhHpawT/30OY0j1mZ2/91Ips/9z8eK2MaznjY/NwN
9Vha+9Ip52c4c/ySyWeoV4PisHrL6Ahm536pJD822zXt2PBxzA5m7mexYmc2
4/Xmx8PCopfsekrdrJoiYqPE8KV8bCte840rp+0zXXpgOrMl5aVKUzW7vbbp
hZWH5jH9xnyIrK3jGw/YsZ7XrrucUZ75OmT1T77x8IgHl8vkbJi1D+4eaGCv
NyNrsk/HjrNn3io1XPvDXm+M/iwqOz7cmbHT81t3kr3eDL+SLbvtmz9T/uFb
fQi7ftuPHPi8YMR2ZntIRcUDNgvG5YgM3BrAPKy4t4TDjlfg9TTzVnYgc050
vbE+mwPX5rdMFAYxIiu0XO3YHOyh4ZJiHMJo245S9mfzVZHo8R/8QxnvqMo1
kWx27U7+0H0ljPn7uKLqAJufick4RAbxmNb4JA3o37R1dw/8UQ9nHG//4MHn
iYMS+d4F4Qyf2bgU9n80ck3Ca5cI5uDo1ObtbDaMHho+SGQHs+gX59g6Nju9
cshaYBbH8HzqvcvZ9eRd5kcG/x3L6P1hHHIq+MZj6k6M3L57DnM2Z+XqTV/Z
9bU2SH8YtIgZXr747YvvfOOPxyLKavZZMpo9iqo32frsf5VXMMUmiKmtU78w
nz2+eWTU3CvJwUxEic/0jWyWlwuwEqkMYTzPiCzhsdnBdJlAVz6MEbyK2xbH
5jqFHK+RejymxErED+rly/s5E7Sf8Jim58FDIQ++FLR7kGc40/533kjYfmBm
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
Vh5zz7GtG86/ZMNS1dyj7P08//MUuF78Wn9j7U3jCOZLR0ER9OcqhylFbeUR
jMHsz0/hetFtNzjmtkYccylvpV8Nu55Oe755neNrM1N/7bKSYK8XpkI9Oz/t
2Uy/1IF7+ezzdKvNQ/VrExcyndXJ0u3s8/QsrxGaGl4WzPwrUWIa7PXCf672
0ScyQQy380QFPO/Gz74oM3ZZMGPs7DcUrhcfTr/YdP1ACCN9L/Mh3B9rvDi6
b3FRKLPV/9V7GO/kDUMN9Lg8pszRNQTqi5/MHL+fymMsm5se9/YbZ4ZHxrxw
pjb9vQusR1TE/fZljeFMekhcGqyX/rAnm+f4xjExc1dowvPs3JyXrcujlZng
fRvMthaz15+Lb62166YzIrfkNsqx14tHercvpQaFMoamxUfgenEl5+2mcVlh
TLxwQQ/0p+uNs5PbQ3hMd2nBIFjvD872Pika4cylUAdX+Fwj022DztFxjKTY
p+189vnO2zPER6AcxkTvOnoSrhexPmW3743jMV2psTwYf9CeCrH4Zzzmjtoi
RcivuUM/7ToRxyQ8+RhQ+D/q2SZT88fhmDBmdGukJHzf7ONpHrUPRjOLerY8
GMteL5w292xrV+Mxu0VSBsDxshQHWOje5jFb/y4MgNyvdunPl/qajOWmosfz
2euF5KPohoKqMMar3uM51Iuuru+3Vft5jEPmp9+w/e1tmV1Rc3mMwYjkN5CZ
X+ezhVU8Rm3m4oNwPk76P1MdfSOOcROu0IX75+6hpe7R++X6xjtrl7d2xWoe
M9zPSqW333/uXRk/gMeoL2l9Avtb2qYJt15m7w9sM3rvZ4a+jmva56zO/l7b
xu9l768eecrsPb+HxxQab5eD/Ye3m5TrTGfv32N+9N6//d/fF1tTPkfuGI/Z
Gcypg8+Xd2sO4i/mMRM8s1og754wTL8rL465oL8jPOd/jFdq9Gx/EQf296i6
pff7EhXKP72MYOeb8m1g0v/4Pvvd5xKmJvGY3BV3WuH4XMPvUXfn8xjFt8dq
IG/+kvr6xjr2eK0DB8P+nc+MZ0TE8phNw7f29mu39OL7ax7EMem7ssbB9Qv5
rqZcufV+NXo/UiXNDLklT+9HRIy83TRk6f3IV47irAnS9H5EfIdyyztJej9i
LPF6bnZ/ej8SU+0dVSNB70dujup4O0yC3o+UJtnf4YnT+xGfecKgP2L0fsRj
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
ZHi1lfy7/MjQnN7++Y+Hfep3/gxsjzzsoGd67+8n8rD39V5XISMP+7hrjBJk
5GH+z49t7v29/I+HPdjkz4OMPCzD1qzlYiv5d+79pmbC58jD6jNfZ0NGHjbC
Qz0CMvKwE/NzNvbyk/942LO6MYWQkYftNNl9BjLysK6f/i8utP6//h3ysJcL
prUNH0i+3b41bbUSiuTbNbev21YlR75diOeFHwoDyLcrjZfNvyVDvt2Fp5oB
YdLk24VXj70XJEW+3TrB8aILkuTb7ZXfvO5Lf/LtNuudsJzdn3y7xYbW6vD3
zpCHeT21+K4jQb7dk0Ybq2vi5NuN1M42NhUn3y7rxouFtWLk2zkWzTt0SIx8
u4RxiV5Lxci3Myqw7K8sRr7dmHiJpiou+XYpr6ftvcEl365qZ5pRIpd8O/eX
l68Hccm3S9JK0Hfnkm9nt052zRou+XZOoQcmOXLJt7M+51XoxCXfLkO74P46
Lvl20Xs3W3tzybebcfb4/TAu+XbxqSuLD3DJtxvMlV2RxiXfbnzZkuO5XPLt
mr0CXr7jkm+XmWz+poVLvt2hbMMtcmLk2yVac0aOFSPf7t2R3WoLxci3yy+Y
M2mjGPl2osf4Z/eIkW/38UOYzAUx8u32fbs+5KkY+XYe74UaP8TIt+tfK/dC
Spx8uxDf73PGiJNvJ247QWahOPl27lqH7TaJk293a5OKeZQ4+XamXpNPXxQn
v46zPenQDlXy6xpjzodvViK/rqH4+ZpP8uTXvVudpvlzAPl1lX9dTznIkl8X
MzriirIM+XXGGiVKE8XIr3PqkJ8EfBp5mNQlnf3gByIPc5EawT/DJb9Ofuyk
TXu45Nd1b1Q56sMlv05+vUs01AfyMOnKJcFQP8jD8pN/2EN9IQ97d+94MtQf
8rCKqRwRqE/kYa77F2hv55Jfl7Za+3Mkl/y6c8WzQo6Kk0939VSu9ixl8ukW
XCrs3KxAPp1KlIH9ajny6b5U7JfMkiWfzvZmoa2rDPl06zUHdswWI5/O+o3I
EzEx8unCMhx833DJp2sYdvEv+LXIw6Jt+8vFccmnk345j+/PJZ9u36rF4zdw
yad7MkQs25lLPl3WLv0hsF7Iw/b8yRNbzSWfrrOrywj2Rx7mYvP+pB+XfLrV
ZXHTdnLJp1MPcazdL07+XPtkFc1ZKuTPNQzlxlxTJH9Oqf+gFHt58ucsrz60
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
VrcvsB2r/xcAm8+8
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xe4z3UUB/DftTfX3lx7E7K5NikzlKwoo+xZZDXsTaWhJw1FVgMVykrR
U5qUkYatzKKnQb3O44/XPe9zft/nNz7f8/vdlP4jugxPk0gkkpjtz61qcpZE
YoY8nxZMMntALcd5+XG1KTvkCWodbsiD6CUX4if5HcbLtfhHXswIuQq/yx9T
h7b69Hwmv8hkHtSX54K8k8H01hfmZ3kjS6jLbWYZ+FxewZR4v/QxK8Iv8iaW
Uo92ZhnZL7/E1Hg9+poV5bi8mSepz+1mmfhCfplpDKEBd5hn5kv5FR5lKA1p
b56Fr+RXeYxhNKIxTUilKc1oTgta0orWtKGD58jK1/LKOH+Gx7nR0Twb38iv
8USccZwJncyz8638OtMZGZ+fzuY5OCCvYgajuNesGCfkd3kqPj9dzHJyUF7N
TEbTz6w4J+X3eDrOhDvNcvGd/AazGEN/sxKckt9nWZwTXc2S+V5eE7sYZ6yv
wEV5F2O5T1+S0/IWnonPpK/KH/IncV500+fmkLyWcXJN/pLnxD2SK3JJ3s1E
uS7/xbXcL6dwJu6p2oSt8kNqbf6Vn40zk6txNc5Xbc5eeZJan4UkMYtWdPRY
dzUPczkc+6Q2ZhHr9H8zN3ZFX4l5XI57qzZjMR/pH1HrsSC+vMykJeO1A9RS
nI29U1PZJj8c33Guy8/FPZSrc03ex2S5AWnopL9LzcsReT3zYvf0lbki74kz
YaC+NOfkD3g+doy7zfJxVN7A/HgPDDIrw6/yhyyPHaOHWX5+kN9kARNin7jH
vADH5LdYGPctdifud5xrvN94zXieuJ6e9KI3fegbOx57G7sY+xT3Os4rrvXc
BflRfptFccYMNivLb/J2Xohd1tfgT/lTpsgNSZt083e0NUsY6LGa1OYWalCd
alSlCpWpREUqUJ5ylKUMpSlFCiUpQXGKUZQiFKYQBSlAfvKRlzzkJplc5CQH
2clGVvzkJzKTiYxkID3pSEv8j6h1c80S/wN08Ke8
         "]]]}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Hecz3UcB/A788zj7HnOOHtLmdFUaCgVRaUhJZpIobLaAw1HdkSo7L2i
4u6ksveIhspqZ/R8P/zxfLzen9f3+73H7/v9fu6b1qNvpz45EhISEhmZeDEb
E11OcpGbPOQliXzkpwAFKURhkilCUVIoRnFKUJJSlKYMZSlHeSpQkVQqkUZl
qlCVaqRTnRrUpBa1qUNd6lGfBjSkCY1Y74a+dzMT2Ed3xrCV6tzCK2ziP+eW
l+0Ywmp26X4j2dyCJ5jH57p1rGUNq1nFSlawnGUsZQmLWcRCFjCfeezkVwr7
m815nM+Cbge/UMi6GY/xadD9SznztQxmFdt1xylovoy+fBJ0/1DWfA2DWMk2
XWV5A8PZwM+6AvJSYmPMDbpucjTfkU4nXmYjfzt+h3yDzZThPXZwNc+xIp65
88bLPdzJQd7mG9I4wth45nTkAMNYz0+u7Szzc5h34vfTlP08ypzgvA/kXu7i
EKP4lmpksJubeYmv+Ms1t8vXyaY078bz5CqeZXncu/O6yrfYQiU6MDT2Az86
fqt8lUzycQm9mR0crypvYiRf8qeulLySgSyL36pLle15kXX8oEuSTXiEj4Pu
D0qar+AZlsbz1B0jr7kxDzMr6H6nhLktA1gS96I7Sh5zI3oxM+jOUNzchv4s
5uv4nyK3uSEP8VHQbeYIuawb0JMZQZfNYXJa1+dBpgddFofIYV2PB/gw6KYx
lSlMZhITmRDvOvYU48ggk4PxHXNtXe5nWuwr3SYOJF78uNXhPqbyvm4j+7lA
bV0PpsQ+tj5NMfPl9GNR7BvdPs5Ty/peJse+sT5Firk1T7Mw3rVuL+eoaX0P
k2IfW5+kqLkVT7GAL3QV5fW8wFr26M5Sw3w3ExljXUXeyIi4jhO62+RrZFGE
ljzJfDY43kW+Ge+SCvEM2Ml1PM8adsdzlSk+9qPN/wM968WC
         
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1ufDjWUcB/AjRISQFZKMEkpmNiUrLdnbY2Q+yCabbDIrKhWl0rZX2kZG
C4UyylYUJUX1+f0RvTsvPs/3e13nPuO+7us85y6c0qdx6lWJRCI868+UNIlE
zkyJRDU5gDxpE4krfMg0OpIrXSLxnXyZWmQz/lo+T3+OeZ2T8k2GcD+lyOS4
nfIZUsnLP3zEdFKozXHPPyXfYigPUJp8/MvHzKATd3PC8afl2wzjQW7nBhLe
8xM5k87cw0nHn5HvMJyHuIP8nPLYz/JdHudhylCA0x77Rb7HCBpzJwU5E8+L
xznLOX7lN85zgd/5g4txjOcsZySPUJYb+TOeK1cwiiaUoxCX4jXlSkbTlPLc
xF/xXnIVY2hGBQqTxhp8Kp+kC3X4Oz6XXM1YmlORm7nK8Z/JWXTlXi7HOcg1
jKMFlShCWsdvlrN5lLqxZ+J85VrG05K7yOzYXXIBfShKOnNb5By6UY/rzH0j
FzEg9kmsnVzHBFpxvWO+lYupzLXGX8iF9I39ZXxAvkox0htvlXNjrfUjsju5
9X3yFeqT3Xi3fCHWTz8qB8Z+0n+Qt8rX49zl8diTcU3l+ngfc0/EnpCHZQnZ
Wi6hClmMv5TF5bNx7eRP8jbZT+aT38tb5GtxPeSxOJ6r9W1yXuwH/UfZgzz6
frmUBuQw3iNfZBD5jQ/KZSRij7GBibShKlkd85V8jsfi/clg7nM5n540jL0U
+5CNTKIt1WJNyOj47fIpenFf7KXYm7zPZNpRPdYl9k3sQzYxhfbUiLWIPRHX
K845Pke8NteQKfZQXOtYy/jcZIv9Etctzp2csTfIxWU+YCodqEnJeC2fdYd8
mt40iueZ2ytfYjAFjA/JNyiqn4jnytyyq6Wc7f9jXSaTlqqMZJvHLlJG789z
+ibOUMy4G8P1J3mPg+Q115ouemc6kUJHOtCedrSlDa1pRUta0JxmNKUJw5jJ
u/xAHq/dikf0oczgHb4nt/mWNI7fAN7nNEXNPcoQfTpvc4Bc5lrwsL6QjZyi
iLmuDNY/5TdKGqcyTX+L/Vxv3JyH4ndHVmEEW43/4A79MRboV6gQn4ENek05
lpP6zbFeDNLryIkkmMFdscZ8YmqWrM14fjWeJm+jN1ON/+LNuB7G1RnNPuOp
8VtIMx40vldOIg0zqczjbPHY3XICv+u3y348o1+mfKwJ6/Uacgwn9MKyMwP1
f6mkD+Nj/Rwl9F5M0S9RNo7lDf07cuhNeUDfzAVKG/flaX0dx7nJuFP8nusf
cZZbjXvG3tWX8S3ZjZtwv/4UazlGIXMpsZf1SbzOXq6L/UQjfT5rOMqN5jrG
NdQn8hp7yBZ7jPv0eazmJwqa6xBrpj/Bq+wma+wxGup9mcBSviFL7B8a6H0Y
zyt8zbVxvaivpzKOl/mKzLFe1NPrxjWNvcM9cQ2pTa3YZ3GtqE41ejOWJXxJ
plin+M7rvRjDYr7gmliT2Nd6T0bzErvIGOcfe0efyyp+pIC59vTQR/EiO8kQ
5x/7WZ/DSo6Q31w7uusjeYEdXB1rQiV9Nis4zA3m2sb/Hv1DfuGWeL/47umL
2E76WDcq6p9xnlLGfZil/025+M6xXD9EPr1N/K/Q/6GiPpQPYi3lOH7Wi8fn
je9MrLecniZ5v5m830zebybvN5P3m8n7zeT9ZvJ+M3m/mbzf/H/vN/8DGmGD
Gw==
         "]]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{53, 2577, 390, 383, 741}}], 
         PolygonBox[{{53, 2577, 390, 397, 394, 383, 741}}], 
         PolygonBox[CompressedData["
1:eJzt1vffTnUYB/DHikQkMqKslEJGhCgRZe9N4zHLeCIaUooKmWXvEYUQWWU1
jIY9smkYDSQjKqXe16v+hX67f3g/1+e6zn3Oc9/nfM95nQLJKY26p05KSgqT
/BmVKikpW8Z/8wH5Y/UlarKP8eRjGyNoyQafW6I+RSWyspmhNOOM7RvV16hP
IUabTVMf4Tb+1B/kE/llanETG82Wqr2ozHX8YjaG6fKjFOUv/SE+Y5m+N/eS
jbNmY5khP8btXNEf5nOW65/mPq7nnNk4ZsrJ3MHf+iN8wXjeMmtHsf9O3tdm
XzKBWfr2FCcV35htYiKTmMwUpsY5iN8R3y3+Xxw39md2sG8HSpCab80283bQ
d+RO0vCd2RbeCfpOlCQtR822MifoO1OKdBwz28YK+RmqkJ3zZnOD/DiluYrj
Ztv5QH6W+8nBBbN5QX6CMqTnhNkOPpSfoyo38KvZu0Huwl1k4HuzT9X+1OZm
dpqtVPtQjZxcjGutDqQBhZlvNl/tSlmuZhNDaMIPtq9TB1CH/GxnJK3YZfsq
9XkeYA9jycUWhtGcS7Fu1EE05AATuSW+K2/GtaINh5jCAvssULtxhHJ8xZi4
dmSkKT/63Hr1lVhT1GU/E+I6UoAdvBHritYcZDK77bta7Ut19jKO3GxlOC34
LdaxOphGFInfzijastD2hWo8GO7mGn4y26C+Sj0Kxvc3W6O+QA3y8LvZe0FO
oTyZOGm2h7XyizzIjfxhtijIT1KBzJwy28vioO9BRa7ltNk+3o/nTjwf4p6P
+zjWcazNWG+xZuJ6xjmJ7xn/m4/imRbPmVhnsR7iOI7Zk3vIws9m++Ozcj8e
Ii+X4x5XX6cxt8Y5ZzQPc5ipHGO9z7ZN67jp3KN04bz+VrUda+UfuUluxSh5
KV+TXd+AnvJrvMNO0ptVo43cmla0pAXNaUZTmtCYRjSkAfWpR13qUJsevMrb
7OAqx65KLflJXmE220lnfj815TdZwhGuN6tPijyAWWwjrVkVHpLf4H0Ok82s
Ht3lDzlGbn1T+stvsZU0+vt4UD5HETmZNfIP5JNbMlL+mYLywyyWb1c7cki+
Tq1LN7m4+ji/yN3VwjzKB3Eu1DvoxFF9NzUXTXhZf5KZcV70t9GeLfquamru
pYa+hPoEZ+UU9RYeY7W+mNqZ7+W8agtGyKcpILdlkVxU7cBBOatah67yGQrJ
j7BC/o6ccmNekn/iZrk1M+TNpJIrU11exQlu1DdnuPweB8iirx3rVF7Ot9yg
b0Q/eTqbSNJX4gF5GAvZz7WxbuK3yy8yjS/5m3ti3apDWcA+Msdaiushv8BU
vuAKFWMdqkOYz14yxVqK8yf3ZQqf8xcVYm2qnXieyXzGn5SPdah2pA+T2Mhl
7o41pnbgOSaygT8oF9dUrUyl+A3xveJ/xTFj3/gMZbmLMrTnWSawnt9ju+OU
VtvxDONZx2+xn22l1GSeZhyfcimOZ1tJ9XXeZQ/XxP0Q60nuzVg+4SKl4zmj
DmYeX5Ex1mSscbkXY/iYXyllXkIdxFx2c3Wsk1hf8jK+IYe+IU/Jo/mIC5Q0
K66u5Dh59M0YKJ8ifzynmCPvIkOsmbhH5ezeL4ulTbxrJt41E++aiXfNxLtm
4l0z8a6ZeNdMvGsm3jX/v3fNfwCZw7Ri
          "]]}]}, {}, {}, {}, {}, {}, {}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1vf/TXUcB/BrVjZl762MUCJEUtkqlRFSMspOGggJlSJ7b00jmdGQUSF7
JYXKiMheDUrP97/R4/7w/L4+r885955zz/mcx/cUbtu9SbeUiUQi9PWnTopE
Inu6RGKTntr4cppE4l16p00k7iEbJ/RN9KKDfivXjL9nBe/Rx1xtbuR3fTPP
01EvT4K9+qe8T1/9Xm7ipL6FF3har0AKftA/4wNe5BlzFUnJj/rnfMhLdDJ3
G6nYp3/BnPgdcW5xPF6mH/0ZwCsM5FUGMZjOPn87qdmvr2QuQ+hirhJpOKB/
yTxeo6u5O0jLT/oq5vM63cxV5jp+1lfzUZyPfh/ZOaVv5Q2661W4nl/0NSyI
c9fvJwen9W0MpYd+JzdwUF/Lx/E79Trk5Iy+nTd5Vq9KOg7pX8XvM25MAf7Q
F8Y1Mq5LLs7qO+J4xk0owhX9LXoaVyM9h/Xhsikl+Dquj3yAgvypj5QtuIVF
cR9kPXIznjacM/+2bEYpdsa5y4cpyiTactX8aNmSmZRhCu0YZttzsjrTyMA4
HmcWR2wvKb+J+yQfZDqFmMiTzOYv20fJx5hBaSbzFItjDcn65GECT3De/AjZ
nJvZFddKPkIx/tHHyFaUZXg8X/IuMvKrvi7Wg/FDFOZvfUmsV+MG5OWCvjuu
VTxveg0ycVRfz9JY23pD8nFR/y7OLZ43vSaZOaZvYFncn3jezN1NFn7Tv+WT
uA5xvePcGcs4xjOBiUxiMlOYyjSmM4OZzGJ2PLO+txZZOa5vZHk8g3oj8nNJ
38Mw40cpzr9xXNmackylPe8E23Kkcn9SO2dZTM6Xv5DP+EU5m++5UW8ouzKR
LdxgrrSsyRO8xWqukp2b4nNkIytZyEwmMpKB9KSL7+J6riMtaUjNLdSgDW+y
iiuk4mbu4nGG8iV/k5IGdGECm+O7nWspWZ3WvMFK/iIF9enMeDbFedi/pOzJ
NHbGeZurJlvxOl/wJwnm8TN57fOCnMWe+O16PfkB+8ipd5KHKWg8Tm6M32xc
Qh6liPEcWVIekLnls3Et5BFZSE6VJeSOuJayqnyXlnFd9IMyv3xNFpefyz+4
5n/YMVnU3FxZSv4k88jn5a8UNp4pv4v7ZlxXvs+P5NCfkYcoYDxWfhv3y7i4
/JD95NJ7yClsj3ut3ynfYW+sDf0xOYTPuMy/zq2XnMHuWC/2qSOfZgwbYk2Y
Kya7M5ltsYbMVZEtGMynXOIf33e/7Mho1se6sW9RWZnmDGIFF7lq//tkB0ax
LtaS/YvIO2jGqyznQqxD+98r2zOSb2It2b+wrERTBvIJ52Nt2r+QvJ1HeYVl
nIt1aFtBeRuPMIClnI01ZlsBWZGH6c8SzsQ9te0yl7jIBc5zjrOc4TSnOEl+
n6lAE/qxmNP8bls+WZ6HeJlFnOKEbXnlrTxIXxZykuO21ZbtGMHXqeLFyHqS
5XiAPnwcx+A3+98jn+Jtvoo1SW7K0pjeLIjjcsz+tWRbhrM21kmsL7oxia2k
c8wyshEv8VGcG0d9/jk5nV1ktt/d8j1+ILv+pBzGmlgz5KRXiuS7XvJdL/mu
l3zXS77rJd/1ku96yXe95Lve//ld7z/1TIWQ
         "]]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{741, 2579, 316, 305, 1395}}], 
         PolygonBox[{{741, 2579, 316, 372, 327, 305, 1395}}], 
         PolygonBox[CompressedData["
1:eJzt1vf/VXMcB/ArLYmiFBEVaWgoFE2VdmlHVNKOdknSQgjRUIqK9t4bhfae
KisaFEVDaWh6vv8Nj/vDs/fr8z73nHvuOe9vj0/O5p3qdkyRSCRCL/8USJlI
ZE6XSDRVn0iVSKTlW3kajeUc/CW/TUM5G4flLyjIg9b/qF8znG7U0buNA/Ji
nqOi9Q3slqczkEIU0TurfsMIutOMSvrp2CPP4B0KU1TvnLqSj3iJ56msfyN7
5Zm8G/fGQ3rn1VWMpAfN43t52LEL6mpG8TIt4jt4xLF/1TV8TE9axvXivDhO
MYrzKI9RgpKUojRl4jOuc1Fdyye8QivKxrmOXVLXMZpetObxuKZjl9X1jOFV
2lAuvsuxK+oGxtKbtlTRT8938izeo3zcl95VdSOf0od2VNW/ie/l2QyiQvwG
vWvqJj6jLy9QTf9mfpDn8H7MTPxevQSb5XH0o651Fg7KS3iR6tYZ+FGeywc8
ZX0nR+QvY07i2VlfxxZ5PM/K93BM7k89OSuH5KUxX/K9nJTbU0POyE/xrNV8
zJObqDk5Lg/mafkufo/npxZgecyTmptO/B2/XS1EpXinagraszVmQs1LZyZY
/8lr1Le+nQ78Gu9OfYAuLIsZV++jI6fifagF4/NyTfUW9sU8qPmZLzdVc3FC
HkIjOTt/yCtiruX7OR1/DzFj8vVskyfyOg2s7+A3+XM68qT1rfwsL2BozFLM
oV5KtsuTeINO1NLLxC/yQobFLMVs6qVihzyZAXSOuYk51E/NTnkKb9IlZiLe
V/zmuI+4NrWpEzMU7zqeZdw3DWNe4r3Fb+eZmA0ax9y6dhp2yVN5i65xLb3M
7JcX8WGcZ303R+WvaCHn4UzMqVqYrjSx3p2aNP6vYSvP8QFrKUxD3mIFabif
J+nLYv5w/iWyyeXpynS+1dvFTnawnW1sZQub2cRGNrCedaxlDatZxe9c5A7X
LEcXprFS7wj/crv143RmKt/opVZzU5M+LOKw/gWyymXpxBS+1kul3kcNerOQ
3/QfUOvyOp9zXi+LWoaOTOYrvabq+6yhEA14k+Wk5BneiXvjXoaygeq8ygJ+
dZ3h6mYas4P3WEX+eKYMYyN12M5rLOOcc59Wb2MXg1lHabbRgUnxHn1uhLqF
JuxkEKspyIdsoj4D+JLracTAeFbkYgjrqUYv5nPItZ9V3433Qz5q05+lnHX8
KfXteGZkphTtmRjPyvECaj3e4AtSkJOqvMI8DvpcXrUW/VjCP3qZ1JK8yIS4
d73r1BxUoSdzOaB/hlvlErzA+Pg+vYR6D5V5mTns1z/NLfJjtGNczIPeNe6W
K9GD2fyi9zcZ5Udpy2fxnvR+5hQZrIvThk/j+ejt4yQ3WxejNWPj9+n9xAlu
sn6EVoxhsd4iFrKA+cxjLnOYzSxmMoMfOU565z5MS0YzXe8H/uJG64dowSdM
0/ueP0lnXZTmfMxUvatklyvyErP4Tu8YN8hFeJ5RTNG7wl3yE3RnJnv1jpJW
fpBmjGSy3mXulCvQjRns0cujZrG3m5Q6uc9L7vOS+7zkPi+5z0vu85L7vOQ+
L7nP+7/u8/4Di/6Pqw==
          "]]}]}, {}, {}, {}, {}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1lW7VUUABuAN0ildgtIpKaEgoHR3SyMhqXQ30tLd0kq30t1g0J0KSLeU
7/oJ3u+L93zzzay1z9qzznmeSd2kfdV2EUOhUKCyHy9kkhih0MmoodDGaKHQ
IGqRhyRE5iCTaEUJMnPK9ZvkYGrzCUmJwmlrv8gh1CEvyYjKGWu/yu+pSz6S
E42z1s5xngtc5BKXucJVrnGdG2x2z1DqkZ8UROemtS1yGF9RgA+IwV/Wtsrh
1OdTUhKTv61tkyNowGekIhaHmMw3lCQLt1y/XY6kIQX5kNgcZgqtKUVWbrt+
hxxFIwrxEXE4wlTaUJps3HH9TjmaxnxOav5kDh2pRFyOMo22lOHj4D0wn65U
4x+ft0v+QBMKc57F9CQNJ5hLJypziZ/oy/scYzrtuMEqynKBJfQme/CeWUC3
YF9ZS3WusIz79A/2hPXc9Wy75ZjgOWnKdVbygCL0Ii0nmRfcQ+fgnbKGh1Th
Mj9zj37Be2Id8TjODNpzk9WU4yJL6UMOzrKQ7tTgKssZEHyuZ90jx9KMoqTj
FD/SharE5zdm0oHy5Ay+u/v3ynF8zRekJwG/M4tvqUCu4Pu7fp8cT3O+JAMJ
g+9sbb+cQAuKkZFEPLL2mCc85RnPecFL/uUVr3nDW94Rcm8EIvIeB5hIS4qT
icT8wWy+oyK5OccielCTa6xgIHfYEDwXkYK9ikwUe8AMslOfCby1ll7WYCQn
9aekNK7AIDboB7lFPP0LujFPn8scZjOLmcxgOtOYyhQmM4mJTGA84xjLeg7w
N+/73KJ0ZYy+jv38RVxzRejCD/oJnvCBXp6BrNX3cZM4emE6M1r/k8ek0Msx
gDX6v6Q2rsJQ9uo3iG38OZ0YpX8sv2I8b/R0sjoj+EPPLGsHz8YjvZGcTHLK
0p/V5pvKaWRlNnUZy0tr82RjpvARs6jM9+yxnlFeD/ZdNmAisZhJIToG79F6
MzmdbMyhHuN4ba2JnEpaqjGc381nkrWCveKh3lBOIhll6Mcq81lkneD98EL/
UFZiCLv1DLJmsGdc02PKgnwX7JX+ijTGVRnGb/oDkhqXpi8r9eekMq7IYHbp
V4lh/BnfBs+uH+c+SfRS9GGFvpMrRNc/pUPw+/Rj3COxXpLeLNd3cJloegHa
B38P+lHukkgvQS+W6du5RFQ9P+2C96T/zDYuEsVcPtoG+6P/xFYuENlcXtoE
309fyhbOE8ncJ7RmkD6QAfSnH33pQ2960ZMedGcJmznHe+7Pwzd00xfzK2eJ
aC43reiqL+IXzhDBXC5a0kU/wj8k1IvTk4X6Jk4T0nPSgs76Ye6QQC9GDxbo
GznFO3KYax78fxkf4jbx9S/pznz9WbAXEcLnp/D5KXx+Cp+fwuen8PkpfH4K
n5/C56f/e376D4+1iP8=
         "]]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{1395, 2581, 203, 158, 2005}}], 
         PolygonBox[{{1395, 2581, 203, 260, 248, 158, 2005}}], 
         PolygonBox[CompressedData["
1:eJzt1vf/zVUcB/CL8LUzo+yVsrIqm8pIshXJSLaQvUdKIhQqGVnZKVkhI3vv
LbPsvffqef6Ffr4/PL+vc97387n3fM75nO/jZGncrkbb2JFIJKjuz5R4kUia
hJHIi/EjkX3as2RH3uQFHqlNZZR2I14hhvNq+/lFuxNvkZ7HatP4UfsjCpCA
C2oHmK3dmXJk4InadEZrN6YgCbmodpAZjNH/mEIk4pLaIWYyVr8JhUnMZbW/
w3OEsYXf41d+Yw6/M5d5zGcBCxnn3qYUIQlX1A7zBz/pN+NVknJV7QiLGK/f
nNdIxjW1oyxmgn4LXudZrqsdC+PR7kJ5MvJUbQkTtVtSlOTcUDsexq7dlQpk
IsKf6pNkK4qRgptqJ8JzanejIpmJxVL1ybI1xUnJrfB8si9VycU/YY5kd94m
C7HD7/E5NcnDMtf9LD+hBKlYwUDe53aYH9mParzEKgZTj3/DOsgeVGID35KV
v/iKusQJY+cLarGZkeRlDUPYRX228j3LffcU2YbtlGQ937Cb1NThTlgn+Rk7
qM4mRrCHl1nN1+zkQ7bwHSfDOyR78g4bGU42VjKID3gmzBUDqE0+1jKUBmHO
wv6SbSlFGu6G90H2pwa5ORXeV9mLymQnbpirsN9kO0rzHPfUTod3W7s375KD
eGFsYb/JTylDWu6rnWFV2G/67SlLOh6onWU1a1jLOtazgY1sYjNb2Mo2trOD
nexiN3vCnvWdHXiD53modi7sQe0+VCEn8cM68iXvkZ91DKMh2/iBvYH7syaw
x/wf2ycTyElyG7G0O8kfWcd9qvEJ37Kc6xSmPI35kvmcJQuZyURGMpCeF3ie
dKTlOdKQmlSkJAXJw7goRDk+YgDzOEMyCvIWjfiCuZwmKVVpzTcs4xoFeJOG
fM7vnCIJVWjFMJZylVf4lO9YxW3eoAH9mcNJEjORrUTMW0c5irXc413GsZFH
tGQnz7h2qPyTK+RnD/HVx4fvlZvlE9qFZ9bfJePKkTKRXClvUZYx1A/Pr75d
xpafyYTyN/lvuIe9xKhNCM8ut8indGA38dR+kGu4S2XGsoGHtGAHcVw3RC7h
Mvn4iU08pi0j+IublGE063nAh/TjV/4J46Q937OaO7xDc75mMZfISxuGs4Ib
lKYefZnNCRJQiWYMZhEXyUMpPqAPv3A8zAlv05RB/MEFclOSuvRmFsfCOlGR
JnzFQs7zMiWoQy9mcjTMKy9RnPfpyQyOhDUlF8V4jx5M53B4T3iRotSmO9P4
O6xBWGdiEQnrGON94TGPeMgD7nOPnK55nVp0YyqHwjr7LId8jZp0ZQoHwzr4
LLt8lRp04WcOcNtnFeTHDGQB58hGEarTmcns55br03pvbsZEz1DRM1T0DBU9
Q0XPUNEzVPQMFT1DRc9Q/+cM9R8FyocY
          "]]}]}, {}, {}}, {{}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 50}]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw103ec13McB/BfehidWZFZXENG0UPUje6umyjVObNcRdKd0R2ly3F3ZNyo
ay8Nj4ZVRtGyyighD6IoK8qKyMh8EOX5/sMfz3u/3u/f9/Ebn8/7koeUF5U1
SSQSl/rTPCmRqFXHk0uV+fXqqfwg36P25GW5Uu3GPrmEYvl4dsjLqZC7slee
TLnciV/l1+jGBfoDeUueRzU36Dvyo/wKpQzUn8Dn8gqm0J0LzQ7ibXk+NfF9
GWR2Il/IK5lKCr3MDmajvIA74/MYbHYSX8qrmEYqvc0O4R15IXdxI2lcZN6M
d+UHGcNNpNPHPIlN8kPczXB6kEEmWfQkmxxyySOfAs6nr/c4lM3yw3H+lMW5
0c/8MN6TH+HeOOM4EwrND+d9+VHu4+b4/VxsfgRb5EXUcgtXm7XmK/kZpsfv
p8jsSLbKi6ljBNeYteFr+VlmxJlwidlRfCA/Rj0jGWJ2Mjvl55gZ5/T/3vGh
/DgNccb60/hJXsutXKs/hW/k57k/fpO+M7/Jr8d5cZm+BR/JTzBKPoe/5LFx
R/Lp/Cyv43a5O/vjWYbKyXwbd6pm8oI8Wj2Xf+RZcWbyWfwe56vm8IZcpaYy
kSbUk08/r12utmQcH8c+qRlM4kn934yLXdGfQSN74m7VbCbzqv4ONYUJ8Y9L
HXlUaK9T27Ir9k7NYrV8m3oe/8qz4w7ls/lD3kC1nMYBFOqvUI/mE3kJjbF7
+jP5RV4fZ8IwfTu+k9cwJ3aMK82OYZu8lPHxHSgxa8/38ovMjR2jv1krPpWf
YgKVsU8MMD+Wz+SnmRj3FrsT9x3nGt83PjPeJ57nKooZyCAGx47H3sYuxj7F
Xcd5xbPe+zi2y8uYFGdMqVkHdssv8UDssr4Lf8pvUiOn05QGCpjCMK/9B1YR
oe4=
        "]], LineBox[CompressedData["
1:eJwV1HeAj3UcB/DfKcU11EWSiovQNJJo0ZYGTloaOlHIHUqaVjsadIO7I2Vk
HO3M9t2VcKNyuDuUziga2hOvzx+v3+fzeT/j9/x+z/d5UtMz0zKSEolEmo+U
5EQiv04iUaX/UB3HFWxgKsdTxvPcSLH93lLv4TyOYA2TuI6fbC9Rn6AnLciS
vaTeRhv+M1fzkX48PTiBEtnb6r2cz5H8LMtmpr4/J/O/uYZPecc8igtIYY8s
h5f1t3MKe82b+Ix3zffRlaP4RZbLK/p0TmWfeTOrmMos2QBOI8EW2edMY7b5
Dk4nia9lq8kjnwKmMyP+g/gdcW3xfXHeOJ45wbEDOYM6fCNbw9xgHkRbDmCr
bC2vBvOdtONAvpWVMi+Y76I9damVlbFEP5puNORX2fygH0wHDmKbrJyl+vu5
kEb8JlsQ9EM4k4PZLqtgmf4BLuJofpctDPqhdKQeO2QfqxO4kmZ8IVuuPsjF
NOaPuNfqk/SiJYWyQvVuzqI+q5nItey0/RP1Ua6iOeW8wE18afsK9SEuoZIc
jmEtz3I9f8a6UZ+iN1XkcVJcK1PiXnEzNUxnkWMWqcPYTCfWkR33jmT68p39
itTHYk1xNRuZFveRVCqYHOuKflRTwFeOXak+zKWsJ5cmlPIcN/BXrGP1adJo
Fb+dF7mFxbYvVjM4m0P4XlasPs41nBjXL3tPfYTLOJa/Za8FfSadOZRdskre
14/hcpryj+z1oB9OFw5jt2w9bwTzCM7hcH6QbeDNeO/E+yGe+XiOYx3H2oz1
Fmsm7mf8J3Gd8d18EO+0eM/EOov1EOdxzpGcSwN+lG2MffVj6c5x/BvPuPoM
fWgd/zlZ3MomZlBLkX33A1ykv1U=
        "]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0neAj3UcwPEHl3HKlctxncaVGRqihZbQNaQLSUrJjrvUZVSiYWUWTVFR
aSEqMipFS8pIy2pybmTTsHp9/njd+/k+931+v9/zPJ/sbvm5eWWSJMnxJz01
SZprAdXLJclhPmEcd1AtJUl+1le5jDTr73Q697KtbJIU6WwGcx0NSbXvW32O
PGpwhE8ZTzcup9D1xTqHIbSlEZkcZTkTuJMr2G5/ic7lfq7nLE4i8Z0rdCLd
aUmR/aX6Dg/QjrPJotj//tJ5PMgNnENNSvxvh85nKLmcy8mUxnXxf3ayi93s
YS/72M8B/o49rnmXh7iRxpzCP3Gtvscw2nMep/JvfKa+z3A60ITT+C++Sxfw
MB1pSjZlPIPPdBI9uJKD8bt0IY9wE+dzOmXt/1yfoCetOBT3oB/wKJ24gDMo
Z/8X+iS9aB0zE/eri3iMm7mQyvau1ufJpxYpzn2pk+lNG453br2+SEHMSTw7
XcwIOnOiPT/pTC7iWOs1OpW7Y76sN+nr1OYY6690Sjxrx79rHzIcb9DXuIoT
rL/Xl+L5Od6q98U8Od6i9fTNuHctjJmMd6pL4nucGxkzob9pfb1FX+FijrNe
q3X0hXh3+qeeqQM0UzdrXX0j3odui/2Ud7xSn4p5cPyH9qW64406ixyqWv+g
LzOQLOtf9C2SmDGWMoouNKOKPet0GvfE91PBua/1ae7i6pilmEM+ZDS30jye
CRXtX6XP0I9rYpZiNvmIMdxGi3guMTcxh3zM43TlkngWMRPxvuKe43fEZ1OJ
1JiheNfxLON3kxbzEu8t7p30mA2qcYhljOV2LqVBfJbf+o0+S3+ujeuc+1Fn
MIia1r/q29RyvD2u1Qz9H4/EooQ=
        "]], LineBox[CompressedData["
1:eJwV03lgl3McB/BnbKrpkimKakjEtnLlSqeNHLXRcmzDVlGtHaUidN/uK0eO
yk0niqJyXx0URQgVytFByZHK6/PHa5/39/P8nu9zfZZZWllQkZIkSZ4/GelJ
UpKaJF3SkqQmn8nPUSQ35zd5AoVyY36UF5FFa+td6lLuZxD5eofxvTyfqznP
uhafy88zkWza6P2pvskD3MA15Oqns0Z+gUnkcLLebvUtpjCYa8nTP5i18otM
jnvjFL2/1Ld5kCGUxnU51bG/1Xd4iKGUxTU4zbF/1Hd5mBvpFfvFeXGc02nL
GZzJWZzNObTj3PiNff5V3+MRbqI37eNcx/ao7zOVYfShQ+zp2H/qBzzKzVxH
x7iWY3vVD3mMW7ie8/Vr84U8k9voFPelt0/9iMe5lb5coF+HL+VZ3E7neAa9
/erHPMFw+tFVvy7r5NncETMTz6uXsEyexggKrBuyQV5Afy60rsdX8hzupKd1
E36SX485iXdnncJyeTpXyc34RR7JpXIjNsqvxnzJx7BdLuciuT5fx7tWT2Cu
XKxmslW+i8vlI9kc7089iTdintQWVPJ7PLuaTW58U/UAylkRM6EeTxUzrH9l
FJdZH84ANsW3U0+kmtdixtVjqWBHfA81K34vX6wewjcxD2or5skl6tFsk+/m
CvkotsiLY67l4/gj/h9ixuQDWSk/yWh6WB/BD/JCKrjEugHr5Ze4J2Yp5lAv
lU/kpxhDJd30DuVb+WXujVmK2dRL41P5acZSFXMTc6h/EKvkZxhHdcxEfK94
5riP2Jvu5McMxbeOdxn3TWHMS3y3eHaujNmgKObW3jVYLT/LeAbGXnoZfCe/
wn1xnnVTfpaXUCa3ZGfMqZrDQIqt/wewZZzi
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwV03ec13McwPHv5SoODblklKYyispMhRJN6lAo5EhZd6SlidLQnay7bi8q
M9nZZLsiUpRRVkhG0Z7P9x/Pe39en+/jd9/v7/v7fptlZmdkpSRJ0tGf9LQk
qbZOtd5aM0ke485aSdKNw9igqxnFDfpk9ll/zWLmMd5edxrwp17KaIbrU0j4
Rr/KfCbo8zmcjXoZYxih25PCav0aCxjLjfY6UIM1+nUeZxw32evIAXyr3+CJ
+B5xbXE+JjKJyUzhLu7mHqYyjZt9/lRS+U6/yZPcyy32TqMm3+u3eIrp3Grv
dGrxg36bp5lBlr0zqM1a/Q7PxPXoHqTzl/6MmWTrMzmQdfpdFsa16wtoyN/6
c2Zxmz6Lg/hRL+HZ+J76Qo7gH72c+7hddyKNn/R78f2sL6IJ2/SiuEfWPWnE
v/qLOJ91Bs3ZpWcz0vpsDuZnnWsO5Djej/tjXsyxbNcPmFdwAs/F72D24kjy
uYZN9u83B9GGL+PazUtoQSGZ7Lb/kDmYCk6imOvJcewOszOlHEIeV1PJL463
Nj+I38nsTxlNKeBaqtjh+IPmlZRzIkVcx/PxDJm9OYq5DGWz/Tnm5RzPirhX
5qW0ZI9+2BxCW3Lj/TK7cCi/6g/jebAeQDN26hfiebXuw9H8p7+KexXvm+5K
Hdbrj3gxnm3dl2P4X6+Ma4v3TZ9DXX7TH/NS/D7xvtk7l3r8rj/h5bgPcb/j
2nmEPPKZSwGFFFFMCaWUUU4FlVTFO+v/nkd9/tCf8kq8g7ofjdmiV5FjfRmt
2BvnNa+iHSUM49Hg2H5UEqMT
        "]], LineBox[CompressedData["
1:eJwV03fcT1UcB/BrPWSTbJkRkpFZiZQtW0YqexQeo5JQoRLZqyibMgtlRMh4
HptnpGGXnayyR/U+f7x/3+/5vH733nPPPadwp9jmfVJEUVTeT870UVQibRQd
jImiJeoAniMf92QL+VTfgXKk47zsZ5bq3+B58nNf9iWf6TtSngf4U/YLy/Rv
UpsC/Cv7iun6TlQgPRdkv7KIGcadeYIM/CX7jcV8btyFimTkouxQeI8wt/A8
lvM137CClaziW75jNV+4tiuVyMQl2WHWMNO4G5XJzGXZEdYyy7g7VcjCFdlR
1jHbuAdVycpV2bEwH/1b1OFh/pN9zxx9T6qRjb9lx8Pc9QOpS0Ei1svnqq/x
JNn5R3YivKf+bepRiBRskM9TX+cpHuRaeD/1PZrwKL+HNVIHUZ/CpAzPYwQt
eIwf/G++2ounycEmRtKa62F91PdpSkm2MJqX+CN8B/UdGrCDCRRhMx/TllRh
7nxAS3YzmTJsYwyJvMxeprLRvReovdlPdeIZTxIP0YYb4TupwzhAM3YxiWRK
sZVPSKA9e5jCybCH1ME0ZCcTKcqPjKIdqcNa8SGteJztjOWVsGbhfKl9eIac
3Az7QR1Oc0pzKuxXdQiNKEaasFbhvKmx1CAXt2Snw97WD+UFHiEmzC2cN7Uv
NcnNbdkZtoTzZtyPZ8nDHdlZtrKN7cQRzw52sovd7GEv+9jPARJIJInkcGbd
sz+1yMtd2blwBvXv0pjipA3fkY94kbLEMY5X2cc0fgpc/z/IeqzT
        "]]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0VUYEFUQBtAFpENAEAlRkA5B6ZbubgQpSenu7gbpVkKUTpUupTulu7tE
ybMPZ/+Hmbvf3DspGrWt0iZCEATJfRLFCIKTUYPgj2hBMIiaZCMRkdnLZFpQ
nPSc0v+nHEwtsvMJUTittl4OoTY5SExU/lHbIIdSh5wkIRpn1M5yjvNc4CKX
uMwVrnKN62x0ZhjfkoukROeG2iY5nLrkJhkxuKm2WY6gHnn4lJjcUtsiR/Id
eUlOLPYxhZaUIAO39W+Vo6hPPj4jNvuZyg+UJCN39G+To2lAfj4nDgeYRitK
kYm7+rfLMTSkACk4zlw6UpEPOch0WlOazOEemE9XqnLP/3bIsTSiIOdYRE9S
coKf6EQlLrKYvsTlEDNow3VWUobz/Epvvgz3zAK6he/KGqpxmaU8pH/4Jqzj
vtl2ynHhnDTmGit4RCF68QUn+Tk8Q+dwp6zmMZW5xBIe0C/cE2uJx2Fm0pYb
rKIsF/iNPmThDAvpTnWusIwB4X/N+pccz/d8QypOMY8uVCE+R5hFO8qRNby7
83/LCTShMKn5iKPMpj3l+Sq8v/5d8keaUoQ0JAjvrLZbTqQZRUlLQp6oPeUZ
z3nBv7zkP/7nFa95w1veETgbgYhEYg+TaE4x0vExx5hDByrwNWf5hR7U4CrL
Gchdfg/n4gPeA7vwpAY=
        "]], LineBox[CompressedData["
1:eJwV0necj3UAwPHn7LtsJWVkZiVFsik7I5wRaSE7d1b2JnuTvfdqUEIqyiiF
lB1llJ3tuDt3eD9/vH+f3+/7fJ/f6/l+v0++NrHRMRFBEOTxkSMqCO6mC4Kj
kUGwlI9pTBkKcImvGU1bahNn/jFdRm+ieZWC3HPtuC6nD00oSyHuu3ZCV9CX
ppTjeeJdSyCRBySRzEMeEZgTQQpS8hcr6UczylOYVJxkFf1pTgWKkJpTrGYA
b1GRoqThb9YwkBZUohiX2cQYPqQOafmHtQyiJZUpzhW+YSzteIN0nGYdg3mb
KrzAVTYzjvbUJZIzrGcIrajKbX5gKl0pwf9sYTwdqBeeAz/xKd2J4iyfMZR3
SGQPc3iNO2xnGjEks5cFvMg1tjIhPAPvze/akQf8zDzqh+fMTmaG+2ren9qD
R/xGBmOLwj3Rw/oE5/g8fE5jw8Jz1gOaUd/VubzOXXaE9xifHp6p/qGZNFYf
8ivp/V4YnpMe0pJc51smhu+J8YPaiSR+YT4NiGcXs+hJYO4+XRz+L//yBcN5
j2rE8SMz6MZL3GAbk+jMm+Ha+Y8vGcH7VOdlbvIdk+lCw3D9nGcDI/mAGpQK
18wFNvIJralJaTKThaxk40meIjtPk4NneJac5CI3eXiOvOTjIl8xijbU4hVu
8T1T+IhGJLCb2fQiwr7t1yVE+n4kfC7Nr48BEAaXuQ==
        "]]}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.994674723888705},
  Frame->{True, True, False, False},
  ImageSize->800,
  Method->{},
  PlotRange->{{0, 984.8857801796104}, Automatic},
  PlotRangeClipping->True,
  PlotRangePadding->{{19.697715603592208`, 19.697715603592208`}, {
   0.00022690666012768813`, 0.00022690666012768813`}}]], "Output",
 CellChangeTimes->{
  3.662404459246986*^9, 3.662404598895645*^9, 3.662405222464849*^9, 
   3.662405718428056*^9, 3.662406297584968*^9, 3.662406330339636*^9, 
   3.662406417572104*^9, 3.662406805347022*^9, 3.662406839001141*^9, {
   3.66240688798071*^9, 3.6624069126876163`*^9}, {3.662406984717441*^9, 
   3.662407012861548*^9}, {3.6624070836417437`*^9, 3.662407106780003*^9}, {
   3.662407909635324*^9, 3.662407928564303*^9}, 3.6624079656102057`*^9, 
   3.6624088419917307`*^9, 3.662408907167906*^9, {3.6624089455614347`*^9, 
   3.662408976175329*^9}, {3.662409014175234*^9, 3.662409088225396*^9}, 
   3.662409224178812*^9, 3.6624105841259403`*^9, 3.662410646600896*^9, {
   3.662411258379698*^9, 3.662411325108368*^9}, 3.662411411686612*^9, 
   3.662411460658895*^9, 3.662411832776853*^9, 3.662754828152622*^9, 
   3.662755118997655*^9, 3.662755189829032*^9, {3.662755219952276*^9, 
   3.6627552330088873`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 980},
WindowMargins->{{1280, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 210, 4, 92, "Title"],
Cell[792, 28, 373, 9, 81, "Subtitle"],
Cell[1168, 39, 182, 5, 49, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1375, 48, 107, 1, 80, "Section"],
Cell[1485, 51, 222, 5, 30, "Text"],
Cell[1710, 58, 1455, 37, 63, "Input"],
Cell[3168, 97, 231, 4, 30, "Text"],
Cell[3402, 103, 1949, 47, 97, "Input"],
Cell[5354, 152, 185, 4, 30, "Text"],
Cell[5542, 158, 1908, 55, 97, "Input"],
Cell[7453, 215, 178, 4, 30, "Text"],
Cell[7634, 221, 984, 27, 80, "Input"],
Cell[8621, 250, 210, 4, 30, "Text"],
Cell[8834, 256, 3542, 99, 114, "Input"],
Cell[12379, 357, 203, 4, 30, "Text"],
Cell[12585, 363, 5334, 154, 165, "Input"],
Cell[17922, 519, 154, 2, 30, "Text"],
Cell[18079, 523, 3146, 88, 97, "Input"],
Cell[21228, 613, 236, 5, 30, "Text"],
Cell[21467, 620, 4816, 141, 199, "Input"],
Cell[26286, 763, 175, 4, 30, "Text"],
Cell[26464, 769, 1360, 30, 63, "Input"],
Cell[27827, 801, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[27955, 806, 248, 5, 28, "Input"],
Cell[28206, 813, 2172, 39, 230, "Output"]
}, Open  ]],
Cell[30393, 855, 148, 4, 30, "Text"],
Cell[30544, 861, 1545, 48, 126, "Input"],
Cell[32092, 911, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[32219, 916, 770, 19, 28, "Input"],
Cell[32992, 937, 1250, 24, 81, "Output"]
}, Open  ]],
Cell[34257, 964, 125, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[34407, 971, 1060, 29, 80, "Input"],
Cell[35470, 1002, 936, 21, 67, "Output"]
}, Open  ]],
Cell[36421, 1026, 135, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[36581, 1033, 252, 6, 28, "Input"],
Cell[36836, 1041, 1107, 27, 77, "Output"]
}, Open  ]],
Cell[37958, 1071, 124, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[38107, 1078, 2299, 56, 233, "Input"],
Cell[40409, 1136, 4441, 83, 533, "Output"]
}, Open  ]],
Cell[44865, 1222, 180, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[45070, 1230, 2712, 74, 165, "Input"],
Cell[47785, 1306, 54972, 922, 503, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102806, 2234, 100, 1, 80, "Section"],
Cell[102909, 2237, 141, 3, 30, "Text"],
Cell[103053, 2242, 492, 13, 46, "Input"],
Cell[103548, 2257, 209, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[103782, 2264, 202, 4, 28, "Input"],
Cell[103987, 2270, 236, 4, 28, "Output"]
}, Open  ]],
Cell[104238, 2277, 376, 6, 49, "Text"],
Cell[104617, 2285, 112, 1, 30, "Text"],
Cell[104732, 2288, 228, 6, 28, "Input"],
Cell[104963, 2296, 205, 2, 30, "Text"],
Cell[105171, 2300, 1534, 37, 63, "Input"],
Cell[106708, 2339, 177, 2, 30, "Text"],
Cell[106888, 2343, 1007, 28, 97, "Input"],
Cell[107898, 2373, 170, 2, 30, "Text"],
Cell[108071, 2377, 1010, 22, 80, "Input"],
Cell[109084, 2401, 202, 2, 30, "Text"],
Cell[109289, 2405, 3542, 99, 114, "Input"],
Cell[112834, 2506, 195, 2, 30, "Text"],
Cell[113032, 2510, 5334, 154, 165, "Input"],
Cell[118369, 2666, 154, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[118548, 2672, 148, 3, 28, "Input"],
Cell[118699, 2677, 1274, 19, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120010, 2701, 203, 5, 28, "Input"],
Cell[120216, 2708, 2053, 29, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122306, 2742, 203, 5, 28, "Input"],
Cell[122512, 2749, 958, 15, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123507, 2769, 149, 3, 28, "Input"],
Cell[123659, 2774, 160, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123856, 2783, 612, 18, 28, "Input"],
Cell[124471, 2803, 1035, 17, 46, "Output"]
}, Open  ]],
Cell[125521, 2823, 3720, 106, 114, "Input"],
Cell[129244, 2931, 228, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[129497, 2938, 4828, 141, 199, "Input"],
Cell[134328, 3081, 730, 14, 56, "Message"],
Cell[135061, 3097, 714, 14, 56, "Message"],
Cell[135778, 3113, 711, 14, 56, "Message"],
Cell[136492, 3129, 712, 14, 56, "Message"],
Cell[137207, 3145, 732, 14, 56, "Message"],
Cell[137942, 3161, 951, 17, 73, "Message"],
Cell[138896, 3180, 951, 17, 73, "Message"],
Cell[139850, 3199, 951, 17, 73, "Message"],
Cell[140804, 3218, 1193, 20, 73, "Message"],
Cell[142000, 3240, 714, 14, 56, "Message"],
Cell[142717, 3256, 714, 14, 56, "Message"],
Cell[143434, 3272, 714, 14, 56, "Message"],
Cell[144151, 3288, 342, 9, 24, "Message"],
Cell[144496, 3299, 342, 9, 24, "Message"],
Cell[144841, 3310, 339, 9, 24, "Message"],
Cell[145183, 3321, 342, 9, 24, "Message"],
Cell[145528, 3332, 712, 14, 56, "Message"],
Cell[146243, 3348, 951, 17, 73, "Message"],
Cell[147197, 3367, 712, 14, 56, "Message"],
Cell[147912, 3383, 344, 9, 24, "Message"],
Cell[148259, 3394, 126, 2, 28, "Output"]
}, Open  ]],
Cell[148400, 3399, 167, 2, 30, "Text"],
Cell[148570, 3403, 1360, 30, 63, "Input"],
Cell[149933, 3435, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[150061, 3440, 248, 5, 28, "Input"],
Cell[150312, 3447, 2172, 39, 230, "Output"]
}, Open  ]],
Cell[152499, 3489, 140, 2, 30, "Text"],
Cell[152642, 3493, 1545, 48, 126, "Input"],
Cell[154190, 3543, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[154317, 3548, 770, 19, 28, "Input"],
Cell[155090, 3569, 1250, 24, 81, "Output"]
}, Open  ]],
Cell[156355, 3596, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[156497, 3601, 1060, 29, 80, "Input"],
Cell[157560, 3632, 936, 21, 67, "Output"]
}, Open  ]],
Cell[158511, 3656, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[158663, 3661, 252, 6, 28, "Input"],
Cell[158918, 3669, 1107, 27, 77, "Output"]
}, Open  ]],
Cell[160040, 3699, 116, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[160181, 3704, 2299, 56, 233, "Input"],
Cell[162483, 3762, 4441, 83, 533, "Output"]
}, Open  ]],
Cell[166939, 3848, 172, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[167136, 3854, 2712, 74, 165, "Input"],
Cell[169851, 3930, 54972, 922, 503, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
